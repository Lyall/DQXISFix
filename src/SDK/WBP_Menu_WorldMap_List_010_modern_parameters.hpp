#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_List_010_modern

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.SelectedMenuEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature final
{
public:
	class UWBP_Menu_WorldMap_List_010_modern_C*   Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectRura;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature) == 0x000010, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature, Sender) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature, bSelectRura) == 0x000008, "Member 'WBP_Menu_WorldMap_List_010_modern_C_SelectedMenuEvent__DelegateSignature::bSelectRura' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventTag)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventName, class UJackUMGItemBase* InItemBase)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_EventTag;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_AddUMGMenuWithSnap_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_Common_Setumei_000_modern_C*  K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAcquiredRura_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackUMGItemBase*>               K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue3;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeaOrSkyMap_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackWorldMapState                            K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsVisible;                     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0094(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern) == 0x0000D8, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, Temp_bool_Variable) == 0x000018, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_CustomEvent_EventTag) == 0x000030, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_SwitchName_CmpSuccess) == 0x000038, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_GetUMGManager_ReturnValue) == 0x000040, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_AddUMGMenuWithSnap_ReturnValue) == 0x000048, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_AddUMGMenuWithSnap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern) == 0x000050, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_GetAccessorSaveData_ReturnValue) == 0x000060, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_IsAcquiredRura_ReturnValue) == 0x000068, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_IsAcquiredRura_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_GetUMGManager_ReturnValue2) == 0x000080, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_GetUMGManager_ReturnValue3) == 0x000088, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_GetUMGManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, CallFunc_IsSeaOrSkyMap_ReturnValue) == 0x000090, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::CallFunc_IsSeaOrSkyMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_Select_Default) == 0x000091, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_CustomEvent_bIsVisible) == 0x000092, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_CustomEvent_bIsVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_Event_MyGeometry) == 0x000094, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern, K2Node_Event_InDeltaTime) == 0x0000D0, "Member 'WBP_Menu_WorldMap_List_010_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_010_modern::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_Tick");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_Tick) == 0x000040, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_Tick");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_WorldMap_List_010_modern_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_SetVisible final
{
public:
	bool                                          bIsVisible_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_SetVisible) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_SetVisible");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_SetVisible) == 0x000001, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_SetVisible");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_SetVisible, bIsVisible_0) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_SetVisible::bIsVisible_0' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.CustomEvent_0
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0 final
{
public:
	class FName                                   EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0) == 0x000008, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0, EventTag) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_CustomEvent_0::EventTag' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.OnItemListEvent
// 0x0038 (0x0038 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       ItemBase;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRuraAvailable_bAvaiable;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemId_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemId_ReturnValue2;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName3_CmpSuccess;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent) == 0x000038, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, EventName) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::EventName' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, ItemBase) == 0x000008, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::ItemBase' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, CallFunc_CheckRuraAvailable_bAvaiable) == 0x000010, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::CallFunc_CheckRuraAvailable_bAvaiable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, CallFunc_GetItemId_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, CallFunc_GetItemId_ReturnValue2) == 0x000028, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::CallFunc_GetItemId_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, K2Node_SwitchName2_CmpSuccess) == 0x000030, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent, K2Node_SwitchName3_CmpSuccess) == 0x000031, "Member 'WBP_Menu_WorldMap_List_010_modern_C_OnItemListEvent::K2Node_SwitchName3_CmpSuccess' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.UpdateMenuItem
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem final
{
public:
	bool                                          RuraMenuCanceled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSeaOrSkyMap_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem) == 0x000018, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, RuraMenuCanceled) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::RuraMenuCanceled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, Temp_bool_Variable) == 0x000001, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, CallFunc_TestsWorldMapState_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, CallFunc_IsSeaOrSkyMap_ReturnValue) == 0x000011, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::CallFunc_IsSeaOrSkyMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem, K2Node_Select_Default) == 0x000013, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuItem::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_010_modern.WBP_Menu_WorldMap_List_010_modern_C.UpdateMenuDescription
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription final
{
public:
	bool                                          bRuraMenuCanceled;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSeaOrSkyMap_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription");
static_assert(sizeof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription) == 0x000018, "Wrong size on WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, bRuraMenuCanceled) == 0x000000, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::bRuraMenuCanceled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, Temp_bool_Variable) == 0x000001, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_TestsWorldMapState_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_IsSeaOrSkyMap_ReturnValue) == 0x000011, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_IsSeaOrSkyMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_Not_PreBool_ReturnValue2) == 0x000012, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription, K2Node_Select_Default) == 0x000014, "Member 'WBP_Menu_WorldMap_List_010_modern_C_UpdateMenuDescription::K2Node_Select_Default' has a wrong offset!");

}


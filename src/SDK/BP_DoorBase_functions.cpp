#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorBase

#include "Basic.hpp"

#include "BP_DoorBase_classes.hpp"
#include "BP_DoorBase_parameters.hpp"


namespace SDK
{

// Function BP_DoorBase.BP_DoorBase_C.ExecuteUbergraph_BP_DoorBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::ExecuteUbergraph_BP_DoorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "ExecuteUbergraph_BP_DoorBase");

	Params::BP_DoorBase_C_ExecuteUbergraph_BP_DoorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.ForceOpen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::ForceOpen(bool Inside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "ForceOpen");

	Params::BP_DoorBase_C_ForceOpen Parms{};

	Parms.Inside = Inside;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.SetDoorAllCloseEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoCloseEnable_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetDoorAllCloseEnable(bool AutoCloseEnable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetDoorAllCloseEnable");

	Params::BP_DoorBase_C_SetDoorAllCloseEnable Parms{};

	Parms.AutoCloseEnable_0 = AutoCloseEnable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.DoorClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::DoorClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "DoorClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorBase_C::BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__PlayerOverlapSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.MapJumpBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::MapJumpBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "MapJumpBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.TryToCloseDoor
// (BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::TryToCloseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "TryToCloseDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DoorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__BlockClosingVolume_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::BndEvt__BlockClosingVolume_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__BlockClosingVolume_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__BlockClosingVolume_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_144_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_144_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_144_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_144_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_138_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorBase_C::BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_138_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_138_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__OutsideTriggerBox_K2Node_ComponentBoundEvent_138_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__InteractiveActorComponent_K2Node_ComponentBoundEvent_108_ComponentInteractSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::BndEvt__InteractiveActorComponent_K2Node_ComponentBoundEvent_108_ComponentInteractSignature__DelegateSignature(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__InteractiveActorComponent_K2Node_ComponentBoundEvent_108_ComponentInteractSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__InteractiveActorComponent_K2Node_ComponentBoundEvent_108_ComponentInteractSignature__DelegateSignature Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_52_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_52_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_52_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_52_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_39_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorBase_C::BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_39_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_39_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_DoorBase_C_BndEvt__InsideTriggerBox_K2Node_ComponentBoundEvent_39_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.MapJumpEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::MapJumpEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "MapJumpEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.EndNijiiroNoEdaEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::EndNijiiroNoEdaEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "EndNijiiroNoEdaEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.StartNijiiroNoEdaEffect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::StartNijiiroNoEdaEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "StartNijiiroNoEdaEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.GuideTreeEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::GuideTreeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "GuideTreeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.SetBattleAfterNav
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::SetBattleAfterNav()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetBattleAfterNav");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.SetBattleBeforeNav
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::SetBattleBeforeNav()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetBattleBeforeNav");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.Character Movement Enabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::Character_Movement_Enabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "Character Movement Enabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.UnlockInside
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::UnlockInside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "UnlockInside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.UnlockOutside
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::UnlockOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "UnlockOutside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.Close
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.SetAutoCloseEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoCloseEnable_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetAutoCloseEnable(bool AutoCloseEnable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetAutoCloseEnable");

	Params::BP_DoorBase_C_SetAutoCloseEnable Parms{};

	Parms.AutoCloseEnable_0 = AutoCloseEnable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.SetDoorVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Collision                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetDoorVisible(bool Visible, bool Collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetDoorVisible");

	Params::BP_DoorBase_C_SetDoorVisible Parms{};

	Parms.Visible = Visible;
	Parms.Collision = Collision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.OpenDoorFinish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::OpenDoorFinish(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "OpenDoorFinish");

	Params::BP_DoorBase_C_OpenDoorFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_DoorBase.BP_DoorBase_C.SetPauseWithAllComponents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPause                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetPauseWithAllComponents(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetPauseWithAllComponents");

	Params::BP_DoorBase_C_SetPauseWithAllComponents Parms{};

	Parms.bPause = bPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.SetInteractDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetInteractDisable(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetInteractDisable");

	Params::BP_DoorBase_C_SetInteractDisable Parms{};

	Parms.bDisable = bDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.CompleteInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::CompleteInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "CompleteInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.SetNPCAfterMoveLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NPCAfterMoveLocation                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorBase_C::SetNPCAfterMoveLocation(const struct FVector& NPCAfterMoveLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetNPCAfterMoveLocation");

	Params::BP_DoorBase_C_SetNPCAfterMoveLocation Parms{};

	Parms.NPCAfterMoveLocation = std::move(NPCAfterMoveLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.IsOverlappingAnyTriggerBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOverlapping                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::IsOverlappingAnyTriggerBox(class AActor* Other, bool* bOverlapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "IsOverlappingAnyTriggerBox");

	Params::BP_DoorBase_C_IsOverlappingAnyTriggerBox Parms{};

	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);

	if (bOverlapping != nullptr)
		*bOverlapping = Parms.bOverlapping;
}


// Function BP_DoorBase.BP_DoorBase_C.SetInteractEnableIfClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::SetInteractEnableIfClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetInteractEnableIfClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.GetDoorAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequence*                    Animation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDegree110                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::GetDoorAnimation(bool Inside, bool Open, class UAnimSequence** Animation, bool* bDegree110)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "GetDoorAnimation");

	Params::BP_DoorBase_C_GetDoorAnimation Parms{};

	Parms.Inside = Inside;
	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);

	if (Animation != nullptr)
		*Animation = Parms.Animation;

	if (bDegree110 != nullptr)
		*bDegree110 = Parms.bDegree110;
}


// Function BP_DoorBase.BP_DoorBase_C.ConvertDoorAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    InAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*                    OutAnimation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDegree110                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::ConvertDoorAnimation(class UAnimSequence* InAnimation, class UAnimSequence** OutAnimation, bool* bDegree110)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "ConvertDoorAnimation");

	Params::BP_DoorBase_C_ConvertDoorAnimation Parms{};

	Parms.InAnimation = InAnimation;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimation != nullptr)
		*OutAnimation = Parms.OutAnimation;

	if (bDegree110 != nullptr)
		*bDegree110 = Parms.bDegree110;
}


// Function BP_DoorBase.BP_DoorBase_C.CheckUnlockFlagAfter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::CheckUnlockFlagAfter(bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "CheckUnlockFlagAfter");

	Params::BP_DoorBase_C_CheckUnlockFlagAfter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_DoorBase.BP_DoorBase_C.CheckUnlockFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorBase_C::CheckUnlockFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "CheckUnlockFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorBase.BP_DoorBase_C.CalcDoorCloseSoundDelayTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDegree110                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DoorBase_C::CalcDoorCloseSoundDelayTime(bool bDegree110)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "CalcDoorCloseSoundDelayTime");

	Params::BP_DoorBase_C_CalcDoorCloseSoundDelayTime Parms{};

	Parms.bDegree110 = bDegree110;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DoorBase.BP_DoorBase_C.GetUnlockAnimMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   Self2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* ABP_DoorBase_C::GetUnlockAnimMontage(class AJackCharacter* Self2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "GetUnlockAnimMontage");

	Params::BP_DoorBase_C_GetUnlockAnimMontage Parms{};

	Parms.Self2 = Self2;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DoorBase.BP_DoorBase_C.SetNavModifierDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Door_Close                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorBase_C::SetNavModifierDoor(bool Door_Close)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "SetNavModifierDoor");

	Params::BP_DoorBase_C_SetNavModifierDoor Parms{};

	Parms.Door_Close = Door_Close;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorBase.BP_DoorBase_C.GetCharacterAnimMontageToOpenDoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AJackCharacter*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* ABP_DoorBase_C::GetCharacterAnimMontageToOpenDoor(class AJackCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorBase_C", "GetCharacterAnimMontageToOpenDoor");

	Params::BP_DoorBase_C_GetCharacterAnimMontageToOpenDoor Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


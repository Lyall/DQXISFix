#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tokugi_Skill_Line_000

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C.ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue2;      // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue3;      // 0x001C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue4;      // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Scale;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0080(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue3;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue5;      // 0x009C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSealed;                        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue6;      // 0x00BC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select2_Default;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000");
static_assert(sizeof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000) == 0x0000D8, "Wrong size on WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, EntryPoint) == 0x000000, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, Temp_bool_Variable) == 0x000004, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, Temp_bool_Variable2) == 0x000005, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000008, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue2) == 0x000010, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue3) == 0x00001C, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue4) == 0x000024, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_Event_MyGeometry) == 0x00002C, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_Event_InDeltaTime) == 0x000068, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_CustomEvent_Position) == 0x00006C, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_CustomEvent_Scale) == 0x000074, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000080, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_SlotAsCanvasSlot_ReturnValue2) == 0x000088, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_SlotAsCanvasSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_SlotAsCanvasSlot_ReturnValue3) == 0x000090, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_SlotAsCanvasSlot_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue5) == 0x00009C, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_CustomEvent_bSealed) == 0x0000A4, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_CustomEvent_bSealed' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_MakeStruct_LinearColor) == 0x0000A8, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_MathExpression_ReturnValue) == 0x0000B8, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_Multiply_Vector2DFloat_ReturnValue6) == 0x0000BC, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_Multiply_Vector2DFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_BooleanOR_ReturnValue) == 0x0000C4, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C5, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000, K2Node_Select2_Default) == 0x0000D0, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000::K2Node_Select2_Default' has a wrong offset!");

// Function WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C.PlayInAnim
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim final
{
public:
	bool                                          bSealed_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim) == 0x000001, "Wrong alignment on WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim");
static_assert(sizeof(WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim) == 0x000001, "Wrong size on WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim, bSealed_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_PlayInAnim::bSealed_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C.SetScale
// 0x0004 (0x0004 - 0x0000)
struct WBP_Menu_Tokugi_Skill_Line_000_C_SetScale final
{
public:
	float                                         Scale_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Skill_Line_000_C_SetScale) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Skill_Line_000_C_SetScale");
static_assert(sizeof(WBP_Menu_Tokugi_Skill_Line_000_C_SetScale) == 0x000004, "Wrong size on WBP_Menu_Tokugi_Skill_Line_000_C_SetScale");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_SetScale, Scale_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_SetScale::Scale_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition final
{
public:
	struct FVector2D                              Position_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition");
static_assert(sizeof(WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition, Position_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_SetPosition::Position_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_Tokugi_Skill_Line_000_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Skill_Line_000_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Skill_Line_000_C_Tick");
static_assert(sizeof(WBP_Menu_Tokugi_Skill_Line_000_C_Tick) == 0x000040, "Wrong size on WBP_Menu_Tokugi_Skill_Line_000_C_Tick");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Skill_Line_000_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_Tokugi_Skill_Line_000_C_Tick::InDeltaTime' has a wrong offset!");

}


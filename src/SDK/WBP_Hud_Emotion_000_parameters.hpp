#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_Emotion_000

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Hud_Emotion_000.WBP_Hud_Emotion_000_C.ExecuteUbergraph_WBP_Hud_Emotion_000
// 0x0014 (0x0014 - 0x0000)
struct WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackMonsterEmotionIcon                       K2Node_CustomEvent_EmotionType;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPlay2dSe;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000) == 0x000004, "Wrong alignment on WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000");
static_assert(sizeof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000) == 0x000014, "Wrong size on WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, EntryPoint) == 0x000000, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_byte_Variable) == 0x000004, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_bool_Variable) == 0x000005, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_byte_Variable2) == 0x000006, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_byte_Variable3) == 0x000007, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_bool_Variable2) == 0x000008, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, K2Node_CustomEvent_EmotionType) == 0x000009, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::K2Node_CustomEvent_EmotionType' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, K2Node_CustomEvent_bPlay2dSe) == 0x00000A, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::K2Node_CustomEvent_bPlay2dSe' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000C, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, K2Node_Select_Default) == 0x00000E, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, Temp_byte_Variable4) == 0x00000F, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000, K2Node_Select2_Default) == 0x000010, "Member 'WBP_Hud_Emotion_000_C_ExecuteUbergraph_WBP_Hud_Emotion_000::K2Node_Select2_Default' has a wrong offset!");

// Function WBP_Hud_Emotion_000.WBP_Hud_Emotion_000_C.InitData
// 0x0002 (0x0002 - 0x0000)
struct WBP_Hud_Emotion_000_C_InitData final
{
public:
	EJackMonsterEmotionIcon                       EmotionType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlay2dSe;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Hud_Emotion_000_C_InitData) == 0x000001, "Wrong alignment on WBP_Hud_Emotion_000_C_InitData");
static_assert(sizeof(WBP_Hud_Emotion_000_C_InitData) == 0x000002, "Wrong size on WBP_Hud_Emotion_000_C_InitData");
static_assert(offsetof(WBP_Hud_Emotion_000_C_InitData, EmotionType) == 0x000000, "Member 'WBP_Hud_Emotion_000_C_InitData::EmotionType' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Emotion_000_C_InitData, bPlay2dSe) == 0x000001, "Member 'WBP_Hud_Emotion_000_C_InitData::bPlay2dSe' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AutoCameraCollisionManager

#include "Basic.hpp"

#include "STRUCT_DT_AutoCameraCollision_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.ExecuteUbergraph_BP_AutoCameraCollisionManager
// 0x0048 (0x0048 - 0x0000)
struct BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EJackBattleCameraCategory BattleCameraCategory)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EJackBattleCameraCategory BattleCameraCategory)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	EJackBattleCameraCategory                     K2Node_CustomEvent_BattleCameraCategory2;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackBattleCameraCategory                     K2Node_CustomEvent_BattleCameraCategory;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager) == 0x000048, "Wrong size on BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, EntryPoint) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, CallFunc_GetBattleManager_ReturnValue) == 0x000028, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, K2Node_CreateDelegate_OutputDelegate3) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, K2Node_CustomEvent_BattleCameraCategory2) == 0x000040, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::K2Node_CustomEvent_BattleCameraCategory2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager, K2Node_CustomEvent_BattleCameraCategory) == 0x000041, "Member 'BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager::K2Node_CustomEvent_BattleCameraCategory' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.OnBattleCameraEndDelegate_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event final
{
public:
	EJackBattleCameraCategory                     BattleCameraCategory;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event) == 0x000001, "Wrong alignment on BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event) == 0x000001, "Wrong size on BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event, BattleCameraCategory) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event::BattleCameraCategory' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.OnBattleCameraStartDelegate_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event final
{
public:
	EJackBattleCameraCategory                     BattleCameraCategory;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event) == 0x000001, "Wrong alignment on BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event) == 0x000001, "Wrong size on BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event, BattleCameraCategory) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event::BattleCameraCategory' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_AutoCameraCollisionManager_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsGameWorld_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_AutoCameraCollisionManager_C_UserConstructionScript");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_UserConstructionScript) == 0x000001, "Wrong size on BP_AutoCameraCollisionManager_C_UserConstructionScript");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_UserConstructionScript, CallFunc_IsGameWorld_ReturnValue) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_UserConstructionScript::CallFunc_IsGameWorld_ReturnValue' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.PutCollision
// 0x0060 (0x0060 - 0x0000)
struct BP_AutoCameraCollisionManager_C_PutCollision final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item2;                          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_PutCollision) == 0x000010, "Wrong alignment on BP_AutoCameraCollisionManager_C_PutCollision");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_PutCollision) == 0x000060, "Wrong size on BP_AutoCameraCollisionManager_C_PutCollision");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_Array_Get_Item2) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_PutCollision, CallFunc_AddComponent_ReturnValue) == 0x000058, "Member 'BP_AutoCameraCollisionManager_C_PutCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.CalcCollisionData
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AutoCameraCollisionManager_C_CalcCollisionData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorsByTag_bSuccess;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsByTag_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item2;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item3;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_CalcCollisionData) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_CalcCollisionData");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_CalcCollisionData) == 0x0000C8, "Wrong size on BP_AutoCameraCollisionManager_C_CalcCollisionData");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Array_Index_Variable2) == 0x000004, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Array_Index_Variable3) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Loop_Counter_Variable2) == 0x000014, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Add_IntInt_ReturnValue2) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, Temp_int_Loop_Counter_Variable3) == 0x00001C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_GetActorsByTag_bSuccess) == 0x00003C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_GetActorsByTag_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_GetActorsByTag_ReturnValue) == 0x000040, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_GetActorsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Get_Item2) == 0x000058, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Length_ReturnValue2) == 0x000060, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Less_IntInt_ReturnValue2) == 0x000078, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_FindSubstring_ReturnValue) == 0x00007C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Add_IntInt_ReturnValue3) == 0x000084, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_GetAllActorsOfClass_OutActors) == 0x000088, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Length_ReturnValue3) == 0x000098, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Array_Get_Item3) == 0x0000A0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Less_IntInt_ReturnValue3) == 0x0000A8, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionData, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.CalcCollisionDataNearBattleField
// 0x0138 (0x0138 - 0x0000)
struct BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField final
{
public:
	TArray<struct FVector>                        TempBattleField;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          RemoveIndexFlag;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item3;                          // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item4;                          // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BattleFieldGenerator_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleFieldGenerator_C*             CallFunc_Array_Get_Item5;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x00EC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue2;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVolume*>                        CallFunc_GetPermitVolumeArray_ReturnValue;         // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVolume*                                CallFunc_Array_Get_Item6;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue5;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue3;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField) == 0x000138, "Wrong size on BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, TempBattleField) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::TempBattleField' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, RemoveIndexFlag) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::RemoveIndexFlag' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Index_0) == 0x000014, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Loop_Counter_Variable2) == 0x00001C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_IntInt_ReturnValue2) == 0x000024, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Loop_Counter_Variable3) == 0x00002C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_IntInt_ReturnValue3) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Loop_Counter_Variable4) == 0x000034, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_IntInt_ReturnValue4) == 0x000038, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Array_Index_Variable2) == 0x00003C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Array_Index_Variable3) == 0x000040, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_AddUnique_ReturnValue) == 0x000064, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item2) == 0x000068, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, Temp_int_Array_Index_Variable4) == 0x00006C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000074, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item3) == 0x000080, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Length_ReturnValue2) == 0x00008C, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Less_IntInt_ReturnValue2) == 0x000090, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Less_IntInt_ReturnValue3) == 0x000091, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item4) == 0x000098, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_VSize_ReturnValue) == 0x0000BC, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_LastIndex_ReturnValue) == 0x0000C4, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Length_ReturnValue3) == 0x0000D8, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item5) == 0x0000E0, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Less_IntInt_ReturnValue4) == 0x0000E8, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x0000EC, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_AddUnique_ReturnValue2) == 0x0000F8, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_AddUnique_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_GetPermitVolumeArray_ReturnValue) == 0x000100, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_GetPermitVolumeArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Length_ReturnValue4) == 0x000110, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_Get_Item6) == 0x000118, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Less_IntInt_ReturnValue5) == 0x000120, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Less_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x000124, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField, CallFunc_Array_AddUnique_ReturnValue3) == 0x000130, "Member 'BP_AutoCameraCollisionManager_C_CalcCollisionDataNearBattleField::CallFunc_Array_AddUnique_ReturnValue3' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.IsCollisionEnableDistance
// 0x0048 (0x0048 - 0x0000)
struct BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance final
{
public:
	struct FVector                                CollisionLocation_0;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInfinityBattleField_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance) == 0x000048, "Wrong size on BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CollisionLocation_0) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CollisionLocation_0' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, Enable) == 0x00000C, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::Enable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, Temp_bool_Variable) == 0x00000D, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_IsInfinityBattleField_ReturnValue) == 0x000024, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_IsInfinityBattleField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, K2Node_Select_Default) == 0x000038, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000045, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.SetCameraCollisionEnable
// 0x0068 (0x0068 - 0x0000)
struct BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable final
{
public:
	TArray<class USceneComponent*>                TempComponents;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCollisionEnableDistance_Enable;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable) == 0x000068, "Wrong size on BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, TempComponents) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::TempComponents' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, K2Node_DynamicCast_AsSphere_Collision) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_IsCollisionEnableDistance_Enable) == 0x000050, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_IsCollisionEnableDistance_Enable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable, CallFunc_GetChildrenComponents_Children) == 0x000058, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionEnable::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.SetCameraCollisionDisable
// 0x0058 (0x0058 - 0x0000)
struct BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable final
{
public:
	TArray<class USceneComponent*>                TempComponents;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable) == 0x000058, "Wrong size on BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, TempComponents) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::TempComponents' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, K2Node_DynamicCast_AsSphere_Collision) == 0x000028, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable, CallFunc_GetChildrenComponents_Children) == 0x000048, "Member 'BP_AutoCameraCollisionManager_C_SetCameraCollisionDisable::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.AddCollisionFromDT
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AutoCameraCollisionManager_C_AddCollisionFromDT final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Key;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DT_AutoCameraCollision         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0054(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0064(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0080(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT) == 0x000008, "Wrong alignment on BP_AutoCameraCollisionManager_C_AddCollisionFromDT");
static_assert(sizeof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT) == 0x0000A8, "Wrong size on BP_AutoCameraCollisionManager_C_AddCollisionFromDT");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, Actor) == 0x000000, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::Actor' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, Key) == 0x000008, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::Key' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000020, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_GetActorScale3D_ReturnValue) == 0x000030, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000054, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000064, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000080, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AutoCameraCollisionManager_C_AddCollisionFromDT, CallFunc_Array_Add_ReturnValue2) == 0x0000A4, "Member 'BP_AutoCameraCollisionManager_C_AddCollisionFromDT::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");

}


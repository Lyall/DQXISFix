#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LadderBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// DelegateFunction BP_LadderBase.BP_LadderBase_C.PlayableLadderMovementModeChangeStateDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature final
{
public:
	EJackLadderMovementState                      bpp__MovementState__pf;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature) == 0x000001, "Wrong alignment on BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature) == 0x000001, "Wrong size on BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature, bpp__MovementState__pf) == 0x000000, "Member 'BP_LadderBase_C_PlayableLadderMovementModeChangeStateDelegate__DelegateSignature::bpp__MovementState__pf' has a wrong offset!");

// DelegateFunction BP_LadderBase.BP_LadderBase_C.PlayableLadderMovementModeStepDelegate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature final
{
public:
	bool                                          bpp__bRightHandUp__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         bpp__MovementRate__pf;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature) == 0x000004, "Wrong alignment on BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature) == 0x000008, "Wrong size on BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature, bpp__bRightHandUp__pf) == 0x000000, "Member 'BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature::bpp__bRightHandUp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature, bpp__MovementRate__pf) == 0x000004, "Member 'BP_LadderBase_C_PlayableLadderMovementModeStepDelegate__DelegateSignature::bpp__MovementRate__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_35_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__CylinderA_K2Node_ComponentBoundEvent_44_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_54_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__CylinderB_K2Node_ComponentBoundEvent_95_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature final
{
public:
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong size on BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__JackInteractiveActorA_K2Node_ComponentBoundEvent_86_ComponentInteractSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature final
{
public:
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong size on BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__JackInteractiveActorB_K2Node_ComponentBoundEvent_121_ComponentInteractSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_LadderBase_C_BndEvt__MapJumpTriggerBox_K2Node_ComponentBoundEvent_300_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__SphereA_K2Node_ComponentBoundEvent_189_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_231_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_LadderBase_C_BndEvt__SphereB_K2Node_ComponentBoundEvent_240_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.ExecuteUbergraph_BP_LadderBase_1
// 0x0004 (0x0004 - 0x0000)
struct BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1) == 0x000004, "Wrong alignment on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1");
static_assert(sizeof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1) == 0x000004, "Wrong size on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1");
static_assert(offsetof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_1::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.ExecuteUbergraph_BP_LadderBase_2
// 0x0004 (0x0004 - 0x0000)
struct BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2) == 0x000004, "Wrong alignment on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2");
static_assert(sizeof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2) == 0x000004, "Wrong size on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2");
static_assert(offsetof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_2::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.ExecuteUbergraph_BP_LadderBase_4
// 0x0004 (0x0004 - 0x0000)
struct BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4) == 0x000004, "Wrong alignment on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4");
static_assert(sizeof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4) == 0x000004, "Wrong size on BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4");
static_assert(offsetof(BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_LadderBase_C_ExecuteUbergraph_BP_LadderBase_4::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.GetLadderMovementMode
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_GetLadderMovementMode final
{
public:
	class UJackPlayableLadderMovementMode*        bpp__AsJackxPlayablexLadderxMovementxMode__pfTTTT; // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_GetLadderMovementMode) == 0x000008, "Wrong alignment on BP_LadderBase_C_GetLadderMovementMode");
static_assert(sizeof(BP_LadderBase_C_GetLadderMovementMode) == 0x000008, "Wrong size on BP_LadderBase_C_GetLadderMovementMode");
static_assert(offsetof(BP_LadderBase_C_GetLadderMovementMode, bpp__AsJackxPlayablexLadderxMovementxMode__pfTTTT) == 0x000000, "Member 'BP_LadderBase_C_GetLadderMovementMode::bpp__AsJackxPlayablexLadderxMovementxMode__pfTTTT' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.InpActEvt_MoveDown_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   bpp__Key__pf;                                      // 0x0000(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1, bpp__Key__pf) == 0x000000, "Member 'BP_LadderBase_C_InpActEvt_MoveDown_K2Node_InputActionEvent_1::bpp__Key__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.IsAutoMovementEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_IsAutoMovementEnable final
{
public:
	bool                                          bpp__bEnable__pf;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_IsAutoMovementEnable) == 0x000001, "Wrong alignment on BP_LadderBase_C_IsAutoMovementEnable");
static_assert(sizeof(BP_LadderBase_C_IsAutoMovementEnable) == 0x000001, "Wrong size on BP_LadderBase_C_IsAutoMovementEnable");
static_assert(offsetof(BP_LadderBase_C_IsAutoMovementEnable, bpp__bEnable__pf) == 0x000000, "Member 'BP_LadderBase_C_IsAutoMovementEnable::bpp__bEnable__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.IsAutoRapeling
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_IsAutoRapeling final
{
public:
	bool                                          bpp__bRapeling__pf;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_IsAutoRapeling) == 0x000001, "Wrong alignment on BP_LadderBase_C_IsAutoRapeling");
static_assert(sizeof(BP_LadderBase_C_IsAutoRapeling) == 0x000001, "Wrong size on BP_LadderBase_C_IsAutoRapeling");
static_assert(offsetof(BP_LadderBase_C_IsAutoRapeling, bpp__bRapeling__pf) == 0x000000, "Member 'BP_LadderBase_C_IsAutoRapeling::bpp__bRapeling__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnMovementStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_OnMovementStateChanged final
{
public:
	EJackLadderMovementState                      bpp__MovementState__pf;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnMovementStateChanged) == 0x000001, "Wrong alignment on BP_LadderBase_C_OnMovementStateChanged");
static_assert(sizeof(BP_LadderBase_C_OnMovementStateChanged) == 0x000001, "Wrong size on BP_LadderBase_C_OnMovementStateChanged");
static_assert(offsetof(BP_LadderBase_C_OnMovementStateChanged, bpp__MovementState__pf) == 0x000000, "Member 'BP_LadderBase_C_OnMovementStateChanged::bpp__MovementState__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnMovementStateChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_OnMovementStateChanged_Event_0 final
{
public:
	EJackLadderMovementState                      bpp__MovementState__pf;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnMovementStateChanged_Event_0) == 0x000001, "Wrong alignment on BP_LadderBase_C_OnMovementStateChanged_Event_0");
static_assert(sizeof(BP_LadderBase_C_OnMovementStateChanged_Event_0) == 0x000001, "Wrong size on BP_LadderBase_C_OnMovementStateChanged_Event_0");
static_assert(offsetof(BP_LadderBase_C_OnMovementStateChanged_Event_0, bpp__MovementState__pf) == 0x000000, "Member 'BP_LadderBase_C_OnMovementStateChanged_Event_0::bpp__MovementState__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnStepDown
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_OnStepDown final
{
public:
	bool                                          bpp__bRightHandUp__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         bpp__MovementRate__pf;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnStepDown) == 0x000004, "Wrong alignment on BP_LadderBase_C_OnStepDown");
static_assert(sizeof(BP_LadderBase_C_OnStepDown) == 0x000008, "Wrong size on BP_LadderBase_C_OnStepDown");
static_assert(offsetof(BP_LadderBase_C_OnStepDown, bpp__bRightHandUp__pf) == 0x000000, "Member 'BP_LadderBase_C_OnStepDown::bpp__bRightHandUp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_OnStepDown, bpp__MovementRate__pf) == 0x000004, "Member 'BP_LadderBase_C_OnStepDown::bpp__MovementRate__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnStepDown_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_OnStepDown_Event_0 final
{
public:
	bool                                          bpp__bRightHandUp__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         bpp__MovementRate__pf;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnStepDown_Event_0) == 0x000004, "Wrong alignment on BP_LadderBase_C_OnStepDown_Event_0");
static_assert(sizeof(BP_LadderBase_C_OnStepDown_Event_0) == 0x000008, "Wrong size on BP_LadderBase_C_OnStepDown_Event_0");
static_assert(offsetof(BP_LadderBase_C_OnStepDown_Event_0, bpp__bRightHandUp__pf) == 0x000000, "Member 'BP_LadderBase_C_OnStepDown_Event_0::bpp__bRightHandUp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_OnStepDown_Event_0, bpp__MovementRate__pf) == 0x000004, "Member 'BP_LadderBase_C_OnStepDown_Event_0::bpp__MovementRate__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnStepUp
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_OnStepUp final
{
public:
	bool                                          bpp__bRigheHandUp__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         bpp__MovementRate__pf;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnStepUp) == 0x000004, "Wrong alignment on BP_LadderBase_C_OnStepUp");
static_assert(sizeof(BP_LadderBase_C_OnStepUp) == 0x000008, "Wrong size on BP_LadderBase_C_OnStepUp");
static_assert(offsetof(BP_LadderBase_C_OnStepUp, bpp__bRigheHandUp__pf) == 0x000000, "Member 'BP_LadderBase_C_OnStepUp::bpp__bRigheHandUp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_OnStepUp, bpp__MovementRate__pf) == 0x000004, "Member 'BP_LadderBase_C_OnStepUp::bpp__MovementRate__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.OnStepUp_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_OnStepUp_Event_0 final
{
public:
	bool                                          bpp__bRightHandUp__pf;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         bpp__MovementRate__pf;                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_OnStepUp_Event_0) == 0x000004, "Wrong alignment on BP_LadderBase_C_OnStepUp_Event_0");
static_assert(sizeof(BP_LadderBase_C_OnStepUp_Event_0) == 0x000008, "Wrong size on BP_LadderBase_C_OnStepUp_Event_0");
static_assert(offsetof(BP_LadderBase_C_OnStepUp_Event_0, bpp__bRightHandUp__pf) == 0x000000, "Member 'BP_LadderBase_C_OnStepUp_Event_0::bpp__bRightHandUp__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_OnStepUp_Event_0, bpp__MovementRate__pf) == 0x000004, "Member 'BP_LadderBase_C_OnStepUp_Event_0::bpp__MovementRate__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetAnimationTime
// 0x0008 (0x0008 - 0x0000)
struct BP_LadderBase_C_SetAnimationTime final
{
public:
	float                                         bpp__AnimationTime__pf;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__SnapTime__pf;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_SetAnimationTime) == 0x000004, "Wrong alignment on BP_LadderBase_C_SetAnimationTime");
static_assert(sizeof(BP_LadderBase_C_SetAnimationTime) == 0x000008, "Wrong size on BP_LadderBase_C_SetAnimationTime");
static_assert(offsetof(BP_LadderBase_C_SetAnimationTime, bpp__AnimationTime__pf) == 0x000000, "Member 'BP_LadderBase_C_SetAnimationTime::bpp__AnimationTime__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetAnimationTime, bpp__SnapTime__pf) == 0x000004, "Member 'BP_LadderBase_C_SetAnimationTime::bpp__SnapTime__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetAutoMovementEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_SetAutoMovementEnable final
{
public:
	bool                                          bpp__bEnable__pf;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_SetAutoMovementEnable) == 0x000001, "Wrong alignment on BP_LadderBase_C_SetAutoMovementEnable");
static_assert(sizeof(BP_LadderBase_C_SetAutoMovementEnable) == 0x000001, "Wrong size on BP_LadderBase_C_SetAutoMovementEnable");
static_assert(offsetof(BP_LadderBase_C_SetAutoMovementEnable, bpp__bEnable__pf) == 0x000000, "Member 'BP_LadderBase_C_SetAutoMovementEnable::bpp__bEnable__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetAutoRapeling
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_SetAutoRapeling final
{
public:
	bool                                          bpp__bEnable__pf;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_SetAutoRapeling) == 0x000001, "Wrong alignment on BP_LadderBase_C_SetAutoRapeling");
static_assert(sizeof(BP_LadderBase_C_SetAutoRapeling) == 0x000001, "Wrong size on BP_LadderBase_C_SetAutoRapeling");
static_assert(offsetof(BP_LadderBase_C_SetAutoRapeling, bpp__bEnable__pf) == 0x000000, "Member 'BP_LadderBase_C_SetAutoRapeling::bpp__bEnable__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetInputEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_LadderBase_C_SetInputEnable final
{
public:
	bool                                          bpp__bEnable__pf;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_LadderBase_C_SetInputEnable) == 0x000001, "Wrong alignment on BP_LadderBase_C_SetInputEnable");
static_assert(sizeof(BP_LadderBase_C_SetInputEnable) == 0x000001, "Wrong size on BP_LadderBase_C_SetInputEnable");
static_assert(offsetof(BP_LadderBase_C_SetInputEnable, bpp__bEnable__pf) == 0x000000, "Member 'BP_LadderBase_C_SetInputEnable::bpp__bEnable__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetLadderMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_LadderBase_C_SetLadderMesh final
{
public:
	class UStaticMesh*                            bpp__Mesh__pf;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__Count__pf;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__Height__pf;                                   // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__BoundsScale__pf;                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_SetLadderMesh) == 0x000008, "Wrong alignment on BP_LadderBase_C_SetLadderMesh");
static_assert(sizeof(BP_LadderBase_C_SetLadderMesh) == 0x000018, "Wrong size on BP_LadderBase_C_SetLadderMesh");
static_assert(offsetof(BP_LadderBase_C_SetLadderMesh, bpp__Mesh__pf) == 0x000000, "Member 'BP_LadderBase_C_SetLadderMesh::bpp__Mesh__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetLadderMesh, bpp__Count__pf) == 0x000008, "Member 'BP_LadderBase_C_SetLadderMesh::bpp__Count__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetLadderMesh, bpp__Height__pf) == 0x00000C, "Member 'BP_LadderBase_C_SetLadderMesh::bpp__Height__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetLadderMesh, bpp__BoundsScale__pf) == 0x000010, "Member 'BP_LadderBase_C_SetLadderMesh::bpp__BoundsScale__pf' has a wrong offset!");

// Function BP_LadderBase.BP_LadderBase_C.SetStartTemporaryVariables
// 0x0028 (0x0028 - 0x0000)
struct BP_LadderBase_C_SetStartTemporaryVariables final
{
public:
	class AActor*                                 bpp__Actor__pf;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        bpp__BeginArrow__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         bpp__InteractiveActorComponent__pf;                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   bpp__AnimMontageName__pf;                          // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__StepIndex__pf;                                // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_LadderBase_C_SetStartTemporaryVariables) == 0x000008, "Wrong alignment on BP_LadderBase_C_SetStartTemporaryVariables");
static_assert(sizeof(BP_LadderBase_C_SetStartTemporaryVariables) == 0x000028, "Wrong size on BP_LadderBase_C_SetStartTemporaryVariables");
static_assert(offsetof(BP_LadderBase_C_SetStartTemporaryVariables, bpp__Actor__pf) == 0x000000, "Member 'BP_LadderBase_C_SetStartTemporaryVariables::bpp__Actor__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetStartTemporaryVariables, bpp__BeginArrow__pf) == 0x000008, "Member 'BP_LadderBase_C_SetStartTemporaryVariables::bpp__BeginArrow__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetStartTemporaryVariables, bpp__InteractiveActorComponent__pf) == 0x000010, "Member 'BP_LadderBase_C_SetStartTemporaryVariables::bpp__InteractiveActorComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetStartTemporaryVariables, bpp__AnimMontageName__pf) == 0x000018, "Member 'BP_LadderBase_C_SetStartTemporaryVariables::bpp__AnimMontageName__pf' has a wrong offset!");
static_assert(offsetof(BP_LadderBase_C_SetStartTemporaryVariables, bpp__StepIndex__pf) == 0x000020, "Member 'BP_LadderBase_C_SetStartTemporaryVariables::bpp__StepIndex__pf' has a wrong offset!");

}


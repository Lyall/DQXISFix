#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_MiniMap_000

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.ExecuteUbergraph_WBP_Hud_MiniMap_000
// 0x0150 (0x0150 - 0x0000)
struct WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayNowLoading_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventTag)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue2;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Event_Animation;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPanelSize_ReturnValue;                 // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeaOrSkyMap_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x006C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMiniMapZoomRate_ReturnValue;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x009C(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue; // 0x00DC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x00EC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventTag;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackFloorLevel                               K2Node_Event_InFloorLevel;                         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackFloorArea                                K2Node_Event_InFlooorArea;                         // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 RequesterID)>            K2Node_CreateDelegate_OutputDelegate2;             // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bDisplay;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJackUMGMapResourceType>               K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<EJackMapSymbol>                        CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue; // 0x0138(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_RequestFloorInfo_ReturnValue;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000) == 0x000008, "Wrong alignment on WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000) == 0x000150, "Wrong size on WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, EntryPoint) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_ShouldDisplayNowLoading_ReturnValue) == 0x000004, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_ShouldDisplayNowLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, Temp_bool_Variable) == 0x000005, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, Temp_float_Variable) == 0x000008, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, Temp_float_Variable2) == 0x00000C, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, Temp_bool_Variable2) == 0x000010, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, Temp_struct_Variable) == 0x000028, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetUMGManager_ReturnValue) == 0x000038, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetJackGameMode_ReturnValue) == 0x000040, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetJackGameMode_ReturnValue2) == 0x000048, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetJackGameMode_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_Animation) == 0x000050, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetPanelSize_ReturnValue) == 0x000058, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetPanelSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000060, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_IsSeaOrSkyMap_ReturnValue) == 0x000068, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_IsSeaOrSkyMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00006C, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Select_Default) == 0x000084, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetMiniMapZoomRate_ReturnValue) == 0x000098, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetMiniMapZoomRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_MyGeometry) == 0x00009C, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_InDeltaTime) == 0x0000D8, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue) == 0x0000DC, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Select2_Default) == 0x0000EC, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_CustomEvent_EventTag) == 0x000100, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_SwitchName_CmpSuccess) == 0x000108, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_InFloorLevel) == 0x000109, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_InFloorLevel' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_InFlooorArea) == 0x00010A, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_InFlooorArea' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_CreateDelegate_OutputDelegate2) == 0x000110, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_Event_bDisplay) == 0x000120, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_Event_bDisplay' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, K2Node_MakeArray_Array) == 0x000128, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue) == 0x000138, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000, CallFunc_RequestFloorInfo_ReturnValue) == 0x000148, "Member 'WBP_Hud_MiniMap_000_C_ExecuteUbergraph_WBP_Hud_MiniMap_000::CallFunc_RequestFloorInfo_ReturnValue' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.OnChangeNowLoadingDisplay
// 0x0001 (0x0001 - 0x0000)
struct WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay) == 0x000001, "Wrong alignment on WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay) == 0x000001, "Wrong size on WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay, bDisplay) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_OnChangeNowLoadingDisplay::bDisplay' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.OnChangeFloor
// 0x0002 (0x0002 - 0x0000)
struct WBP_Hud_MiniMap_000_C_OnChangeFloor final
{
public:
	EJackFloorLevel                               InFloorLevel;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackFloorArea                                InFlooorArea;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_OnChangeFloor) == 0x000001, "Wrong alignment on WBP_Hud_MiniMap_000_C_OnChangeFloor");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_OnChangeFloor) == 0x000002, "Wrong size on WBP_Hud_MiniMap_000_C_OnChangeFloor");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_OnChangeFloor, InFloorLevel) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_OnChangeFloor::InFloorLevel' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_OnChangeFloor, InFlooorArea) == 0x000001, "Member 'WBP_Hud_MiniMap_000_C_OnChangeFloor::InFlooorArea' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.WidgetBPActionDelegate
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate final
{
public:
	class FName                                   EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate) == 0x000008, "Wrong alignment on WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate) == 0x000008, "Wrong size on WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate, EventTag) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_WidgetBPActionDelegate::EventTag' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Hud_MiniMap_000_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_Tick) == 0x000004, "Wrong alignment on WBP_Hud_MiniMap_000_C_Tick");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_Tick) == 0x000040, "Wrong size on WBP_Hud_MiniMap_000_C_Tick");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Hud_MiniMap_000_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_MiniMap_000_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_Hud_MiniMap_000_C_OnAnimationFinished");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_Hud_MiniMap_000_C_OnAnimationFinished");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.GetMapTextWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_Hud_MiniMap_000_C_GetMapTextWidget final
{
public:
	class UJackUMGMainMapOverlayWidgetBase*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_GetMapTextWidget) == 0x000008, "Wrong alignment on WBP_Hud_MiniMap_000_C_GetMapTextWidget");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_GetMapTextWidget) == 0x000008, "Wrong size on WBP_Hud_MiniMap_000_C_GetMapTextWidget");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_GetMapTextWidget, ReturnValue) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_GetMapTextWidget::ReturnValue' has a wrong offset!");

// Function WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C.AsyncLoadFinished
// 0x0088 (0x0088 - 0x0000)
struct WBP_Hud_MiniMap_000_C_AsyncLoadFinished final
{
public:
	int32                                         RequesterID_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapResourceRequester*           CallFunc_FindResourceRequester_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_AddUMGRootWidget_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMainMapOverlayWidgetBase*       K2Node_DynamicCast_AsJack_UMGMain_Map_Overlay_Widget_Base; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished) == 0x000008, "Wrong alignment on WBP_Hud_MiniMap_000_C_AsyncLoadFinished");
static_assert(sizeof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished) == 0x000088, "Wrong size on WBP_Hud_MiniMap_000_C_AsyncLoadFinished");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, RequesterID_0) == 0x000000, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::RequesterID_0' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_GetJackGameMode_ReturnValue) == 0x000008, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_FindResourceRequester_ReturnValue) == 0x000010, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_FindResourceRequester_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000019, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_GetClassDisplayName_ReturnValue) == 0x000020, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_AddUMGRootWidget_ReturnValue) == 0x000030, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_AddUMGRootWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, K2Node_DynamicCast_AsJack_UMGMain_Map_Overlay_Widget_Base) == 0x000038, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::K2Node_DynamicCast_AsJack_UMGMain_Map_Overlay_Widget_Base' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_Concat_StrStr_ReturnValue2) == 0x000068, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Hud_MiniMap_000_C_AsyncLoadFinished, CallFunc_Concat_StrStr_ReturnValue3) == 0x000078, "Member 'WBP_Hud_MiniMap_000_C_AsyncLoadFinished::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AsyncLoadingImage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AsyncLoadingImage.WBP_AsyncLoadingImage_C
// 0x0030 (0x0200 - 0x01D0)
class UWBP_AsyncLoadingImage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 LoadingImage;                                      // 0x01D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         LoadingFlag;                                       // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoadingTimer;                                      // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoadEnd;                                          // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   EndLoadingImageEvent;                              // 0x01F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EndLoadingImageEvent__DelegateSignature(class UWBP_AsyncLoadingImage_C* Sender);
	void ExecuteUbergraph_WBP_AsyncLoadingImage(int32 EntryPoint);
	void StartLoadingImage();
	void EndLoad();
	void ChangeLoadingFlag(int32 LoadingFlag_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AsyncLoadingImage_C">();
	}
	static class UWBP_AsyncLoadingImage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AsyncLoadingImage_C>();
	}
};
static_assert(alignof(UWBP_AsyncLoadingImage_C) == 0x000008, "Wrong alignment on UWBP_AsyncLoadingImage_C");
static_assert(sizeof(UWBP_AsyncLoadingImage_C) == 0x000200, "Wrong size on UWBP_AsyncLoadingImage_C");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, UberGraphFrame) == 0x0001D0, "Member 'UWBP_AsyncLoadingImage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, LoadingImage) == 0x0001D8, "Member 'UWBP_AsyncLoadingImage_C::LoadingImage' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, LoadingFlag) == 0x0001E0, "Member 'UWBP_AsyncLoadingImage_C::LoadingFlag' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, LoadingTimer) == 0x0001E4, "Member 'UWBP_AsyncLoadingImage_C::LoadingTimer' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, bLoadEnd) == 0x0001E8, "Member 'UWBP_AsyncLoadingImage_C::bLoadEnd' has a wrong offset!");
static_assert(offsetof(UWBP_AsyncLoadingImage_C, EndLoadingImageEvent) == 0x0001F0, "Member 'UWBP_AsyncLoadingImage_C::EndLoadingImageEvent' has a wrong offset!");

}


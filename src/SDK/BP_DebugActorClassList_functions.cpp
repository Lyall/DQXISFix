#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugActorClassList

#include "Basic.hpp"

#include "BP_DebugActorClassList_classes.hpp"
#include "BP_DebugActorClassList_parameters.hpp"


namespace SDK
{

// Function BP_DebugActorClassList.BP_DebugActorClassList_C.ExecuteUbergraph_BP_DebugActorClassList
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::ExecuteUbergraph_BP_DebugActorClassList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "ExecuteUbergraph_BP_DebugActorClassList");

	Params::BP_DebugActorClassList_C_ExecuteUbergraph_BP_DebugActorClassList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_JumpUpper
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_JumpUpper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_JumpUpper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Tick
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Destroy
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Collision
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Collision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Collision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Hidden
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Hidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Hidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Visible
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Visible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.DACL_Jump
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::DACL_Jump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "DACL_Jump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.MakeCommandMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::MakeCommandMenu(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "MakeCommandMenu");

	Params::BP_DebugActorClassList_C_MakeCommandMenu Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "ReceiveTick");

	Params::BP_DebugActorClassList_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.MakeActorList
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::MakeActorList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "MakeActorList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DebugActorClassList_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.MakeMenuMap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugActorClassList_C::MakeMenuMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "MakeMenuMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.GetSelectedAcor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelectedActor_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::GetSelectedAcor(class AActor** SelectedActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "GetSelectedAcor");

	Params::BP_DebugActorClassList_C_GetSelectedAcor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedActor_0 != nullptr)
		*SelectedActor_0 = Parms.SelectedActor_0;
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.SetSelectedValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CursorLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::SetSelectedValue(const class FString& CursorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "SetSelectedValue");

	Params::BP_DebugActorClassList_C_SetSelectedValue Parms{};

	Parms.CursorLocation = std::move(CursorLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.GetNearestActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NearestActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::GetNearestActor(class AActor** NearestActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "GetNearestActor");

	Params::BP_DebugActorClassList_C_GetNearestActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NearestActor != nullptr)
		*NearestActor = Parms.NearestActor;
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.ForceChangeSelectedActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ChangeActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::ForceChangeSelectedActor(class AActor* ChangeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "ForceChangeSelectedActor");

	Params::BP_DebugActorClassList_C_ForceChangeSelectedActor Parms{};

	Parms.ChangeActor = ChangeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.SetSearchNearMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SearchNearMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DebugActorClassList_C::SetSearchNearMode(bool SearchNearMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "SetSearchNearMode");

	Params::BP_DebugActorClassList_C_SetSearchNearMode Parms{};

	Parms.SearchNearMode = SearchNearMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugActorClassList.BP_DebugActorClassList_C.SetForceClassSelect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DebugActorClassList_C::SetForceClassSelect(const class FString& Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugActorClassList_C", "SetForceClassSelect");

	Params::BP_DebugActorClassList_C_SetForceClassSelect Parms{};

	Parms.Class_0 = std::move(Class_0);

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_Cursor_000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_WorldMap_Cursor_000.WBP_Menu_WorldMap_Cursor_000_C
// 0x0028 (0x0398 - 0x0370)
class UWBP_Menu_WorldMap_Cursor_000_C final : public UJackUMGWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Wait_WBP_Menu_WorldMap_Cursor_000_C;               // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WorldMap_Cursor;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         TargetNo;                                          // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Menu_WorldMap_Cursor_000(int32 EntryPoint);
	void CustomEvent_0();
	void Construct();
	void Show(int32 TargetNo_0);
	void Hide();
	void IsEmpty(bool* bEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_WorldMap_Cursor_000_C">();
	}
	static class UWBP_Menu_WorldMap_Cursor_000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_WorldMap_Cursor_000_C>();
	}
};
static_assert(alignof(UWBP_Menu_WorldMap_Cursor_000_C) == 0x000008, "Wrong alignment on UWBP_Menu_WorldMap_Cursor_000_C");
static_assert(sizeof(UWBP_Menu_WorldMap_Cursor_000_C) == 0x000398, "Wrong size on UWBP_Menu_WorldMap_Cursor_000_C");
static_assert(offsetof(UWBP_Menu_WorldMap_Cursor_000_C, UberGraphFrame) == 0x000370, "Member 'UWBP_Menu_WorldMap_Cursor_000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_Cursor_000_C, Wait_WBP_Menu_WorldMap_Cursor_000_C) == 0x000378, "Member 'UWBP_Menu_WorldMap_Cursor_000_C::Wait_WBP_Menu_WorldMap_Cursor_000_C' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_Cursor_000_C, In) == 0x000380, "Member 'UWBP_Menu_WorldMap_Cursor_000_C::In' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_Cursor_000_C, WorldMap_Cursor) == 0x000388, "Member 'UWBP_Menu_WorldMap_Cursor_000_C::WorldMap_Cursor' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_Cursor_000_C, TargetNo) == 0x000390, "Member 'UWBP_Menu_WorldMap_Cursor_000_C::TargetNo' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Title_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Title_HUD.BP_Title_HUD_C
// 0x0018 (0x0688 - 0x0670)
class ABP_Title_HUD_C final : public AJackHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SenrekiActor;                                      // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Title_HUD(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SpawnPopupBalloon(const struct FVector& InWorldLocation, EJackPopupBalloon InPopupBalloon, int32 InNumber, class UJackGameCharacter* InGameCharacter, class USkeletalMeshComponent* InLocalMesh, class FName InSocketName);
	void CheckReamAttack(const struct FVector& InPosition, class UJackGameCharacter* InGameCharacter, struct FVector* OutPosition);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Title_HUD_C">();
	}
	static class ABP_Title_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Title_HUD_C>();
	}
};
static_assert(alignof(ABP_Title_HUD_C) == 0x000008, "Wrong alignment on ABP_Title_HUD_C");
static_assert(sizeof(ABP_Title_HUD_C) == 0x000688, "Wrong size on ABP_Title_HUD_C");
static_assert(offsetof(ABP_Title_HUD_C, UberGraphFrame) == 0x000670, "Member 'ABP_Title_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Title_HUD_C, DefaultSceneRoot) == 0x000678, "Member 'ABP_Title_HUD_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Title_HUD_C, SenrekiActor) == 0x000680, "Member 'ABP_Title_HUD_C::SenrekiActor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CutSceneMenu_Debug

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CutSceneMenu_Debug.BP_CutSceneMenu_Debug_C
// 0x0290 (0x0628 - 0x0398)
class ABP_CutSceneMenu_Debug_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   FlagName;                                          // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentX;                                          // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentY;                                          // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Episode;                                           // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EpisodeMax;                                        // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           EpisodeName;                                       // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           MessageColor;                                      // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current;                                           // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FJackDataTableCutSceneInfo             CurrentFlagName;                                   // 0x0400(0x0190)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Enable;                                            // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentRowName;                                    // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebugPlay;                                       // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SplitCharacter;                                    // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_E;                                 // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_I;                                 // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_C;                                 // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_R;                                 // 0x05E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_D;                                 // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_K;                                 // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccentCharacter_L;                                 // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CutSceneMenu_Debug(int32 EntryPoint);
	void S040_CS_100_01();
	void S040_CS_100_02();
	void S040_CS_100_03();
	void ChangeTonnura();
	void ChangeEleven();
	void ChangeRandomErdrick();
	void ChangeRandomElric();
	void CSSelectOmide();
	void CSSelectPlay();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Gamepad_DPad_Up_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_Gamepad_DPad_Down_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void UserConstructionScript();
	void DebugModeSwitch(bool Start);
	void IsDebugMode(bool* Enable_0);
	void GetSelectedCS_ID(class FString* CS_ID);
	void GetRandomAccentName(TArray<class FString>& Name_0, class FString* RandomAccentName);
	void GetRandomAccentCharacter(const class FString& AccentString, class FString* AccentCharacter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CutSceneMenu_Debug_C">();
	}
	static class ABP_CutSceneMenu_Debug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CutSceneMenu_Debug_C>();
	}
};
static_assert(alignof(ABP_CutSceneMenu_Debug_C) == 0x000008, "Wrong alignment on ABP_CutSceneMenu_Debug_C");
static_assert(sizeof(ABP_CutSceneMenu_Debug_C) == 0x000628, "Wrong size on ABP_CutSceneMenu_Debug_C");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, UberGraphFrame) == 0x000398, "Member 'ABP_CutSceneMenu_Debug_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, DefaultSceneRoot) == 0x0003A0, "Member 'ABP_CutSceneMenu_Debug_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, FlagName) == 0x0003A8, "Member 'ABP_CutSceneMenu_Debug_C::FlagName' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, CurrentX) == 0x0003B0, "Member 'ABP_CutSceneMenu_Debug_C::CurrentX' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, CurrentY) == 0x0003B4, "Member 'ABP_CutSceneMenu_Debug_C::CurrentY' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, Count) == 0x0003B8, "Member 'ABP_CutSceneMenu_Debug_C::Count' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, MaxCount) == 0x0003BC, "Member 'ABP_CutSceneMenu_Debug_C::MaxCount' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, Episode) == 0x0003C0, "Member 'ABP_CutSceneMenu_Debug_C::Episode' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, EpisodeMax) == 0x0003C4, "Member 'ABP_CutSceneMenu_Debug_C::EpisodeMax' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, EpisodeName) == 0x0003C8, "Member 'ABP_CutSceneMenu_Debug_C::EpisodeName' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, MessageColor) == 0x0003D8, "Member 'ABP_CutSceneMenu_Debug_C::MessageColor' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, Current) == 0x0003E8, "Member 'ABP_CutSceneMenu_Debug_C::Current' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, Message) == 0x0003F0, "Member 'ABP_CutSceneMenu_Debug_C::Message' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, CurrentFlagName) == 0x000400, "Member 'ABP_CutSceneMenu_Debug_C::CurrentFlagName' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, Enable) == 0x000590, "Member 'ABP_CutSceneMenu_Debug_C::Enable' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, CurrentRowName) == 0x000598, "Member 'ABP_CutSceneMenu_Debug_C::CurrentRowName' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, IsDebugPlay) == 0x0005A0, "Member 'ABP_CutSceneMenu_Debug_C::IsDebugPlay' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, SplitCharacter) == 0x0005A8, "Member 'ABP_CutSceneMenu_Debug_C::SplitCharacter' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_E) == 0x0005B8, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_E' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_I) == 0x0005C8, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_I' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_C) == 0x0005D8, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_C' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_R) == 0x0005E8, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_R' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_D) == 0x0005F8, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_D' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_K) == 0x000608, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_K' has a wrong offset!");
static_assert(offsetof(ABP_CutSceneMenu_Debug_C, AccentCharacter_L) == 0x000618, "Member 'ABP_CutSceneMenu_Debug_C::AccentCharacter_L' has a wrong offset!");

}


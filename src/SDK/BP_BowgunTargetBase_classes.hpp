#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BowgunTargetBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_ItemSet_structs.hpp"
#include "BP_ItemGettableObjectBase_classes.hpp"


namespace SDK
{

// DynamicClass BP_BowgunTargetBase.BP_BowgunTargetBase_C
// 0x04E0 (0x08F8 - 0x0418)
class ABP_BowgunTargetBase_C final : public ABP_ItemGettableObjectBase_C
{
public:
	class UChildActorComponent*                   NavCon;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        ShaftRoot;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SM_TargetMesh;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleComponent*                 Destructible;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Stationary;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackBowgunTargetComponent*             JackBowgunTarget;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            JointMesh;                                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ShaftMesh;                                         // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShaftCount;                                        // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BowgunTargetID;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SingleShaftLength;                                 // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShaftLength;                                       // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationSpeed;                                     // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RotationEnabled;                                   // 0x047C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationSpeedMin;                                  // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationSpeedMax;                                  // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationCount;                                     // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            FullTargetMesh;                                    // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleMesh*                      DestructibleTargetMesh;                            // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BrokenTargetMesh;                                  // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShaftSign;                                         // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationCycle;                                     // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationCycleMin;                                  // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationCycleMax;                                  // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShaftScale;                                        // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StaticMeshCollisionProfileName;                    // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          KeepBroken;                                        // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRate;                                      // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HitArrow;                                          // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             TmpMaterials;                                      // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable;                              // 0x04E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable2;                             // 0x04F8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable;                                // 0x0508(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable3;                             // 0x0510(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable4;                             // 0x0520(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable;                              // 0x0530(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable2;                             // 0x0535(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_53A[0x6];                                      // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable5;                             // 0x0540(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable3;                             // 0x0550(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable6;                             // 0x0558(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable4;                             // 0x0568(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable5;                             // 0x0570(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable6;                             // 0x0580(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable7;                             // 0x0585(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable8;                             // 0x0590(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable9;                             // 0x05A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array;                            // 0x05B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable10;                            // 0x05C0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable7;                             // 0x05C8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable11;                            // 0x05D8(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable8;                             // 0x05E0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable2;                               // 0x05F0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable12;                            // 0x05F8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable13;                            // 0x0608(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable14;                            // 0x060D(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_612[0x2];                                      // 0x0612(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0614(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0618(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable15;                            // 0x0620(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable16;                            // 0x0638(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0640(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0648(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable17;                            // 0x0650(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable18;                            // 0x0655(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable19;                            // 0x065A(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_65F[0x1];                                      // 0x065F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable20;                            // 0x0660(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable21;                            // 0x0670(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable22;                            // 0x0675(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable23;                            // 0x067A(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_67F[0x1];                                      // 0x067F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0680(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable24;                            // 0x0708(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable25;                            // 0x070D(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_712[0x6];                                      // 0x0712(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable9;                             // 0x0718(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CallFunc_GetForsakeMessageID_FosakeMessageID;      // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_StoreItemSequence_Empty;                  // 0x0730(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item2;                          // 0x0731(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_732[0x6];                                      // 0x0732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGoldGetMessageTag_ReturnValue;        // 0x0738(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item3;                          // 0x0748(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item4;                          // 0x0749(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0750(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item5;                          // 0x0760(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue;        // 0x0770(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue; // 0x0780(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList; // 0x0790(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2; // 0x07A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList2; // 0x07B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item6;                          // 0x07C0(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item7;                          // 0x07D0(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue2;       // 0x07E0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue3;       // 0x07F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList3; // 0x0800(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3; // 0x0810(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList4; // 0x0820(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4; // 0x0830(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList5; // 0x0840(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5; // 0x0850(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList6; // 0x0860(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6; // 0x0870(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable26;                            // 0x0880(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_885[0x3];                                      // 0x0885(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable10;                            // 0x0888(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsItemGotten_ItemGotten;                  // 0x0898(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable11;                            // 0x08A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable12;                            // 0x08B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 K2Node_Select2_Default;                            // 0x08C0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x08D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable3;                               // 0x08E0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select3_Default;                            // 0x08E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BndEvt__JackBowgunTarget_K2Node_ComponentBoundEvent_48_OnHitArrowSignature__DelegateSignature();
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_75_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void ExecuteUbergraph_BP_BowgunTargetBase_2(int32 bpp__EntryPoint__pf);
	float GetSignedShaftLength();
	float GetSignedSingleShaftLength();
	void ReceiveBeginPlay();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_BowgunTargetBase_C">();
	}
	static class ABP_BowgunTargetBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BowgunTargetBase_C>();
	}
};
static_assert(alignof(ABP_BowgunTargetBase_C) == 0x000008, "Wrong alignment on ABP_BowgunTargetBase_C");
static_assert(sizeof(ABP_BowgunTargetBase_C) == 0x0008F8, "Wrong size on ABP_BowgunTargetBase_C");
static_assert(offsetof(ABP_BowgunTargetBase_C, NavCon) == 0x000418, "Member 'ABP_BowgunTargetBase_C::NavCon' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, JackInteractiveActor) == 0x000420, "Member 'ABP_BowgunTargetBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftRoot) == 0x000428, "Member 'ABP_BowgunTargetBase_C::ShaftRoot' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, SM_TargetMesh) == 0x000430, "Member 'ABP_BowgunTargetBase_C::SM_TargetMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Destructible) == 0x000438, "Member 'ABP_BowgunTargetBase_C::Destructible' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Stationary) == 0x000440, "Member 'ABP_BowgunTargetBase_C::Stationary' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, JackBowgunTarget) == 0x000448, "Member 'ABP_BowgunTargetBase_C::JackBowgunTarget' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, JointMesh) == 0x000450, "Member 'ABP_BowgunTargetBase_C::JointMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftMesh) == 0x000458, "Member 'ABP_BowgunTargetBase_C::ShaftMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftCount) == 0x000460, "Member 'ABP_BowgunTargetBase_C::ShaftCount' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, BowgunTargetID) == 0x000468, "Member 'ABP_BowgunTargetBase_C::BowgunTargetID' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, SingleShaftLength) == 0x000470, "Member 'ABP_BowgunTargetBase_C::SingleShaftLength' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftLength) == 0x000474, "Member 'ABP_BowgunTargetBase_C::ShaftLength' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationSpeed) == 0x000478, "Member 'ABP_BowgunTargetBase_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationEnabled) == 0x00047C, "Member 'ABP_BowgunTargetBase_C::RotationEnabled' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationSpeedMin) == 0x000480, "Member 'ABP_BowgunTargetBase_C::RotationSpeedMin' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationSpeedMax) == 0x000484, "Member 'ABP_BowgunTargetBase_C::RotationSpeedMax' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationCount) == 0x000488, "Member 'ABP_BowgunTargetBase_C::RotationCount' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, FullTargetMesh) == 0x000490, "Member 'ABP_BowgunTargetBase_C::FullTargetMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, DestructibleTargetMesh) == 0x000498, "Member 'ABP_BowgunTargetBase_C::DestructibleTargetMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, BrokenTargetMesh) == 0x0004A0, "Member 'ABP_BowgunTargetBase_C::BrokenTargetMesh' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftSign) == 0x0004A8, "Member 'ABP_BowgunTargetBase_C::ShaftSign' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationCycle) == 0x0004AC, "Member 'ABP_BowgunTargetBase_C::RotationCycle' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationCycleMin) == 0x0004B0, "Member 'ABP_BowgunTargetBase_C::RotationCycleMin' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationCycleMax) == 0x0004B4, "Member 'ABP_BowgunTargetBase_C::RotationCycleMax' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, ShaftScale) == 0x0004B8, "Member 'ABP_BowgunTargetBase_C::ShaftScale' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, StaticMeshCollisionProfileName) == 0x0004C0, "Member 'ABP_BowgunTargetBase_C::StaticMeshCollisionProfileName' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, KeepBroken) == 0x0004C8, "Member 'ABP_BowgunTargetBase_C::KeepBroken' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, RotationRate) == 0x0004CC, "Member 'ABP_BowgunTargetBase_C::RotationRate' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, HitArrow) == 0x0004D0, "Member 'ABP_BowgunTargetBase_C::HitArrow' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, TmpMaterials) == 0x0004D8, "Member 'ABP_BowgunTargetBase_C::TmpMaterials' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable) == 0x0004E8, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable2) == 0x0004F8, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_bool_Variable) == 0x000508, "Member 'ABP_BowgunTargetBase_C::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable3) == 0x000510, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable4) == 0x000520, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable) == 0x000530, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable2) == 0x000535, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable5) == 0x000540, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable3) == 0x000550, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable6) == 0x000558, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable4) == 0x000568, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable5) == 0x000570, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable6) == 0x000580, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable7) == 0x000585, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable8) == 0x000590, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable9) == 0x0005A0, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_MakeArray_Array) == 0x0005B0, "Member 'ABP_BowgunTargetBase_C::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable10) == 0x0005C0, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable7) == 0x0005C8, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable11) == 0x0005D8, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable8) == 0x0005E0, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_bool_Variable2) == 0x0005F0, "Member 'ABP_BowgunTargetBase_C::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable12) == 0x0005F8, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable13) == 0x000608, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable13' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable14) == 0x00060D, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable14' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_int_Loop_Counter_Variable) == 0x000614, "Member 'ABP_BowgunTargetBase_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_int_Array_Index_Variable) == 0x000618, "Member 'ABP_BowgunTargetBase_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable15) == 0x000620, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable15' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item) == 0x000630, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable16) == 0x000638, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable16' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_Event_DeltaSeconds) == 0x000640, "Member 'ABP_BowgunTargetBase_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x000648, "Member 'ABP_BowgunTargetBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable17) == 0x000650, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable17' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable18) == 0x000655, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable18' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable19) == 0x00065A, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable19' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable20) == 0x000660, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable20' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable21) == 0x000670, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable21' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable22) == 0x000675, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable22' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable23) == 0x00067A, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable23' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000680, "Member 'ABP_BowgunTargetBase_C::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable24) == 0x000708, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable24' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable25) == 0x00070D, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable25' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable9) == 0x000718, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_GetForsakeMessageID_FosakeMessageID) == 0x000728, "Member 'ABP_BowgunTargetBase_C::CallFunc_GetForsakeMessageID_FosakeMessageID' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_StoreItemSequence_Empty) == 0x000730, "Member 'ABP_BowgunTargetBase_C::CallFunc_StoreItemSequence_Empty' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item2) == 0x000731, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGoldGetMessageTag_ReturnValue) == 0x000738, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGoldGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item3) == 0x000748, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item4) == 0x000749, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_Select_Default) == 0x000750, "Member 'ABP_BowgunTargetBase_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item5) == 0x000760, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue) == 0x000770, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue) == 0x000780, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList) == 0x000790, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2) == 0x0007A0, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList2) == 0x0007B0, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item6) == 0x0007C0, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_Array_Get_Item7) == 0x0007D0, "Member 'ABP_BowgunTargetBase_C::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue2) == 0x0007E0, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue3) == 0x0007F0, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList3) == 0x000800, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3) == 0x000810, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList4) == 0x000820, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList4' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4) == 0x000830, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList5) == 0x000840, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList5' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5) == 0x000850, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList6) == 0x000860, "Member 'ABP_BowgunTargetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList6' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6) == 0x000870, "Member 'ABP_BowgunTargetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_struct_Variable26) == 0x000880, "Member 'ABP_BowgunTargetBase_C::Temp_struct_Variable26' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable10) == 0x000888, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_IsItemGotten_ItemGotten) == 0x000898, "Member 'ABP_BowgunTargetBase_C::CallFunc_IsItemGotten_ItemGotten' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable11) == 0x0008A0, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_string_Variable12) == 0x0008B0, "Member 'ABP_BowgunTargetBase_C::Temp_string_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_Select2_Default) == 0x0008C0, "Member 'ABP_BowgunTargetBase_C::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, CallFunc_GetMaterials_ReturnValue) == 0x0008D0, "Member 'ABP_BowgunTargetBase_C::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, Temp_bool_Variable3) == 0x0008E0, "Member 'ABP_BowgunTargetBase_C::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_BowgunTargetBase_C, K2Node_Select3_Default) == 0x0008E8, "Member 'ABP_BowgunTargetBase_C::K2Node_Select3_Default' has a wrong offset!");

}


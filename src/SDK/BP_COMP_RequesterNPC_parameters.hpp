#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_COMP_RequesterNPC

#include "Basic.hpp"

#include "ENUM_Schedule_Pattern_structs.hpp"
#include "STRUCT_QuestText_structs.hpp"


namespace SDK::Params
{

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.CheckSerifuAfterProc
// 0x0008 (0x0008 - 0x0000)
struct BP_COMP_RequesterNPC_C_CheckSerifuAfterProc final
{
public:
	class FName                                   bpp__ProcName__pf;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_CheckSerifuAfterProc) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_CheckSerifuAfterProc");
static_assert(sizeof(BP_COMP_RequesterNPC_C_CheckSerifuAfterProc) == 0x000008, "Wrong size on BP_COMP_RequesterNPC_C_CheckSerifuAfterProc");
static_assert(offsetof(BP_COMP_RequesterNPC_C_CheckSerifuAfterProc, bpp__ProcName__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_CheckSerifuAfterProc::bpp__ProcName__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.ExecuteUbergraph_BP_COMP_RequesterNPC_0
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0");
static_assert(sizeof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0) == 0x000004, "Wrong size on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0");
static_assert(offsetof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_0::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.ExecuteUbergraph_BP_COMP_RequesterNPC_2
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2");
static_assert(sizeof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2) == 0x000004, "Wrong size on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2");
static_assert(offsetof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_2::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.ExecuteUbergraph_BP_COMP_RequesterNPC_3
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3");
static_assert(sizeof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3) == 0x000004, "Wrong size on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3");
static_assert(offsetof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_3::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.ExecuteUbergraph_BP_COMP_RequesterNPC_4
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4");
static_assert(sizeof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4) == 0x000004, "Wrong size on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4");
static_assert(offsetof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_4::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.ExecuteUbergraph_BP_COMP_RequesterNPC_5
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5) == 0x000004, "Wrong alignment on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5");
static_assert(sizeof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5) == 0x000004, "Wrong size on BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5");
static_assert(offsetof(BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_ExecuteUbergraph_BP_COMP_RequesterNPC_5::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.GetProgressText
// 0x0028 (0x0028 - 0x0000)
struct BP_COMP_RequesterNPC_C_GetProgressText final
{
public:
	struct FSTRUCT_QuestText                      bpp__Ret__pf;                                      // 0x0000(0x0028)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_GetProgressText) == 0x000008, "Wrong alignment on BP_COMP_RequesterNPC_C_GetProgressText");
static_assert(sizeof(BP_COMP_RequesterNPC_C_GetProgressText) == 0x000028, "Wrong size on BP_COMP_RequesterNPC_C_GetProgressText");
static_assert(offsetof(BP_COMP_RequesterNPC_C_GetProgressText, bpp__Ret__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_GetProgressText::bpp__Ret__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.IsStartReject
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_RequesterNPC_C_IsStartReject final
{
public:
	bool                                          bpp__Reject__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_IsStartReject) == 0x000001, "Wrong alignment on BP_COMP_RequesterNPC_C_IsStartReject");
static_assert(sizeof(BP_COMP_RequesterNPC_C_IsStartReject) == 0x000001, "Wrong size on BP_COMP_RequesterNPC_C_IsStartReject");
static_assert(offsetof(BP_COMP_RequesterNPC_C_IsStartReject, bpp__Reject__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_IsStartReject::bpp__Reject__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.SetMinimapTarget
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_RequesterNPC_C_SetMinimapTarget final
{
public:
	bool                                          bpp__Visible__pf;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_SetMinimapTarget) == 0x000001, "Wrong alignment on BP_COMP_RequesterNPC_C_SetMinimapTarget");
static_assert(sizeof(BP_COMP_RequesterNPC_C_SetMinimapTarget) == 0x000001, "Wrong size on BP_COMP_RequesterNPC_C_SetMinimapTarget");
static_assert(offsetof(BP_COMP_RequesterNPC_C_SetMinimapTarget, bpp__Visible__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_SetMinimapTarget::bpp__Visible__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.SetSchedulePattern
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_RequesterNPC_C_SetSchedulePattern final
{
public:
	ENUM_Schedule_Pattern                         bpp__Next__pf;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_SetSchedulePattern) == 0x000001, "Wrong alignment on BP_COMP_RequesterNPC_C_SetSchedulePattern");
static_assert(sizeof(BP_COMP_RequesterNPC_C_SetSchedulePattern) == 0x000001, "Wrong size on BP_COMP_RequesterNPC_C_SetSchedulePattern");
static_assert(offsetof(BP_COMP_RequesterNPC_C_SetSchedulePattern, bpp__Next__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_SetSchedulePattern::bpp__Next__pf' has a wrong offset!");

// Function BP_COMP_RequesterNPC.BP_COMP_RequesterNPC_C.SetTalkingNPC
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_RequesterNPC_C_SetTalkingNPC final
{
public:
	bool                                          bpp__SetNpc__pf;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_RequesterNPC_C_SetTalkingNPC) == 0x000001, "Wrong alignment on BP_COMP_RequesterNPC_C_SetTalkingNPC");
static_assert(sizeof(BP_COMP_RequesterNPC_C_SetTalkingNPC) == 0x000001, "Wrong size on BP_COMP_RequesterNPC_C_SetTalkingNPC");
static_assert(offsetof(BP_COMP_RequesterNPC_C_SetTalkingNPC, bpp__SetNpc__pf) == 0x000000, "Member 'BP_COMP_RequesterNPC_C_SetTalkingNPC::bpp__SetNpc__pf' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_LevelSystem

#include "Basic.hpp"

#include "BP_FLIB_LevelSystem_classes.hpp"
#include "BP_FLIB_LevelSystem_parameters.hpp"


namespace SDK
{

// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.MapJumpStart
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_MapStart                MapStart                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// EJackFadeColor                          FadeColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackFadeTime                           FadeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UnmountVehicle                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EJackMapChangeSound                     PlaySoundType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::MapJumpStart(const struct FJackLDT_MapStart& MapStart, EJackFadeColor FadeColor, EJackFadeTime FadeTime, bool PlayAnimation, bool UnmountVehicle, EJackMapChangeSound PlaySoundType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "MapJumpStart");

	Params::BP_FLIB_LevelSystem_C_MapJumpStart Parms{};

	Parms.MapStart = std::move(MapStart);
	Parms.FadeColor = FadeColor;
	Parms.FadeTime = FadeTime;
	Parms.PlayAnimation = PlayAnimation;
	Parms.UnmountVehicle = UnmountVehicle;
	Parms.PlaySoundType = PlaySoundType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.SetForceLevelVisible
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::SetForceLevelVisible(bool Visible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "SetForceLevelVisible");

	Params::BP_FLIB_LevelSystem_C_SetForceLevelVisible Parms{};

	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.ResetForceLevelVisible
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::ResetForceLevelVisible(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "ResetForceLevelVisible");

	Params::BP_FLIB_LevelSystem_C_ResetForceLevelVisible Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.DisableMapJumpVolume
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DisableTag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::DisableMapJumpVolume(class FName DisableTag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "DisableMapJumpVolume");

	Params::BP_FLIB_LevelSystem_C_DisableMapJumpVolume Parms{};

	Parms.DisableTag = DisableTag;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.EnableMapJumpVolume
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EnableTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::EnableMapJumpVolume(class FName EnableTag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "EnableMapJumpVolume");

	Params::BP_FLIB_LevelSystem_C_EnableMapJumpVolume Parms{};

	Parms.EnableTag = EnableTag;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.LevelVisible
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_LevelType                          LevelType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::LevelVisible(ENUM_LevelType LevelType, bool Visible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "LevelVisible");

	Params::BP_FLIB_LevelSystem_C_LevelVisible Parms{};

	Parms.LevelType = LevelType;
	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.PreloadMap
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_MapStart                MapJumpName                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::PreloadMap(const struct FJackLDT_MapStart& MapJumpName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "PreloadMap");

	Params::BP_FLIB_LevelSystem_C_PreloadMap Parms{};

	Parms.MapJumpName = std::move(MapJumpName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.IsMapJumping
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_LevelSystem_C::IsMapJumping(class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "IsMapJumping");

	Params::BP_FLIB_LevelSystem_C_IsMapJumping Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.SetLevelStreamingCollision
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::SetLevelStreamingCollision(bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "SetLevelStreamingCollision");

	Params::BP_FLIB_LevelSystem_C_SetLevelStreamingCollision Parms{};

	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.LoadMapJump
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::LoadMapJump(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "LoadMapJump");

	Params::BP_FLIB_LevelSystem_C_LoadMapJump Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.SetEnableLevelVolume
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NameTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::SetEnableLevelVolume(class FName NameTag, bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "SetEnableLevelVolume");

	Params::BP_FLIB_LevelSystem_C_SetEnableLevelVolume Parms{};

	Parms.NameTag = NameTag;
	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.IsMapJumpSequence
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_LevelSystem_C::IsMapJumpSequence(class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "IsMapJumpSequence");

	Params::BP_FLIB_LevelSystem_C_IsMapJumpSequence Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.IsMapInMapJump
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NextMapStartID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             StreamingStatusID                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::IsMapInMapJump(class FName NextMapStartID, class UObject* __WorldContext, bool* Result, class FName* StreamingStatusID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "IsMapInMapJump");

	Params::BP_FLIB_LevelSystem_C_IsMapInMapJump Parms{};

	Parms.NextMapStartID = NextMapStartID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (StreamingStatusID != nullptr)
		*StreamingStatusID = Parms.StreamingStatusID;
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.GetStreamingStatusNoLoad
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StreamingStatusID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     LoadLevelNames                                         (Parm, OutParm, ZeroConstructor)

void UBP_FLIB_LevelSystem_C::GetStreamingStatusNoLoad(class FName StreamingStatusID, class UObject* __WorldContext, TArray<class FName>* LoadLevelNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "GetStreamingStatusNoLoad");

	Params::BP_FLIB_LevelSystem_C_GetStreamingStatusNoLoad Parms{};

	Parms.StreamingStatusID = StreamingStatusID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LoadLevelNames != nullptr)
		*LoadLevelNames = std::move(Parms.LoadLevelNames);
}


// Function BP_FLIB_LevelSystem.BP_FLIB_LevelSystem_C.Change2D
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_ModeChangeType          ModeChangeType                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_LevelSystem_C::Change2D(const struct FJackLDT_ModeChangeType& ModeChangeType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_LevelSystem_C", "Change2D");

	Params::BP_FLIB_LevelSystem_C_Change2D Parms{};

	Parms.ModeChangeType = std::move(ModeChangeType);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}


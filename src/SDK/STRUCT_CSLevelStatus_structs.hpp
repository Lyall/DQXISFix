#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STRUCT_CSLevelStatus

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK
{

// ScriptStruct STRUCT_CSLevelStatus.STRUCT_CSLevelStatus
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FSTRUCT_CSLevelStatus final
{
public:
	class FName                                   LevelName_4_4A044D67466037867A166090DC86683F;      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackCSMapLevelStatus                         LoadStatus_5_624BEC16472C671C4EC446816FD582E2;     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackCSMapLevelStatus                         UnLoadStatus_7_607068FC47C3B9DE5A9481840C90815B;   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSTRUCT_CSLevelStatus) == 0x000008, "Wrong alignment on FSTRUCT_CSLevelStatus");
static_assert(sizeof(FSTRUCT_CSLevelStatus) == 0x000010, "Wrong size on FSTRUCT_CSLevelStatus");
static_assert(offsetof(FSTRUCT_CSLevelStatus, LevelName_4_4A044D67466037867A166090DC86683F) == 0x000000, "Member 'FSTRUCT_CSLevelStatus::LevelName_4_4A044D67466037867A166090DC86683F' has a wrong offset!");
static_assert(offsetof(FSTRUCT_CSLevelStatus, LoadStatus_5_624BEC16472C671C4EC446816FD582E2) == 0x000008, "Member 'FSTRUCT_CSLevelStatus::LoadStatus_5_624BEC16472C671C4EC446816FD582E2' has a wrong offset!");
static_assert(offsetof(FSTRUCT_CSLevelStatus, UnLoadStatus_7_607068FC47C3B9DE5A9481840C90815B) == 0x000009, "Member 'FSTRUCT_CSLevelStatus::UnLoadStatus_7_607068FC47C3B9DE5A9481840C90815B' has a wrong offset!");

}


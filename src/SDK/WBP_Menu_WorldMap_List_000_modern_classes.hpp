#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_List_000_modern

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C
// 0x0098 (0x0498 - 0x0400)
class UWBP_Menu_WorldMap_List_000_modern_C final : public UJackUMGWindowBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(Transient, DuplicateTransient)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ItemList;                                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           List000_Panel;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_00_Rura;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_01_WorldMap;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_02_QuestMemo;                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_03_KiraList;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_04_NearbyMap;                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           Parts000_05_MonsterList;                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_000_modern_C*           WBP_Menu_Parts_000_C_114;                          // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bExistsQuestMemoData;                              // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bExistsKiraData;                                   // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Common_Setumei_000_modern_C*  SetumeiWBP;                                        // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           MenuSetumeiTextID;                                 // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	UMulticastDelegateProperty_                   OpenRuraMenuEvent;                                 // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bForbiddenKira;                                    // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindowSizeMargin;                                  // 0x0494(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OpenRuraMenuEvent__DelegateSignature(bool bOpen);
	void ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern(int32 EntryPoint);
	void OnOpenRuraMenu(bool bOpen);
	void CustomEvent_0(class FName EventTag);
	void Construct();
	void OpenWorldMap(bool IsFocus, bool bDiractRuraMenuMode, EJackWorldMapOpenReason OpenReason, bool* bIsOk);
	void OpenQuestList(bool* bIsOk);
	void OpenKiraList(bool* bIsOk);
	void OnItemListEvent(class FName EventName, class UJackUMGItemBase* Item);
	void UpdateMenuStatus();
	void OpenRuraMenu(bool* bIsOk);
	void OpenNeighborMapList(bool* IsOk);
	void RequestToDisplayCurrentMap();
	void OpenMonsterList(bool* IsOk);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_WorldMap_List_000_modern_C">();
	}
	static class UWBP_Menu_WorldMap_List_000_modern_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_WorldMap_List_000_modern_C>();
	}
};
static_assert(alignof(UWBP_Menu_WorldMap_List_000_modern_C) == 0x000008, "Wrong alignment on UWBP_Menu_WorldMap_List_000_modern_C");
static_assert(sizeof(UWBP_Menu_WorldMap_List_000_modern_C) == 0x000498, "Wrong size on UWBP_Menu_WorldMap_List_000_modern_C");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, UberGraphFrame) == 0x000400, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, InvalidationBox_0) == 0x000408, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, ItemList) == 0x000410, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::ItemList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, List000_Panel) == 0x000418, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::List000_Panel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_00_Rura) == 0x000420, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_00_Rura' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_01_WorldMap) == 0x000428, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_01_WorldMap' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_02_QuestMemo) == 0x000430, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_02_QuestMemo' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_03_KiraList) == 0x000438, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_03_KiraList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_04_NearbyMap) == 0x000440, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_04_NearbyMap' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, Parts000_05_MonsterList) == 0x000448, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::Parts000_05_MonsterList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, RootPanel) == 0x000450, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, WBP_Menu_Parts_000_C_114) == 0x000458, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::WBP_Menu_Parts_000_C_114' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, bExistsQuestMemoData) == 0x000460, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::bExistsQuestMemoData' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, bExistsKiraData) == 0x000461, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::bExistsKiraData' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, SetumeiWBP) == 0x000468, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::SetumeiWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, MenuSetumeiTextID) == 0x000470, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::MenuSetumeiTextID' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, OpenRuraMenuEvent) == 0x000480, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::OpenRuraMenuEvent' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, bForbiddenKira) == 0x000490, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::bForbiddenKira' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_List_000_modern_C, WindowSizeMargin) == 0x000494, "Member 'UWBP_Menu_WorldMap_List_000_modern_C::WindowSizeMargin' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WhaleSpot

#include "Basic.hpp"

#include "BP_WhaleSpot_classes.hpp"
#include "BP_WhaleSpot_parameters.hpp"


namespace SDK
{

// Function BP_WhaleSpot.BP_WhaleSpot_C.ExecuteUbergraph_BP_WhaleSpot
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WhaleSpot_C::ExecuteUbergraph_BP_WhaleSpot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ExecuteUbergraph_BP_WhaleSpot");

	Params::BP_WhaleSpot_C_ExecuteUbergraph_BP_WhaleSpot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.ChangeCutSceneFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_GameFlagDataCutScene    CutSceneFlag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_WhaleSpot_C::ChangeCutSceneFlag(const struct FJackLDT_GameFlagDataCutScene& CutSceneFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ChangeCutSceneFlag");

	Params::BP_WhaleSpot_C_ChangeCutSceneFlag Parms{};

	Parms.CutSceneFlag = std::move(CutSceneFlag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.MapJumpBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::MapJumpBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "MapJumpBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WhaleSpot_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.OnUnpossessPlayerControlDelegate_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::OnUnpossessPlayerControlDelegate_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "OnUnpossessPlayerControlDelegate_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PlayerActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ControlActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WhaleSpot_C::CustomEvent_0(class AActor* PlayerActor, class AActor* ControlActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "CustomEvent_0");

	Params::BP_WhaleSpot_C_CustomEvent_0 Parms{};

	Parms.PlayerActor = PlayerActor;
	Parms.ControlActor = ControlActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.BndEvt__JackSphere_K2Node_ComponentBoundEvent_135_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WhaleSpot_C::BndEvt__JackSphere_K2Node_ComponentBoundEvent_135_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "BndEvt__JackSphere_K2Node_ComponentBoundEvent_135_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_WhaleSpot_C_BndEvt__JackSphere_K2Node_ComponentBoundEvent_135_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.BndEvt__JackSphere_K2Node_ComponentBoundEvent_132_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_WhaleSpot_C::BndEvt__JackSphere_K2Node_ComponentBoundEvent_132_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "BndEvt__JackSphere_K2Node_ComponentBoundEvent_132_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_WhaleSpot_C_BndEvt__JackSphere_K2Node_ComponentBoundEvent_132_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.MapJumpEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::MapJumpEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "MapJumpEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.ChangeSystemFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::ChangeSystemFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ChangeSystemFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.ChangeQuestProgressFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::ChangeQuestProgressFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ChangeQuestProgressFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.ChangeScenarioFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_GameFlagDataScenario    ScenarioFlag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_WhaleSpot_C::ChangeScenarioFlag(const struct FJackLDT_GameFlagDataScenario& ScenarioFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "ChangeScenarioFlag");

	Params::BP_WhaleSpot_C_ChangeScenarioFlag Parms{};

	Parms.ScenarioFlag = std::move(ScenarioFlag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.SetJumpTag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::SetJumpTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "SetJumpTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WhaleSpot.BP_WhaleSpot_C.CheckCutSceneFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WhaleSpot_C::CheckCutSceneFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WhaleSpot_C", "CheckCutSceneFlag");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Base

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"
#include "ENUM_Schedule_Pattern_structs.hpp"
#include "ENUM_CoordinateMeshSlot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_CharacterBodyType_structs.hpp"


namespace SDK
{

// DynamicClass BP_NPC_Base.BP_NPC_Base_C
// 0x01D0 (0x4590 - 0x43C0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_NPC_Base_C : public AJackScheduledNPC
{
public:
	uint8                                         Pad_43C0[0x10];                                    // 0x43C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USQEXSEADAutoSeComponent*               SQEXSEADAutoSe;                                    // 0x43D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackFukidasiComponent*                 JackFukidasi;                                      // 0x43D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractorComponent*               JackInteractor;                                    // 0x43E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Chair_Start;                                       // 0x43E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Chair_Loop;                                        // 0x43F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Chair_End;                                         // 0x43F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Talk_Start;                                        // 0x4400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           Talk_End;                                          // 0x4408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable_Update_Ptn_By_Rain;                         // 0x4410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable_Update_Ptn_By_Snow;                         // 0x4411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable_Update_Ptn_By_Fine;                         // 0x4412(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4413[0x5];                                     // 0x4413(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UniqueName;                                        // 0x4418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_GameFlagDataScenario>  PatternScenarioFlag;                               // 0x4428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ENUM_Schedule_Pattern>                 PatternID;                                         // 0x4438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	ENUM_Schedule_Pattern                         DefaultSchedulePtn;                                // 0x4448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4449[0x7];                                     // 0x4449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ENUM_Schedule_Pattern>                 ScheduledCollisionPtn;                             // 0x4450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   ScheduledCollision;                                // 0x4460(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4468[0x8];                                     // 0x4468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ScheduledCollisionTransform;                       // 0x4470(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DebugVisible;                                      // 0x44A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IgnoreScaleFromID;                                 // 0x44A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44A2[0x6];                                     // 0x44A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJackProgression>                      QuestProgress;                                     // 0x44A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ENUM_Schedule_Pattern>                 SchedulePtn;                                       // 0x44B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FJackLDT_QuestTable                    QuestId;                                           // 0x44C8(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UJackMiniMapTargetComponent*            MiniMapTarget;                                     // 0x44D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackLDT_UIMapInfo                     LocationInfo;                                      // 0x44E0(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<ENUM_Schedule_Pattern>                 StackEntryPtn;                                     // 0x44F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  ForceFixedLocation;                                // 0x4500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          NotUpdateSystemSchedule;                           // 0x4510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableConeCollision;                               // 0x4511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4512[0x2];                                     // 0x4512(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScheduleCollisionHeightAdjust;                     // 0x4514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReductionSkipLookAtDistance;                       // 0x4518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ENUM_Schedule_Pattern>                 ReductionSchedulePtn;                              // 0x4528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ChangeReductionSkipLook;                           // 0x4538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ChangeReductionSkipFootIK;                         // 0x4539(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_453A[0x6];                                     // 0x453A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ReductionSkipFootIKDistance;                       // 0x4540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<ENUM_Schedule_Pattern>                 ReductionSkipFootIKSchedule;                       // 0x4550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FJackLDT_GameFlagDataScenario          K2Node_Event_ScenarioFlag;                         // 0x4560(0x0010)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          CallFunc_UpdateSchedulePtnFromQuest_Result;        // 0x4570(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENUM_Schedule_Pattern                         CallFunc_UpdateSchedulePtnFromQuest_Ptn;           // 0x4571(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4572[0x6];                                     // 0x4572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_Event_CutSceneFlag;                         // 0x4578(0x0010)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)

public:
	void AddScheduleFixedLocationInfo(bool bpp__ForceFixedLocation__pf, ENUM_Schedule_Pattern bpp__Ptn__pf);
	void ChangeCutSceneFlag(const struct FJackLDT_GameFlagDataCutScene& bpp__CutSceneFlag__pf);
	void ChangeQuestProgressFlag();
	void ChangeScenarioFlag(const struct FJackLDT_GameFlagDataScenario& bpp__ScenarioFlag__pf);
	void ChangeSystemFlag();
	void CheckQuestProgress();
	void CompleteChangeSchedulePtn();
	void CreateScheduledCollision();
	void Event_NPC_Schedule_Jump_Finish();
	void ExecuteUbergraph_BP_NPC_Base_1(int32 bpp__EntryPoint__pf);
	void GetCharacterBodyType(ENUM_CharacterBodyType* bpp__Result__pf);
	void GetMeshByCoordinateSlotType(ENUM_CoordinateMeshSlot bpp__SlotType__pf, class USkeletalMeshComponent** bpp__SkeletalMeshComponent__pf);
	void IsUpdateSchedule(bool* bpp__Result__pf);
	void On_Npc_Schedule_Pnt_Update_By_Weather_Fine();
	void On_Npc_Schedule_Pnt_Update_By_Weather_Rain();
	void On_Npc_Schedule_Pnt_Update_By_Weather_Snow();
	void ReceiveBeginPlay();
	void SetDefaultSchedulePtn(bool bpp__ForceSet__pf);
	void SetImportanceUpdateComponent(EJackNPCImportance bpp__Importance__pf);
	void SetNotUpdateSchedulePtnFlag(bool bpp__NotUpdateSchedule__pf);
	void SetNpcSchedulePtnFromScenarioFlag(const struct FJackLDT_GameFlagDataScenario& bpp__ScenarioFlag__pf, bool* bpp__bResult__pf, ENUM_Schedule_Pattern* bpp__Ptn__pf);
	void SetScheduledCollisionScaleAdjust();
	void SetScheduledCollisionTransform();
	void SetUpActorScaleFromUniqueID();
	void Set_ScheduledCollisionEnable(bool bpp__Enable__pf);
	void UpdateFiexdLocationFromSchedulePtn();
	void UpdateReductionSkipFootIKDistance();
	void UpdateReductionSkipLookAtDistance();
	void UpdateScheduledCollision(ENUM_Schedule_Pattern bpp__Pnt__pf);
	void UpdateSchedulePtn();
	void UpdateSchedulePtnFromQuest(bool* bpp__Result__pf, ENUM_Schedule_Pattern* bpp__Ptn__pf);
	void UpdateSchedulePtnIntegrate(bool bpp__ForceFixedLocation__pf, ENUM_Schedule_Pattern bpp__EntryPtn__pf, bool bpp__DoNotStack__pf);
	void Update_Status_By_Weather_Fine(int32 bpp__OptionalxPtn__pfT);
	void Update_Status_By_Weather_Rain();
	void Update_Status_By_Weather_Snow();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_NPC_Base_C">();
	}
	static class ABP_NPC_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_NPC_Base_C) == 0x000010, "Wrong alignment on ABP_NPC_Base_C");
static_assert(sizeof(ABP_NPC_Base_C) == 0x004590, "Wrong size on ABP_NPC_Base_C");
static_assert(offsetof(ABP_NPC_Base_C, SQEXSEADAutoSe) == 0x0043D0, "Member 'ABP_NPC_Base_C::SQEXSEADAutoSe' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, JackFukidasi) == 0x0043D8, "Member 'ABP_NPC_Base_C::JackFukidasi' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, JackInteractor) == 0x0043E0, "Member 'ABP_NPC_Base_C::JackInteractor' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Chair_Start) == 0x0043E8, "Member 'ABP_NPC_Base_C::Chair_Start' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Chair_Loop) == 0x0043F0, "Member 'ABP_NPC_Base_C::Chair_Loop' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Chair_End) == 0x0043F8, "Member 'ABP_NPC_Base_C::Chair_End' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Talk_Start) == 0x004400, "Member 'ABP_NPC_Base_C::Talk_Start' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Talk_End) == 0x004408, "Member 'ABP_NPC_Base_C::Talk_End' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Enable_Update_Ptn_By_Rain) == 0x004410, "Member 'ABP_NPC_Base_C::Enable_Update_Ptn_By_Rain' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Enable_Update_Ptn_By_Snow) == 0x004411, "Member 'ABP_NPC_Base_C::Enable_Update_Ptn_By_Snow' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, Enable_Update_Ptn_By_Fine) == 0x004412, "Member 'ABP_NPC_Base_C::Enable_Update_Ptn_By_Fine' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, UniqueName) == 0x004418, "Member 'ABP_NPC_Base_C::UniqueName' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, PatternScenarioFlag) == 0x004428, "Member 'ABP_NPC_Base_C::PatternScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, PatternID) == 0x004438, "Member 'ABP_NPC_Base_C::PatternID' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, DefaultSchedulePtn) == 0x004448, "Member 'ABP_NPC_Base_C::DefaultSchedulePtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ScheduledCollisionPtn) == 0x004450, "Member 'ABP_NPC_Base_C::ScheduledCollisionPtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ScheduledCollision) == 0x004460, "Member 'ABP_NPC_Base_C::ScheduledCollision' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ScheduledCollisionTransform) == 0x004470, "Member 'ABP_NPC_Base_C::ScheduledCollisionTransform' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, DebugVisible) == 0x0044A0, "Member 'ABP_NPC_Base_C::DebugVisible' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, IgnoreScaleFromID) == 0x0044A1, "Member 'ABP_NPC_Base_C::IgnoreScaleFromID' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, QuestProgress) == 0x0044A8, "Member 'ABP_NPC_Base_C::QuestProgress' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, SchedulePtn) == 0x0044B8, "Member 'ABP_NPC_Base_C::SchedulePtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, QuestId) == 0x0044C8, "Member 'ABP_NPC_Base_C::QuestId' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, MiniMapTarget) == 0x0044D8, "Member 'ABP_NPC_Base_C::MiniMapTarget' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, LocationInfo) == 0x0044E0, "Member 'ABP_NPC_Base_C::LocationInfo' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, StackEntryPtn) == 0x0044F0, "Member 'ABP_NPC_Base_C::StackEntryPtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ForceFixedLocation) == 0x004500, "Member 'ABP_NPC_Base_C::ForceFixedLocation' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, NotUpdateSystemSchedule) == 0x004510, "Member 'ABP_NPC_Base_C::NotUpdateSystemSchedule' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, EnableConeCollision) == 0x004511, "Member 'ABP_NPC_Base_C::EnableConeCollision' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ScheduleCollisionHeightAdjust) == 0x004514, "Member 'ABP_NPC_Base_C::ScheduleCollisionHeightAdjust' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ReductionSkipLookAtDistance) == 0x004518, "Member 'ABP_NPC_Base_C::ReductionSkipLookAtDistance' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ReductionSchedulePtn) == 0x004528, "Member 'ABP_NPC_Base_C::ReductionSchedulePtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ChangeReductionSkipLook) == 0x004538, "Member 'ABP_NPC_Base_C::ChangeReductionSkipLook' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ChangeReductionSkipFootIK) == 0x004539, "Member 'ABP_NPC_Base_C::ChangeReductionSkipFootIK' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ReductionSkipFootIKDistance) == 0x004540, "Member 'ABP_NPC_Base_C::ReductionSkipFootIKDistance' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, ReductionSkipFootIKSchedule) == 0x004550, "Member 'ABP_NPC_Base_C::ReductionSkipFootIKSchedule' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, K2Node_Event_ScenarioFlag) == 0x004560, "Member 'ABP_NPC_Base_C::K2Node_Event_ScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, CallFunc_UpdateSchedulePtnFromQuest_Result) == 0x004570, "Member 'ABP_NPC_Base_C::CallFunc_UpdateSchedulePtnFromQuest_Result' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, CallFunc_UpdateSchedulePtnFromQuest_Ptn) == 0x004571, "Member 'ABP_NPC_Base_C::CallFunc_UpdateSchedulePtnFromQuest_Ptn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Base_C, K2Node_Event_CutSceneFlag) == 0x004578, "Member 'ABP_NPC_Base_C::K2Node_Event_CutSceneFlag' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// DynamicClass BP_InteractiveBase.BP_InteractiveBase_C
// 0x0168 (0x0500 - 0x0398)
class ABP_InteractiveBase_C : public AActor
{
public:
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Scene1;                                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       Sphere;                                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow;                                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enable;                                            // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          VehicleInteract;                                   // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataScenario>  ActivateScenarioFlag;                              // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ActivateAndCheck;                                  // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataScenario>  DeactivateScenarioFlag;                            // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          DeactivateAndCheck;                                // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AcceptAllVehicleInteract;                          // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJackInteractor>                       K2Node_MakeArray_Array;                            // 0x03F8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0408(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0418(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0420(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_RestartInteraction;             // 0x0424(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0425(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_Event_CutSceneFlag;                         // 0x0428(0x0010)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackLDT_GameFlagDataScenario          K2Node_Event_ScenarioFlag;                         // 0x0438(0x0010)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_Actor2;                         // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0450(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0460(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0468(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x046C(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0470(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x04F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_126_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_128_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void ChangeCutSceneFlag(const struct FJackLDT_GameFlagDataCutScene& bpp__CutSceneFlag__pf);
	void ChangeQuestProgressFlag();
	void ChangeScenarioFlag(const struct FJackLDT_GameFlagDataScenario& bpp__ScenarioFlag__pf);
	void ChangeSystemFlag();
	void CheckScenarioFlag();
	void OnBeginOverlapSphere(class AActor* bpp__Actor__pf);
	void OnEndOverlapSphere(class AActor* bpp__Actor__pf);
	void ReceiveBeginPlay();
	void SetCompleteInteraction(bool bpp__RestartInteraction__pf);
	void SetEnableInteraction(bool bpp__Enable__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_InteractiveBase_C">();
	}
	static class ABP_InteractiveBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractiveBase_C>();
	}
};
static_assert(alignof(ABP_InteractiveBase_C) == 0x000008, "Wrong alignment on ABP_InteractiveBase_C");
static_assert(sizeof(ABP_InteractiveBase_C) == 0x000500, "Wrong size on ABP_InteractiveBase_C");
static_assert(offsetof(ABP_InteractiveBase_C, Scene1) == 0x0003A0, "Member 'ABP_InteractiveBase_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, Sphere) == 0x0003A8, "Member 'ABP_InteractiveBase_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, JackInteractiveActor) == 0x0003B0, "Member 'ABP_InteractiveBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, Arrow) == 0x0003B8, "Member 'ABP_InteractiveBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, Enable) == 0x0003C0, "Member 'ABP_InteractiveBase_C::Enable' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, VehicleInteract) == 0x0003C1, "Member 'ABP_InteractiveBase_C::VehicleInteract' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, ActivateScenarioFlag) == 0x0003C8, "Member 'ABP_InteractiveBase_C::ActivateScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, ActivateAndCheck) == 0x0003D8, "Member 'ABP_InteractiveBase_C::ActivateAndCheck' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, DeactivateScenarioFlag) == 0x0003E0, "Member 'ABP_InteractiveBase_C::DeactivateScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, DeactivateAndCheck) == 0x0003F0, "Member 'ABP_InteractiveBase_C::DeactivateAndCheck' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, AcceptAllVehicleInteract) == 0x0003F1, "Member 'ABP_InteractiveBase_C::AcceptAllVehicleInteract' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_MakeArray_Array) == 0x0003F8, "Member 'ABP_InteractiveBase_C::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000408, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x000410, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherComp) == 0x000418, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000420, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_CustomEvent_RestartInteraction) == 0x000424, "Member 'ABP_InteractiveBase_C::K2Node_CustomEvent_RestartInteraction' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_CustomEvent_Enable) == 0x000425, "Member 'ABP_InteractiveBase_C::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_Event_CutSceneFlag) == 0x000428, "Member 'ABP_InteractiveBase_C::K2Node_Event_CutSceneFlag' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_Event_ScenarioFlag) == 0x000438, "Member 'ABP_InteractiveBase_C::K2Node_Event_ScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_CustomEvent_Actor2) == 0x000448, "Member 'ABP_InteractiveBase_C::K2Node_CustomEvent_Actor2' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000450, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x000458, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x000460, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000468, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x00046C, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_ComponentBoundEvent_SweepResult) == 0x000470, "Member 'ABP_InteractiveBase_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_InteractiveBase_C, K2Node_CustomEvent_Actor) == 0x0004F8, "Member 'ABP_InteractiveBase_C::K2Node_CustomEvent_Actor' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KanbanBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// DynamicClass BP_KanbanBase.BP_KanbanBase_C
// 0x02E8 (0x0680 - 0x0398)
class ABP_KanbanBase_C final : public AActor
{
public:
	class UChildActorComponent*                   NavModifireLargeCharacter;                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       Collision_Back;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                   NavModifireNull;                                   // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   KanbanMesh;                                        // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       Collision_Front;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Scene;                                             // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow;                                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_WorldBroken_C*                 BP_COMP_WorldBroken;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          VehicleInteract;                                   // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FrontOnly;                                         // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CameraMoveFront;                                   // 0x03E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CameraMoveBack;                                    // 0x03E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FrontAccess;                                       // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_TextDataGuide                 MessageID_Front;                                   // 0x03E8(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackLDT_TextDataGuide                 MessageID_Back;                                    // 0x03F8(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_GameFlagDataScenario>  ScenarioFlagFront;                                 // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_TextDataGuide>         ScenarioMessageIDFront;                            // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_GameFlagDataScenario>  ScenarioFlagBack;                                  // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_TextDataGuide>         ScenarioMessageIDBack;                             // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_QuestTable>            QuestIDFront;                                      // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_TextDataGuide>         QuestMessageIDFront;                               // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_QuestTable>            QuestIDBack;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_TextDataGuide>         QuestMessageIDBack;                                // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   NowQuestID;                                        // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WaitLazyMessage;                                   // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitLazyMessageSeconds;                            // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable;                              // 0x0498(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x04A0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Temp_float_Variable2;                              // 0x04A4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable;                                // 0x04A8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent4;   // 0x04B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor5;            // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp4;             // 0x04C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex4;        // 0x04C8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent3;   // 0x04D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor4;            // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp3;             // 0x04E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex3;        // 0x04E8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep2;            // 0x04EC(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult2;           // 0x04F0(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0580(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0588(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0590(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0598(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x05A0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_RestartInteraction;             // 0x05A4(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x05A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x05B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x05C0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x05C4(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x05C8(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0650(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0654(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0658(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2Node_Select_Default;                             // 0x065C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CallFunc_CalcMessageID_MessageID;                  // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_QuestComplete_Ret;                        // 0x0668(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x066C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable2;                             // 0x0670(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)

public:
	void BndEvt__Collision_Back_K2Node_ComponentBoundEvent_91_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__Collision_Back_K2Node_ComponentBoundEvent_96_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void BndEvt__Collision_Front_K2Node_ComponentBoundEvent_84_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__Collision_Front_K2Node_ComponentBoundEvent_87_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_164_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void CalcMessageID(class FName* bpp__MessageID__pf);
	void CalcNearCollision();
	void ExecuteUbergraph_BP_KanbanBase_0(int32 bpp__EntryPoint__pf);
	void GetQuestMessageID(class FName* bpp__MessageID__pf, class FName* bpp__QuestID__pf);
	void QuestComplete(bool* bpp__Ret__pf);
	void QuestCompleteAfterTick(float bpp__DeltaSeconds__pf);
	void ReceiveBeginPlay();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void SetCompleteInteraction(bool bpp__RestartInteraction__pf);
	void SetEnableInteraction(bool bpp__Enable__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_KanbanBase_C">();
	}
	static class ABP_KanbanBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KanbanBase_C>();
	}
};
static_assert(alignof(ABP_KanbanBase_C) == 0x000008, "Wrong alignment on ABP_KanbanBase_C");
static_assert(sizeof(ABP_KanbanBase_C) == 0x000680, "Wrong size on ABP_KanbanBase_C");
static_assert(offsetof(ABP_KanbanBase_C, NavModifireLargeCharacter) == 0x000398, "Member 'ABP_KanbanBase_C::NavModifireLargeCharacter' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Collision_Back) == 0x0003A0, "Member 'ABP_KanbanBase_C::Collision_Back' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, NavModifireNull) == 0x0003A8, "Member 'ABP_KanbanBase_C::NavModifireNull' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, KanbanMesh) == 0x0003B0, "Member 'ABP_KanbanBase_C::KanbanMesh' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Collision_Front) == 0x0003B8, "Member 'ABP_KanbanBase_C::Collision_Front' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, JackInteractiveActor) == 0x0003C0, "Member 'ABP_KanbanBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Scene) == 0x0003C8, "Member 'ABP_KanbanBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Arrow) == 0x0003D0, "Member 'ABP_KanbanBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, BP_COMP_WorldBroken) == 0x0003D8, "Member 'ABP_KanbanBase_C::BP_COMP_WorldBroken' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, VehicleInteract) == 0x0003E0, "Member 'ABP_KanbanBase_C::VehicleInteract' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, FrontOnly) == 0x0003E1, "Member 'ABP_KanbanBase_C::FrontOnly' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CameraMoveFront) == 0x0003E2, "Member 'ABP_KanbanBase_C::CameraMoveFront' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CameraMoveBack) == 0x0003E3, "Member 'ABP_KanbanBase_C::CameraMoveBack' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, FrontAccess) == 0x0003E4, "Member 'ABP_KanbanBase_C::FrontAccess' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, MessageID_Front) == 0x0003E8, "Member 'ABP_KanbanBase_C::MessageID_Front' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, MessageID_Back) == 0x0003F8, "Member 'ABP_KanbanBase_C::MessageID_Back' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, ScenarioFlagFront) == 0x000408, "Member 'ABP_KanbanBase_C::ScenarioFlagFront' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, ScenarioMessageIDFront) == 0x000418, "Member 'ABP_KanbanBase_C::ScenarioMessageIDFront' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, ScenarioFlagBack) == 0x000428, "Member 'ABP_KanbanBase_C::ScenarioFlagBack' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, ScenarioMessageIDBack) == 0x000438, "Member 'ABP_KanbanBase_C::ScenarioMessageIDBack' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, QuestIDFront) == 0x000448, "Member 'ABP_KanbanBase_C::QuestIDFront' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, QuestMessageIDFront) == 0x000458, "Member 'ABP_KanbanBase_C::QuestMessageIDFront' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, QuestIDBack) == 0x000468, "Member 'ABP_KanbanBase_C::QuestIDBack' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, QuestMessageIDBack) == 0x000478, "Member 'ABP_KanbanBase_C::QuestMessageIDBack' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, NowQuestID) == 0x000488, "Member 'ABP_KanbanBase_C::NowQuestID' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, WaitLazyMessage) == 0x000490, "Member 'ABP_KanbanBase_C::WaitLazyMessage' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, WaitLazyMessageSeconds) == 0x000494, "Member 'ABP_KanbanBase_C::WaitLazyMessageSeconds' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Temp_struct_Variable) == 0x000498, "Member 'ABP_KanbanBase_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Temp_float_Variable) == 0x0004A0, "Member 'ABP_KanbanBase_C::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Temp_float_Variable2) == 0x0004A4, "Member 'ABP_KanbanBase_C::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Temp_bool_Variable) == 0x0004A8, "Member 'ABP_KanbanBase_C::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OverlappedComponent4) == 0x0004B0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OverlappedComponent4' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherActor5) == 0x0004B8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherActor5' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherComp4) == 0x0004C0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherComp4' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex4) == 0x0004C8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex4' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OverlappedComponent3) == 0x0004D0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OverlappedComponent3' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherActor4) == 0x0004D8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherActor4' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherComp3) == 0x0004E0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherComp3' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex3) == 0x0004E8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex3' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_bFromSweep2) == 0x0004EC, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_bFromSweep2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_SweepResult2) == 0x0004F0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_SweepResult2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherActor3) == 0x000578, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_CustomEvent_Enable) == 0x000580, "Member 'ABP_KanbanBase_C::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000588, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x000590, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x000598, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x0005A0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_CustomEvent_RestartInteraction) == 0x0005A4, "Member 'ABP_KanbanBase_C::K2Node_CustomEvent_RestartInteraction' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0005A8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x0005B0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherComp) == 0x0005B8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0005C0, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x0005C4, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_ComponentBoundEvent_SweepResult) == 0x0005C8, "Member 'ABP_KanbanBase_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CallFunc_BreakRotator_Roll) == 0x000650, "Member 'ABP_KanbanBase_C::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CallFunc_BreakRotator_Pitch) == 0x000654, "Member 'ABP_KanbanBase_C::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CallFunc_BreakRotator_Yaw) == 0x000658, "Member 'ABP_KanbanBase_C::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_Select_Default) == 0x00065C, "Member 'ABP_KanbanBase_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CallFunc_CalcMessageID_MessageID) == 0x000660, "Member 'ABP_KanbanBase_C::CallFunc_CalcMessageID_MessageID' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, CallFunc_QuestComplete_Ret) == 0x000668, "Member 'ABP_KanbanBase_C::CallFunc_QuestComplete_Ret' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, K2Node_Event_DeltaSeconds) == 0x00066C, "Member 'ABP_KanbanBase_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_KanbanBase_C, Temp_struct_Variable2) == 0x000670, "Member 'ABP_KanbanBase_C::Temp_struct_Variable2' has a wrong offset!");

}


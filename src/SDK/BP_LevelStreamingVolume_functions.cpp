#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelStreamingVolume

#include "Basic.hpp"

#include "BP_LevelStreamingVolume_classes.hpp"
#include "BP_LevelStreamingVolume_parameters.hpp"


namespace SDK
{

// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.ExecuteUbergraph_BP_LevelStreamingVolume
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelStreamingVolume_C::ExecuteUbergraph_BP_LevelStreamingVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "ExecuteUbergraph_BP_LevelStreamingVolume");

	Params::BP_LevelStreamingVolume_C_ExecuteUbergraph_BP_LevelStreamingVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.BattleEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::BattleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "BattleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.LevelLoad
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::LevelLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "LevelLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LevelStreamingVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.MapJumpBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::MapJumpBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "MapJumpBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.BndEvt__BrushOuter_K2Node_ComponentBoundEvent_49_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelStreamingVolume_C::BndEvt__BrushOuter_K2Node_ComponentBoundEvent_49_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "BndEvt__BrushOuter_K2Node_ComponentBoundEvent_49_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_LevelStreamingVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_49_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.BndEvt__BrushComponent_K2Node_ComponentBoundEvent_45_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_LevelStreamingVolume_C::BndEvt__BrushComponent_K2Node_ComponentBoundEvent_45_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "BndEvt__BrushComponent_K2Node_ComponentBoundEvent_45_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_LevelStreamingVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_45_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.MapJumpEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::MapJumpEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "MapJumpEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.BindBattle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelStreamingVolume_C::BindBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "BindBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.CheckIgnoreCS
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LevelStreamingVolume_C::CheckIgnoreCS(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "CheckIgnoreCS");

	Params::BP_LevelStreamingVolume_C_CheckIgnoreCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_LevelStreamingVolume.BP_LevelStreamingVolume_C.WaitStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LevelStreamingVolume_C::WaitStart(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelStreamingVolume_C", "WaitStart");

	Params::BP_LevelStreamingVolume_C_WaitStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


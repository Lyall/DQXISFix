#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Battle

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FLIB_Battle.BP_FLIB_Battle_C
// 0x0000 (0x0038 - 0x0038)
class UBP_FLIB_Battle_C final : public UBlueprintFunctionLibrary
{
public:
	static void CheckToubatuMonsterArray(TArray<class FName>& MonsterIDs, TArray<class FName>& ActionIDs, TArray<class FName>& RenkeiIDs, class UObject* __WorldContext, bool* Ret);
	static void SetEventBattleMonsterTroopInfo(class AActor* MonterLocation, const struct FJackLDT_EventBattle& EventBattleID, bool TroopTracking, class UObject* __WorldContext);
	static void SetEventBattlePlayerInfo(class AActor* MonterLocation, const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext);
	static void SetEventBattleTroopLocation(const struct FVector& Location, EJackMight MightType, class UObject* __WorldContext);
	static void GetEventBattleAppearDisplayName(const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext, class FString* AppearName);
	static void GetEventBattleAppearDisplayNameId(const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext, class FName* AppearNameId);
	static void IsEventBattle(class UObject* __WorldContext, bool* EventBattle, class FName* EventBattleID);
	static void AddToubatuCount(const struct FJackLDT_Monster& MonsterID, class UObject* __WorldContext, bool* Counted);

	static void GetBattleFieldInfo(class UObject* __WorldContext, class UJackBattleFieldInfo** BattleFieldInfo);
	static void GetLengthPlayerToBattleFieldCenter(class UObject* __WorldContext, float* Length);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FLIB_Battle_C">();
	}
	static class UBP_FLIB_Battle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FLIB_Battle_C>();
	}
};
static_assert(alignof(UBP_FLIB_Battle_C) == 0x000008, "Wrong alignment on UBP_FLIB_Battle_C");
static_assert(sizeof(UBP_FLIB_Battle_C) == 0x000038, "Wrong size on UBP_FLIB_Battle_C");

}


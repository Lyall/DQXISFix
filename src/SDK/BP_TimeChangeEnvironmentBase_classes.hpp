#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeChangeEnvironmentBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// DynamicClass BP_TimeChangeEnvironmentBase.BP_TimeChangeEnvironmentBase_C
// 0x0020 (0x03B8 - 0x0398)
class ABP_TimeChangeEnvironmentBase_C : public AActor
{
public:
	class UTextRenderComponent*                   TextRender;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EditorTime;                                        // 0x03A0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ExecUpdate;                                        // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x03B0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void UpdateEnvironment(int32 bpp__Time__pf, int32 bpp__UpdateCounter__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_TimeChangeEnvironmentBase_C">();
	}
	static class ABP_TimeChangeEnvironmentBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TimeChangeEnvironmentBase_C>();
	}
};
static_assert(alignof(ABP_TimeChangeEnvironmentBase_C) == 0x000008, "Wrong alignment on ABP_TimeChangeEnvironmentBase_C");
static_assert(sizeof(ABP_TimeChangeEnvironmentBase_C) == 0x0003B8, "Wrong size on ABP_TimeChangeEnvironmentBase_C");
static_assert(offsetof(ABP_TimeChangeEnvironmentBase_C, TextRender) == 0x000398, "Member 'ABP_TimeChangeEnvironmentBase_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeEnvironmentBase_C, EditorTime) == 0x0003A0, "Member 'ABP_TimeChangeEnvironmentBase_C::EditorTime' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeEnvironmentBase_C, ExecUpdate) == 0x0003AC, "Member 'ABP_TimeChangeEnvironmentBase_C::ExecUpdate' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeEnvironmentBase_C, K2Node_Event_DeltaSeconds) == 0x0003B0, "Member 'ABP_TimeChangeEnvironmentBase_C::K2Node_Event_DeltaSeconds' has a wrong offset!");

}


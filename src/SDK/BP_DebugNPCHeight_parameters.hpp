#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugNPCHeight

#include "Basic.hpp"

#include "ENUM_Schedule_Pattern_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DebugNPCHeight.BP_DebugNPCHeight_C.ExecuteUbergraph_BP_DebugNPCHeight
// 0x02C0 (0x02C0 - 0x0000)
struct BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackNPC*>                       CallFunc_GetNPCCharacters_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackNPC*                               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_NPC_Base_C*                         K2Node_DynamicCast_AsBP_NPC_Base;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFixedLocation_FixedLocation;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJackDebugMenuVariableMenu*             CallFunc_GetDebugMenuItemByPath_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackDebugMenuVariableBool*             CallFunc_AddDebugMenuBool_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackDebugMenuVariableBool*             CallFunc_AddDebugMenuBool_ReturnValue2;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BoolValue2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_BoolValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool BoolValue)>               K2Node_CreateDelegate_OutputDelegate;              // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x022C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool BoolValue)>               K2Node_CreateDelegate_OutputDelegate2;             // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0264(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue2;          // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue3;          // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x0278(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue4;          // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue3;                 // 0x028C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight) == 0x000008, "Wrong alignment on BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight");
static_assert(sizeof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight) == 0x0002C0, "Wrong size on BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, EntryPoint) == 0x000000, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_GetNPCCharacters_ReturnValue) == 0x000018, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_GetNPCCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000050, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00006C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Add_VectorVector_ReturnValue2) == 0x000070, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_GetAllChildActors_ChildActors) == 0x000080, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_DynamicCast_AsBP_NPC_Base) == 0x000090, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_DynamicCast_AsBP_NPC_Base' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000099, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_GetFixedLocation_FixedLocation) == 0x0000B0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_GetFixedLocation_FixedLocation' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000C8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000D8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_GetDebugMenuItemByPath_ReturnValue) == 0x0000E8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_GetDebugMenuItemByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_AddDebugMenuBool_ReturnValue) == 0x0000F0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_AddDebugMenuBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_AddDebugMenuBool_ReturnValue2) == 0x0000F8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_AddDebugMenuBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_CustomEvent_BoolValue2) == 0x000100, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_CustomEvent_BoolValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_CustomEvent_BoolValue) == 0x000101, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_CustomEvent_BoolValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BooleanOR_ReturnValue) == 0x000102, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000118, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x0001A0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_CreateDelegate_OutputDelegate) == 0x0001A8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001B9, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_Location) == 0x0001C4, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_Normal) == 0x0001DC, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_FaceIndex) == 0x00021C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakHitResult_TraceEnd) == 0x00022C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000238, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_X2) == 0x000244, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_Y2) == 0x000248, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BreakVector_Z2) == 0x00024C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, K2Node_CreateDelegate_OutputDelegate2) == 0x000250, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000260, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_SelectColor_ReturnValue) == 0x000264, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_InRange_FloatFloat_ReturnValue2) == 0x000274, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_InRange_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_InRange_FloatFloat_ReturnValue3) == 0x000275, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_InRange_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_SelectColor_ReturnValue2) == 0x000278, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_InRange_FloatFloat_ReturnValue4) == 0x000288, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_InRange_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_SelectColor_ReturnValue3) == 0x00028C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_SelectColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_BooleanOR_ReturnValue2) == 0x00029C, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Conv_FloatToString_ReturnValue) == 0x0002A0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight, CallFunc_Concat_StrStr_ReturnValue4) == 0x0002B0, "Member 'BP_DebugNPCHeight_C_ExecuteUbergraph_BP_DebugNPCHeight::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");

// Function BP_DebugNPCHeight.BP_DebugNPCHeight_C.FixedLocationChange
// 0x0001 (0x0001 - 0x0000)
struct BP_DebugNPCHeight_C_FixedLocationChange final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DebugNPCHeight_C_FixedLocationChange) == 0x000001, "Wrong alignment on BP_DebugNPCHeight_C_FixedLocationChange");
static_assert(sizeof(BP_DebugNPCHeight_C_FixedLocationChange) == 0x000001, "Wrong size on BP_DebugNPCHeight_C_FixedLocationChange");
static_assert(offsetof(BP_DebugNPCHeight_C_FixedLocationChange, BoolValue) == 0x000000, "Member 'BP_DebugNPCHeight_C_FixedLocationChange::BoolValue' has a wrong offset!");

// Function BP_DebugNPCHeight.BP_DebugNPCHeight_C.IllegalZChange
// 0x0001 (0x0001 - 0x0000)
struct BP_DebugNPCHeight_C_IllegalZChange final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DebugNPCHeight_C_IllegalZChange) == 0x000001, "Wrong alignment on BP_DebugNPCHeight_C_IllegalZChange");
static_assert(sizeof(BP_DebugNPCHeight_C_IllegalZChange) == 0x000001, "Wrong size on BP_DebugNPCHeight_C_IllegalZChange");
static_assert(offsetof(BP_DebugNPCHeight_C_IllegalZChange, BoolValue) == 0x000000, "Member 'BP_DebugNPCHeight_C_IllegalZChange::BoolValue' has a wrong offset!");

// Function BP_DebugNPCHeight.BP_DebugNPCHeight_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DebugNPCHeight_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugNPCHeight_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DebugNPCHeight_C_ReceiveTick");
static_assert(sizeof(BP_DebugNPCHeight_C_ReceiveTick) == 0x000004, "Wrong size on BP_DebugNPCHeight_C_ReceiveTick");
static_assert(offsetof(BP_DebugNPCHeight_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DebugNPCHeight_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_DebugNPCHeight.BP_DebugNPCHeight_C.GetFixedLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_DebugNPCHeight_C_GetFixedLocation final
{
public:
	class ABP_NPC_Base_C*                         NPC_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FixedLocation;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_Schedule_Pattern                         CallFunc_GetSchedulePattern_PatternID;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DebugNPCHeight_C_GetFixedLocation) == 0x000008, "Wrong alignment on BP_DebugNPCHeight_C_GetFixedLocation");
static_assert(sizeof(BP_DebugNPCHeight_C_GetFixedLocation) == 0x000018, "Wrong size on BP_DebugNPCHeight_C_GetFixedLocation");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, NPC_0) == 0x000000, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::NPC_0' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, FixedLocation) == 0x000008, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::FixedLocation' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, CallFunc_GetSchedulePattern_PatternID) == 0x000009, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::CallFunc_GetSchedulePattern_PatternID' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugNPCHeight_C_GetFixedLocation, CallFunc_Array_Get_Item) == 0x000011, "Member 'BP_DebugNPCHeight_C_GetFixedLocation::CallFunc_Array_Get_Item' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KiraSpawnBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// DynamicClass BP_KiraSpawnBase.BP_KiraSpawnBase_C
// 0x0348 (0x07A0 - 0x0458)
class ABP_KiraSpawnBase_C final : public AJack3StepAnimActor
{
public:
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       ItemPoint270_2;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint270_1;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint270_0;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint90_2;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint90_1;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint90_0;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint180_2;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint180_1;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint180_0;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint0_2;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint0_1;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                       ItemPoint0_0;                                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackMiniMapTargetComponent*            JackMiniMapTarget;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow270;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow90;                                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow180;                                          // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Arrow0;                                            // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                      InteractiveTrigger;                                // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Scene;                                             // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         IgnoreSpawnSpereArray;                             // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         SpawnKiraNum;                                      // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        NowArrow;                                          // 0x0528(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 AttackCharacter;                                   // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDropEnableStore;                                // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpawnKiraVelocityAngleRange;                       // 0x053C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnKiraVelocityAngleCenter;                      // 0x0548(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SpawnKiraVelocityMax;                              // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnKiraVelocityMin;                              // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnMoveAddZ;                                     // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnMoveAddZRange;                                // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnKiraGravZ;                                    // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffSpawnLocationRadius;                            // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDropStartPointFixed;                              // 0x056C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnKiraLocaionZ;                                 // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnKiraLocaionZRange;                            // 0x0574(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FixDropStartPoint;                                 // 0x0578(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_QuestTable                    QuestId;                                           // 0x0588(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class USphereComponent*>               LocalItemPoint;                                    // 0x0598(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ItemPointIndex;                                    // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomDownDelaySecMin;                             // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomDownDelaySecRange;                           // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                TmpSceneComponents;                                // 0x05B8(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         DelayGetItemMessageSec;                            // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PrintItemDelaySec;                                 // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSyncDropEnableCheckDisable;                       // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreFootIK;                                     // 0x05D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D2[0x6];                                      // 0x05D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ItemGettableObjectBase_3StepItem_C* ThreeStepItem;                                     // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          QuestItem;                                         // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EJackKeys bpp__Key__pf)>       K2Node_CreateDelegate_OutputDelegate;              // 0x05E8(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	EJackKeys                                     K2Node_CustomEvent_Key;                            // 0x05F8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05F9(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FA[0x6];                                      // 0x05FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         K2Node_DynamicCast_AsJack_Character;               // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0608(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x060C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Event_CSID3;                                // 0x0610(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_IsFhinish;                      // 0x0618(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         K2Node_Event_InAnimCharacter;                      // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_Event_bFinish;                              // 0x0628(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_CSID4;                                // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Event_CSID2;                                // 0x0638(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Event_CSID;                                 // 0x0640(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_GetDropItemData_OutId;                    // 0x0648(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<int32>                                 CallFunc_GetDropItemData_OutNum;                   // 0x0658(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0668(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0678(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0680(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_CSID5;                                // 0x0688(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0690(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0698(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x06A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x06B0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x06B4(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x06B8(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          CallFunc_OnInteractStart_Ret;                      // 0x0740(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         K2Node_Event_InAnimCharacter2;                     // 0x0748(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_Event_bFinish2;                             // 0x0750(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0754(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0758(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJackCharacter*                         K2Node_DynamicCast_AsJack_Character2;              // 0x0760(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0768(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayableCharacter*                 K2Node_DynamicCast_AsJack_Playable_Character;      // 0x0770(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0778(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_SetArrowAndItemPoint_NearComponent;       // 0x0780(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        CallFunc_SetArrowAndItemPoint_NearComponent2;      // 0x0788(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Event_CSID6;                                // 0x0790(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Event_CSID7;                                // 0x0798(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ComponentInteractInputSignature__DelegateSignature(EJackKeys bpp__Key__pf);
	void BeginPlaySuper();
	void BndEvt__InteractiveTrigger_K2Node_ComponentBoundEvent_180_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__InteractiveTrigger_K2Node_ComponentBoundEvent_183_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_187_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void CreateKiraId(class FName* bpp__ItemID__pf, int32* bpp__ItemNum__pf);
	void CreateSpawnEffect();
	void CustomEvent_0(EJackKeys bpp__Key__pf);
	void EndCutScene(class FName bpp__CSID__pf);
	void EndCutSceneBeforeUnload(class FName bpp__CSID__pf);
	void EndCutSceneFadInBefore(class FName bpp__CSID__pf);
	void EventOnActionInBase(bool bpp__IsFhinish__pf);
	void EventTickSuper();
	void ExecuteUbergraph_BP_KiraSpawnBase_4(int32 bpp__EntryPoint__pf);
	void GetDelayDownSec(int32 bpp__NowItemIndex__pf, float* bpp__DelaySec__pf);
	void GetKiraEndLocation(const struct FVector& bpp__StartLocation__pf, struct FVector* bpp__EndLocation__pf);
	void GetNearComponentWithArray(const struct FVector& bpp__Location__pf, TArray<class UArrowComponent*>* bpp__ComponentArray__pf, class UArrowComponent** bpp__NearComponent__pf);
	void GetRandomItemPoint(struct FTransform* bpp__EndTransform__pf, int32* bpp__ItemInex__pf);
	void OnAction(class AJackCharacter* bpp__InAnimCharacter__pf, bool bpp__bFinish__pf);
	void OnActionEnd(class AJackCharacter* bpp__InAnimCharacter__pf, bool bpp__bFinish__pf);
	void OnInteractionEnable();
	void OnInteractStart(bool* bpp__Ret__pf);
	void OnRideVehicleInteract();
	void ReceiveBeginPlay();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void SetArrowAndItemPoint(class AJackCharacter* bpp__JackCharacter__pf, class UArrowComponent** bpp__NearComponent__pf);
	void Spawn3StepItem();
	void SpawnKira();
	void StartCutScene(class FName bpp__CSID__pf);
	void StartCutsceneBeforeLoad(class FName bpp__CSID__pf);
	void StartCutSceneCharacterSettingAfter(class FName bpp__CSID__pf);
	void StartCutSceneFadeOutAfter(class FName bpp__CSID__pf);
	void SyncDropEnable();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_KiraSpawnBase_C">();
	}
	static class ABP_KiraSpawnBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KiraSpawnBase_C>();
	}
};
static_assert(alignof(ABP_KiraSpawnBase_C) == 0x000008, "Wrong alignment on ABP_KiraSpawnBase_C");
static_assert(sizeof(ABP_KiraSpawnBase_C) == 0x0007A0, "Wrong size on ABP_KiraSpawnBase_C");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint270_2) == 0x000460, "Member 'ABP_KiraSpawnBase_C::ItemPoint270_2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint270_1) == 0x000468, "Member 'ABP_KiraSpawnBase_C::ItemPoint270_1' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint270_0) == 0x000470, "Member 'ABP_KiraSpawnBase_C::ItemPoint270_0' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint90_2) == 0x000478, "Member 'ABP_KiraSpawnBase_C::ItemPoint90_2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint90_1) == 0x000480, "Member 'ABP_KiraSpawnBase_C::ItemPoint90_1' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint90_0) == 0x000488, "Member 'ABP_KiraSpawnBase_C::ItemPoint90_0' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint180_2) == 0x000490, "Member 'ABP_KiraSpawnBase_C::ItemPoint180_2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint180_1) == 0x000498, "Member 'ABP_KiraSpawnBase_C::ItemPoint180_1' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint180_0) == 0x0004A0, "Member 'ABP_KiraSpawnBase_C::ItemPoint180_0' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint0_2) == 0x0004A8, "Member 'ABP_KiraSpawnBase_C::ItemPoint0_2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint0_1) == 0x0004B0, "Member 'ABP_KiraSpawnBase_C::ItemPoint0_1' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPoint0_0) == 0x0004B8, "Member 'ABP_KiraSpawnBase_C::ItemPoint0_0' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ParticleSystem) == 0x0004C0, "Member 'ABP_KiraSpawnBase_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, JackMiniMapTarget) == 0x0004C8, "Member 'ABP_KiraSpawnBase_C::JackMiniMapTarget' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Arrow270) == 0x0004D0, "Member 'ABP_KiraSpawnBase_C::Arrow270' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Arrow90) == 0x0004D8, "Member 'ABP_KiraSpawnBase_C::Arrow90' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Arrow180) == 0x0004E0, "Member 'ABP_KiraSpawnBase_C::Arrow180' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Arrow0) == 0x0004E8, "Member 'ABP_KiraSpawnBase_C::Arrow0' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Billboard) == 0x0004F0, "Member 'ABP_KiraSpawnBase_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, JackInteractiveActor) == 0x0004F8, "Member 'ABP_KiraSpawnBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, InteractiveTrigger) == 0x000500, "Member 'ABP_KiraSpawnBase_C::InteractiveTrigger' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Scene) == 0x000508, "Member 'ABP_KiraSpawnBase_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, IgnoreSpawnSpereArray) == 0x000510, "Member 'ABP_KiraSpawnBase_C::IgnoreSpawnSpereArray' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraNum) == 0x000520, "Member 'ABP_KiraSpawnBase_C::SpawnKiraNum' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, NowArrow) == 0x000528, "Member 'ABP_KiraSpawnBase_C::NowArrow' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, AttackCharacter) == 0x000530, "Member 'ABP_KiraSpawnBase_C::AttackCharacter' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, bIsDropEnableStore) == 0x000538, "Member 'ABP_KiraSpawnBase_C::bIsDropEnableStore' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraVelocityAngleRange) == 0x00053C, "Member 'ABP_KiraSpawnBase_C::SpawnKiraVelocityAngleRange' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraVelocityAngleCenter) == 0x000548, "Member 'ABP_KiraSpawnBase_C::SpawnKiraVelocityAngleCenter' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraVelocityMax) == 0x000554, "Member 'ABP_KiraSpawnBase_C::SpawnKiraVelocityMax' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraVelocityMin) == 0x000558, "Member 'ABP_KiraSpawnBase_C::SpawnKiraVelocityMin' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnMoveAddZ) == 0x00055C, "Member 'ABP_KiraSpawnBase_C::SpawnMoveAddZ' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnMoveAddZRange) == 0x000560, "Member 'ABP_KiraSpawnBase_C::SpawnMoveAddZRange' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraGravZ) == 0x000564, "Member 'ABP_KiraSpawnBase_C::SpawnKiraGravZ' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, OffSpawnLocationRadius) == 0x000568, "Member 'ABP_KiraSpawnBase_C::OffSpawnLocationRadius' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, bDropStartPointFixed) == 0x00056C, "Member 'ABP_KiraSpawnBase_C::bDropStartPointFixed' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraLocaionZ) == 0x000570, "Member 'ABP_KiraSpawnBase_C::SpawnKiraLocaionZ' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, SpawnKiraLocaionZRange) == 0x000574, "Member 'ABP_KiraSpawnBase_C::SpawnKiraLocaionZRange' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, FixDropStartPoint) == 0x000578, "Member 'ABP_KiraSpawnBase_C::FixDropStartPoint' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, QuestId) == 0x000588, "Member 'ABP_KiraSpawnBase_C::QuestId' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, LocalItemPoint) == 0x000598, "Member 'ABP_KiraSpawnBase_C::LocalItemPoint' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ItemPointIndex) == 0x0005A8, "Member 'ABP_KiraSpawnBase_C::ItemPointIndex' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, RandomDownDelaySecMin) == 0x0005AC, "Member 'ABP_KiraSpawnBase_C::RandomDownDelaySecMin' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, RandomDownDelaySecRange) == 0x0005B0, "Member 'ABP_KiraSpawnBase_C::RandomDownDelaySecRange' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, TmpSceneComponents) == 0x0005B8, "Member 'ABP_KiraSpawnBase_C::TmpSceneComponents' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, DelayGetItemMessageSec) == 0x0005C8, "Member 'ABP_KiraSpawnBase_C::DelayGetItemMessageSec' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, PrintItemDelaySec) == 0x0005CC, "Member 'ABP_KiraSpawnBase_C::PrintItemDelaySec' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, bSyncDropEnableCheckDisable) == 0x0005D0, "Member 'ABP_KiraSpawnBase_C::bSyncDropEnableCheckDisable' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, bIgnoreFootIK) == 0x0005D1, "Member 'ABP_KiraSpawnBase_C::bIgnoreFootIK' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, ThreeStepItem) == 0x0005D8, "Member 'ABP_KiraSpawnBase_C::ThreeStepItem' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, QuestItem) == 0x0005E0, "Member 'ABP_KiraSpawnBase_C::QuestItem' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_CreateDelegate_OutputDelegate) == 0x0005E8, "Member 'ABP_KiraSpawnBase_C::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_CustomEvent_Key) == 0x0005F8, "Member 'ABP_KiraSpawnBase_C::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_SwitchEnum_CmpSuccess) == 0x0005F9, "Member 'ABP_KiraSpawnBase_C::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_AsJack_Character) == 0x000600, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_AsJack_Character' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_bSuccess) == 0x000608, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Temp_int_Array_Index_Variable) == 0x00060C, "Member 'ABP_KiraSpawnBase_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID3) == 0x000610, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID3' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_CustomEvent_IsFhinish) == 0x000618, "Member 'ABP_KiraSpawnBase_C::K2Node_CustomEvent_IsFhinish' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_InAnimCharacter) == 0x000620, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_InAnimCharacter' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_bFinish) == 0x000628, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_bFinish' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID4) == 0x000630, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID4' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID2) == 0x000638, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID) == 0x000640, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, CallFunc_GetDropItemData_OutId) == 0x000648, "Member 'ABP_KiraSpawnBase_C::CallFunc_GetDropItemData_OutId' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, CallFunc_GetDropItemData_OutNum) == 0x000658, "Member 'ABP_KiraSpawnBase_C::CallFunc_GetDropItemData_OutNum' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000668, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x000670, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherComp) == 0x000678, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000680, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID5) == 0x000688, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID5' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, Temp_int_Loop_Counter_Variable) == 0x000690, "Member 'ABP_KiraSpawnBase_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000698, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherActor3) == 0x0006A0, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x0006A8, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x0006B0, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x0006B4, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_SweepResult) == 0x0006B8, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, CallFunc_OnInteractStart_Ret) == 0x000740, "Member 'ABP_KiraSpawnBase_C::CallFunc_OnInteractStart_Ret' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_InAnimCharacter2) == 0x000748, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_InAnimCharacter2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_bFinish2) == 0x000750, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_bFinish2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_DeltaSeconds) == 0x000754, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x000758, "Member 'ABP_KiraSpawnBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_AsJack_Character2) == 0x000760, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_AsJack_Character2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_bSuccess2) == 0x000768, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_AsJack_Playable_Character) == 0x000770, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_AsJack_Playable_Character' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_DynamicCast_bSuccess3) == 0x000778, "Member 'ABP_KiraSpawnBase_C::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, CallFunc_SetArrowAndItemPoint_NearComponent) == 0x000780, "Member 'ABP_KiraSpawnBase_C::CallFunc_SetArrowAndItemPoint_NearComponent' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, CallFunc_SetArrowAndItemPoint_NearComponent2) == 0x000788, "Member 'ABP_KiraSpawnBase_C::CallFunc_SetArrowAndItemPoint_NearComponent2' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID6) == 0x000790, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID6' has a wrong offset!");
static_assert(offsetof(ABP_KiraSpawnBase_C, K2Node_Event_CSID7) == 0x000798, "Member 'ABP_KiraSpawnBase_C::K2Node_Event_CSID7' has a wrong offset!");

}


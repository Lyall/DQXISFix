#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tokugi_Panel_000_modern

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_Tokugi_Panel_000_modern.WBP_Menu_Tokugi_Panel_000_modern_C
// 0x02F8 (0x0688 - 0x0390)
class UWBP_Menu_Tokugi_Panel_000_modern_C final : public UJackUMGTokugiPanelWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 BackgroundImage;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           EffectCanvas;                                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PieceCanvas;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Tokugi_Focus_000_C*           WBP_Menu_Tokugi_Focus_000;                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ItemID;                                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CharType;                                          // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackUMGItemData*>               MenbarDataList;                                    // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Parts_000_modern_C*>   MembarPanelList;                                   // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector2D                              ViewPoint;                                         // 0x03F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorCenteringMargin;                             // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DisplayTokugiPanelPos;                             // 0x0400(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisplayScale;                                      // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnCancel;                                          // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SelectedSkillLineTargetPanelCount;                 // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Window_000_modern_C*   ParentTokugiPanelWindow;                           // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Menu_Tokugi_Skill_Line_000_C*> SkillLineFocusEffList;                             // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bIsControlling;                                    // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPrepareControl;                                 // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowSkillLineSelectEffect;                        // 0x0442(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowSkillSelectFocusEffect;                       // 0x0443(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              ZoomAnimPanelPosFrom;                              // 0x0444(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnTokugiPanelEnter;                                // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   OnEndMasterSelectedPiece;                          // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJackUMGTokugiPanelData*                TempPanelData;                                     // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomAnimDisplayScaleFrom;                          // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomAnimTimer;                                     // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomAnimTimeMax;                                   // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNowZoomAnim;                                      // 0x0484(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              InterpViewpointTo;                                 // 0x0488(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TokugiFlash000List;                                // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bIsZoomMode;                                       // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EJackSkillLine                                CurrSkillLineType;                                 // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2[0x2];                                      // 0x04A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimIndex;                                         // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    UsingTokugiFlash000List;                           // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UUserWidget*                            TokugiFlash001;                                    // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TokugiFlash002List;                                // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UUserWidget*>                    UsingTokugiFlash002List;                           // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UUserWidget*                            TokugiFlash003;                                    // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InputFocusMoveAxis;                                // 0x04E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CursorMoveSpeed;                                   // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorDrawPos;                                     // 0x04F4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMovedCursorByAxisInput;                           // 0x04FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMovedCursorByAutoCollect;                         // 0x04FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FE[0x2];                                      // 0x04FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoCollectTimer;                                  // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoCollectTimeMax;                                // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AutoCollectCursorDrawPosTo;                        // 0x0508(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              AutoCollectCursorDrawPosFrom;                      // 0x0510(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorMoveLimitMin;                                // 0x0518(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorMoveLimitMax;                                // 0x0520(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CursorMoveLimitMargin;                             // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Menu_Tokugi_Piece_001_modern_C*> BasePanelWidgetList;                               // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Tokugi_Piece_001_modern_C*> UsingBasePanelWidgetList;                          // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Tokugi_Piece_000_C*>   PanelWidgetList;                                   // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Tokugi_Piece_000_C*>   UsingPanelWidgetList;                              // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Tokugi_Piece_Question_000_C*> LockPanelWidgetList;                               // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UWBP_Menu_Tokugi_Piece_Question_000_C*> UsingLockPanelWidgetList;                          // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_000_Asset;                       // 0x0590(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_001_Asset;                       // 0x05A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_002_Asset;                       // 0x05C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_003_Asset;                       // 0x05D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TokugiFlashCrack000List;                           // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UUserWidget*>                    UsingTokugiFlashCrack000List;                      // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_Crack_000_Asset;                 // 0x0610(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UUserWidget*                            TokugiFlashCrack001;                               // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Flash_Crack_001_Asset;                 // 0x0630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Menu_Tokugi_Skill_Flash_000_Asset;                 // 0x0648(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UUserWidget*                            Tokugi_Skill_Flash_000;                            // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              SkillFlashVisibility;                              // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SkillFlashAnim;                                    // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SkillFlashPosition;                                // 0x0678(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDestructed;                                       // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnCancel__DelegateSignature(class UWBP_Menu_Tokugi_Panel_000_modern_C* Sender);
	void OnTokugiPanelEnter__DelegateSignature(class UJackUMGTokugiPanelData* PanelData);
	void OnEndMasterSelectedPiece__DelegateSignature(class UWBP_Menu_Tokugi_Panel_000_modern_C* Sender);
	void ExecuteUbergraph_WBP_Menu_Tokugi_Panel_000_modern(int32 EntryPoint);
	void UpdateCursorVisible();
	void SetBackgroundTexture(class UTexture2D* BackgroundTexture);
	void PrepareControl(const struct FVector2D& CursorPos);
	void UnControlCursor(bool bDontHiddenCursor);
	void ControlCursor();
	void SetCursorDrawPos(const struct FVector2D& Position_0);
	void OnClose();
	void OnWidgetKeyEvent(EJackKeys InKeyType, bool bIsPressed);
	void SetTokugiPanelPosition(const struct FVector2D& TokugiPanelPos);
	void InitDisplayScale(float DisplayScale_0);
	void UpdateDisplayScale(float DisplayScale_0);
	void OnEnter();
	void InitTokugiPanelPosByCursorPos(const struct FVector2D& CursorPos);
	void SetInterpViewPointTo(const struct FVector2D& CursorPos);
	void SetTokugiPanelPosByViewpoint(const struct FVector2D& ViewPoint_0);
	void InitPanelData(const TArray<class UJackUMGTokugiPanelData*>& PanelDataList_0, const struct FVector2D& CursorPos, class UTexture2D* BackgroundTexture);
	void UnFocus(bool bDontHiddenCursor);
	void SetParentTokugiPanelWindow(class UWBP_Menu_Tokugi_Window_000_modern_C* TokugiWindow);
	void Focus(const struct FVector2D& StartPoint);
	void WidgetBPActionDelegate(class FName EventTag);
	void SetDisplayScale(float DisplayScale_0);
	void ChangeSelectState(class UJackUMGTokugiPanelData* PanelData, bool bSelected, bool bIsMoveCursorInput);
	void Construct();
	void PlayAnimData(const struct FJackUMGTokugiPanelAnimData& AnimData);
	void PlayTokugiFlash001(const struct FVector2D& Position_0);
	void PlayTokugiFlash(const struct FVector2D& Position_0);
	void PlayTokugiFlash002(const struct FVector2D& Position_0);
	void PlayTokugiFlash003(const struct FVector2D& Position_0);
	void OnEndAnim(class UUserWidget* Sender);
	void PlayCrackEffect(const struct FVector2D& Position_0, int32 Dir);
	void PlayLockOpenEffect(const struct FVector2D& Position_0);
	void AnimChangeDisplayData(const struct FVector2D& CursorPos, bool bZoom);
	void UpdateWidget(float DeltaTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void MoveCursor(const struct FVector2D& Input);
	void CheckCenteringMargin(const struct FVector2D& CursorPosition_0);
	void Destruct();
	void DisplayLoadedLog(class UObject* Object);
	void ExecutePreload();
	void SetSkillFlashPosition(const struct FVector2D& Position_0);
	void SetSkillFlashAnim(class FName AnimName);
	void SetSkillFlashWidget(class UUserWidget* Widget);
	void SetSkillFlashVisibility(ESlateVisibility Visiblity);
	void SendTokugiPanelMessage(class FName Message);
	void SetMenuMode();
	void SetCharacterItemData(class UJackUMGItemData* ItemData);
	void SetPanelData(class UJackUMGTokugiPanelData* PanelData);
	void PlayAnimationNameArg(class FName Arg);
	void PlayAnimationIntArg(int32 Arg);
	void SetEndAnimEventListener(TScriptInterface<class IBP_IF_TokugiPanel_Item_C> Listener);
	void PlayDefaultAnimation();
	void OnTokugiPanelWindowDestruct();
	void SetResetMode();
	void SetBattleResultMode(EJackCharacter CharacterType);
	void OnTokugiPanelWindowCancel();
	void SetCancelEventListener(TScriptInterface<class IBP_IF_TokugiPanel_Item_C> CancelEventListener);
	void SetBackGroundScroll(const struct FVector2D& BgScroll);
	void SetDisplayData(const struct FVector2D& Position_0, float Scale_0, const struct FVector2D& BgScroll);
	void SetDrawPos(const struct FVector2D& Position_0);
	void ShowSkillLineHighlightEffect(EJackSkillLine SkillLineType);
	void GetPanelDrawPos(class UJackUMGTokugiPanelData* Data, bool bAnchorCenter, struct FVector2D* PanelDrawPos);
	void CursorToDrawPos(const struct FVector2D& CursorPos, bool bAnchorCenter, struct FVector2D* DrawPos);
	void GetTokugiPanelPosByCursorPos(const struct FVector2D& CursorPos, float Scale_0, struct FVector2D* PanelPos);
	void GetTokugiPanelPosByViewpoint(const struct FVector2D& ViewPoint_0, float Scale_0, struct FVector2D* TokugiPanelPos);
	void HideAnimSkillLineEffect();
	void ShowSkillSelectFocusEffect(class UJackUMGTokugiPanelData* PanelData, bool bOnlyPositionUpdate);
	void SetShowSelectedSkillLineEffect(bool bShow, EJackSkillLine SkillLineType, const struct FVector2D& Pos);
	void ShowSkillLineSelectEffect(const struct FVector2D& Pos);
	void HideSkillLineSelectEffect();
	void CreatePieceWidget(class UWBP_Menu_Tokugi_Piece_000_C** Return);
	void CreateQuestionWidget(class UWBP_Menu_Tokugi_Piece_Question_000_C** Return);
	void OnInputFocusMoveAxis(const struct FVector2D& Input);
	void AutoCollectCursorPos(float DeltaTime);
	void UpdateInputLeftAxis(float DeltaTime, bool bUmgTick);
	void CreateBaseWidget(class UWBP_Menu_Tokugi_Piece_001_modern_C** Return);
	void RunZoomAnim(float DeltaTime);
	void RunViewpointMove(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_Tokugi_Panel_000_modern_C">();
	}
	static class UWBP_Menu_Tokugi_Panel_000_modern_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_Tokugi_Panel_000_modern_C>();
	}
};
static_assert(alignof(UWBP_Menu_Tokugi_Panel_000_modern_C) == 0x000008, "Wrong alignment on UWBP_Menu_Tokugi_Panel_000_modern_C");
static_assert(sizeof(UWBP_Menu_Tokugi_Panel_000_modern_C) == 0x000688, "Wrong size on UWBP_Menu_Tokugi_Panel_000_modern_C");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UberGraphFrame) == 0x000390, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, BackgroundImage) == 0x000398, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, EffectCanvas) == 0x0003A0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::EffectCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, PieceCanvas) == 0x0003A8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::PieceCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, RootPanel) == 0x0003B0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, WBP_Menu_Tokugi_Focus_000) == 0x0003B8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::WBP_Menu_Tokugi_Focus_000' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ItemID) == 0x0003C0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ItemID' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CharType) == 0x0003C8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CharType' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, MenbarDataList) == 0x0003D0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::MenbarDataList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, MembarPanelList) == 0x0003E0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::MembarPanelList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ViewPoint) == 0x0003F0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ViewPoint' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorCenteringMargin) == 0x0003F8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorCenteringMargin' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, DisplayTokugiPanelPos) == 0x000400, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::DisplayTokugiPanelPos' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, DisplayScale) == 0x000408, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::DisplayScale' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, OnCancel) == 0x000410, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::OnCancel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, SelectedSkillLineTargetPanelCount) == 0x000420, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::SelectedSkillLineTargetPanelCount' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ParentTokugiPanelWindow) == 0x000428, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ParentTokugiPanelWindow' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, SkillLineFocusEffList) == 0x000430, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::SkillLineFocusEffList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bIsControlling) == 0x000440, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bIsControlling' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bIsPrepareControl) == 0x000441, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bIsPrepareControl' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bShowSkillLineSelectEffect) == 0x000442, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bShowSkillLineSelectEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bShowSkillSelectFocusEffect) == 0x000443, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bShowSkillSelectFocusEffect' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ZoomAnimPanelPosFrom) == 0x000444, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ZoomAnimPanelPosFrom' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, OnTokugiPanelEnter) == 0x000450, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::OnTokugiPanelEnter' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, OnEndMasterSelectedPiece) == 0x000460, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::OnEndMasterSelectedPiece' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TempPanelData) == 0x000470, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TempPanelData' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ZoomAnimDisplayScaleFrom) == 0x000478, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ZoomAnimDisplayScaleFrom' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ZoomAnimTimer) == 0x00047C, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ZoomAnimTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, ZoomAnimTimeMax) == 0x000480, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::ZoomAnimTimeMax' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bNowZoomAnim) == 0x000484, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bNowZoomAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, InterpViewpointTo) == 0x000488, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::InterpViewpointTo' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlash000List) == 0x000490, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlash000List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bIsZoomMode) == 0x0004A0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bIsZoomMode' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CurrSkillLineType) == 0x0004A1, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CurrSkillLineType' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, AnimIndex) == 0x0004A4, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::AnimIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingTokugiFlash000List) == 0x0004A8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingTokugiFlash000List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlash001) == 0x0004B8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlash001' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlash002List) == 0x0004C0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlash002List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingTokugiFlash002List) == 0x0004D0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingTokugiFlash002List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlash003) == 0x0004E0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlash003' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, InputFocusMoveAxis) == 0x0004E8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::InputFocusMoveAxis' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorMoveSpeed) == 0x0004F0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorMoveSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorDrawPos) == 0x0004F4, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorDrawPos' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bMovedCursorByAxisInput) == 0x0004FC, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bMovedCursorByAxisInput' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bMovedCursorByAutoCollect) == 0x0004FD, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bMovedCursorByAutoCollect' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, AutoCollectTimer) == 0x000500, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::AutoCollectTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, AutoCollectTimeMax) == 0x000504, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::AutoCollectTimeMax' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, AutoCollectCursorDrawPosTo) == 0x000508, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::AutoCollectCursorDrawPosTo' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, AutoCollectCursorDrawPosFrom) == 0x000510, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::AutoCollectCursorDrawPosFrom' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorMoveLimitMin) == 0x000518, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorMoveLimitMin' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorMoveLimitMax) == 0x000520, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorMoveLimitMax' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, CursorMoveLimitMargin) == 0x000528, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::CursorMoveLimitMargin' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, BasePanelWidgetList) == 0x000530, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::BasePanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingBasePanelWidgetList) == 0x000540, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingBasePanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, PanelWidgetList) == 0x000550, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::PanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingPanelWidgetList) == 0x000560, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingPanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, LockPanelWidgetList) == 0x000570, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::LockPanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingLockPanelWidgetList) == 0x000580, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingLockPanelWidgetList' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_000_Asset) == 0x000590, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_000_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_001_Asset) == 0x0005A8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_001_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_002_Asset) == 0x0005C0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_002_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_003_Asset) == 0x0005D8, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_003_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlashCrack000List) == 0x0005F0, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlashCrack000List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, UsingTokugiFlashCrack000List) == 0x000600, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::UsingTokugiFlashCrack000List' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_Crack_000_Asset) == 0x000610, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_Crack_000_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, TokugiFlashCrack001) == 0x000628, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::TokugiFlashCrack001' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Flash_Crack_001_Asset) == 0x000630, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Flash_Crack_001_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Menu_Tokugi_Skill_Flash_000_Asset) == 0x000648, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Menu_Tokugi_Skill_Flash_000_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, Tokugi_Skill_Flash_000) == 0x000660, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::Tokugi_Skill_Flash_000' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, SkillFlashVisibility) == 0x000668, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::SkillFlashVisibility' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, SkillFlashAnim) == 0x000670, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::SkillFlashAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, SkillFlashPosition) == 0x000678, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::SkillFlashPosition' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Panel_000_modern_C, bDestructed) == 0x000680, "Member 'UWBP_Menu_Tokugi_Panel_000_modern_C::bDestructed' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugActorClassList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DebugActorClassList.BP_DebugActorClassList_C
// 0x0108 (0x04A0 - 0x0398)
class ABP_DebugActorClassList_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, int32>                    ActorClass;                                        // 0x03A8(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<int32>                                 ClassNum;                                          // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FString                                 TempClassName;                                     // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 SelectedActor;                                     // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OldCursorLocation;                                 // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedActorName;                                 // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedClass;                                     // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ActorInfo;                                         // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorList;                                         // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          SeachNearMode;                                     // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         AdvancedClass;                                     // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          VisibleComponent;                                  // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                ActorComponents;                                   // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_DebugActorClassList(int32 EntryPoint);
	void DACL_JumpUpper();
	void DACL_Tick();
	void DACL_Destroy();
	void DACL_Collision();
	void DACL_Hidden();
	void DACL_Visible();
	void DACL_Jump();
	void MakeCommandMenu(class AActor* Actor);
	void ReceiveTick(float DeltaSeconds);
	void MakeActorList();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void MakeMenuMap();
	void GetSelectedAcor(class AActor** SelectedActor_0);
	void SetSelectedValue(const class FString& CursorLocation);
	void GetNearestActor(class AActor** NearestActor);
	void ForceChangeSelectedActor(class AActor* ChangeActor);
	void SetSearchNearMode(bool SearchNearMode);
	void SetForceClassSelect(const class FString& Class_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DebugActorClassList_C">();
	}
	static class ABP_DebugActorClassList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DebugActorClassList_C>();
	}
};
static_assert(alignof(ABP_DebugActorClassList_C) == 0x000008, "Wrong alignment on ABP_DebugActorClassList_C");
static_assert(sizeof(ABP_DebugActorClassList_C) == 0x0004A0, "Wrong size on ABP_DebugActorClassList_C");
static_assert(offsetof(ABP_DebugActorClassList_C, UberGraphFrame) == 0x000398, "Member 'ABP_DebugActorClassList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, DefaultSceneRoot) == 0x0003A0, "Member 'ABP_DebugActorClassList_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, ActorClass) == 0x0003A8, "Member 'ABP_DebugActorClassList_C::ActorClass' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, ClassNum) == 0x0003F8, "Member 'ABP_DebugActorClassList_C::ClassNum' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, TempClassName) == 0x000408, "Member 'ABP_DebugActorClassList_C::TempClassName' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, SelectedActor) == 0x000418, "Member 'ABP_DebugActorClassList_C::SelectedActor' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, OldCursorLocation) == 0x000420, "Member 'ABP_DebugActorClassList_C::OldCursorLocation' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, SelectedActorName) == 0x000430, "Member 'ABP_DebugActorClassList_C::SelectedActorName' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, SelectedClass) == 0x000440, "Member 'ABP_DebugActorClassList_C::SelectedClass' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, ActorInfo) == 0x000450, "Member 'ABP_DebugActorClassList_C::ActorInfo' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, ActorList) == 0x000460, "Member 'ABP_DebugActorClassList_C::ActorList' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, SeachNearMode) == 0x000470, "Member 'ABP_DebugActorClassList_C::SeachNearMode' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, AdvancedClass) == 0x000478, "Member 'ABP_DebugActorClassList_C::AdvancedClass' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, VisibleComponent) == 0x000488, "Member 'ABP_DebugActorClassList_C::VisibleComponent' has a wrong offset!");
static_assert(offsetof(ABP_DebugActorClassList_C, ActorComponents) == 0x000490, "Member 'ABP_DebugActorClassList_C::ActorComponents' has a wrong offset!");

}


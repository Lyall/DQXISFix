#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_MiniMap_000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Hud_MiniMap_000.WBP_Hud_MiniMap_000_C
// 0x0078 (0x0510 - 0x0498)
class UWBP_Hud_MiniMap_000_C final : public UJackUMGMiniMapWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade_In;                                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Fade_Out;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DarkPanel;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapSymbolPanel;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MiniMap_FramePanel;                                // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MiniMapPanel;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NowLoading;                                        // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PCMarkerPanel;                                     // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bFloorChanged;                                     // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           DisablingMapSheetMapID;                            // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UJackUMGMainMapOverlayWidgetBase*       MapTextWBP;                                        // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapFloorInfo*                   DisplayingMapFloorInfo;                            // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequesterID;                                       // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Hud_MiniMap_000(int32 EntryPoint);
	void OnChangeNowLoadingDisplay(bool bDisplay);
	void OnChangeFloor(EJackFloorLevel InFloorLevel, EJackFloorArea InFlooorArea);
	void Destruct();
	void WidgetBPActionDelegate(class FName EventTag);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnConstructWidget();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	class UJackUMGMainMapOverlayWidgetBase* GetMapTextWidget();
	void AsyncLoadFinished(int32 RequesterID_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Hud_MiniMap_000_C">();
	}
	static class UWBP_Hud_MiniMap_000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Hud_MiniMap_000_C>();
	}
};
static_assert(alignof(UWBP_Hud_MiniMap_000_C) == 0x000008, "Wrong alignment on UWBP_Hud_MiniMap_000_C");
static_assert(sizeof(UWBP_Hud_MiniMap_000_C) == 0x000510, "Wrong size on UWBP_Hud_MiniMap_000_C");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, UberGraphFrame) == 0x000498, "Member 'UWBP_Hud_MiniMap_000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, Fade_In) == 0x0004A0, "Member 'UWBP_Hud_MiniMap_000_C::Fade_In' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, Fade_Out) == 0x0004A8, "Member 'UWBP_Hud_MiniMap_000_C::Fade_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, DarkPanel) == 0x0004B0, "Member 'UWBP_Hud_MiniMap_000_C::DarkPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, MapSymbolPanel) == 0x0004B8, "Member 'UWBP_Hud_MiniMap_000_C::MapSymbolPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, MiniMap_FramePanel) == 0x0004C0, "Member 'UWBP_Hud_MiniMap_000_C::MiniMap_FramePanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, MiniMapPanel) == 0x0004C8, "Member 'UWBP_Hud_MiniMap_000_C::MiniMapPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, NowLoading) == 0x0004D0, "Member 'UWBP_Hud_MiniMap_000_C::NowLoading' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, PCMarkerPanel) == 0x0004D8, "Member 'UWBP_Hud_MiniMap_000_C::PCMarkerPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, bFloorChanged) == 0x0004E0, "Member 'UWBP_Hud_MiniMap_000_C::bFloorChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, DisablingMapSheetMapID) == 0x0004E8, "Member 'UWBP_Hud_MiniMap_000_C::DisablingMapSheetMapID' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, MapTextWBP) == 0x0004F8, "Member 'UWBP_Hud_MiniMap_000_C::MapTextWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, DisplayingMapFloorInfo) == 0x000500, "Member 'UWBP_Hud_MiniMap_000_C::DisplayingMapFloorInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_MiniMap_000_C, RequesterID) == 0x000508, "Member 'UWBP_Hud_MiniMap_000_C::RequesterID' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AsyncLoadingImage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AsyncLoadingImage.WBP_AsyncLoadingImage_C.EndLoadingImageEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature final
{
public:
	class UWBP_AsyncLoadingImage_C*               Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature");
static_assert(sizeof(WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature) == 0x000008, "Wrong size on WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature");
static_assert(offsetof(WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature, Sender) == 0x000000, "Member 'WBP_AsyncLoadingImage_C_EndLoadingImageEvent__DelegateSignature::Sender' has a wrong offset!");

// Function WBP_AsyncLoadingImage.WBP_AsyncLoadingImage_C.ExecuteUbergraph_WBP_AsyncLoadingImage
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue5;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue6;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue7;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue4;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor2;                    // 0x004C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0060(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LoadingFlag;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage) == 0x000004, "Wrong alignment on WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage");
static_assert(sizeof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage) == 0x0000A8, "Wrong size on WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, EntryPoint) == 0x000000, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00000C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000010, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000014, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x00001C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue5) == 0x000020, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue6) == 0x000024, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Divide_FloatFloat_ReturnValue7) == 0x000028, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Divide_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Lerp_ReturnValue) == 0x00002C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000030, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_MakeStruct_LinearColor) == 0x000034, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_FMin_ReturnValue) == 0x000044, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_GreaterEqual_FloatFloat_ReturnValue4) == 0x000048, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_GreaterEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_MakeStruct_LinearColor2) == 0x00004C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_MakeStruct_LinearColor2' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_SwitchInteger_CmpSuccess) == 0x00005C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_Event_MyGeometry) == 0x000060, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_Event_InDeltaTime) == 0x00009C, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage, K2Node_CustomEvent_LoadingFlag) == 0x0000A4, "Member 'WBP_AsyncLoadingImage_C_ExecuteUbergraph_WBP_AsyncLoadingImage::K2Node_CustomEvent_LoadingFlag' has a wrong offset!");

// Function WBP_AsyncLoadingImage.WBP_AsyncLoadingImage_C.ChangeLoadingFlag
// 0x0004 (0x0004 - 0x0000)
struct WBP_AsyncLoadingImage_C_ChangeLoadingFlag final
{
public:
	int32                                         LoadingFlag_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AsyncLoadingImage_C_ChangeLoadingFlag) == 0x000004, "Wrong alignment on WBP_AsyncLoadingImage_C_ChangeLoadingFlag");
static_assert(sizeof(WBP_AsyncLoadingImage_C_ChangeLoadingFlag) == 0x000004, "Wrong size on WBP_AsyncLoadingImage_C_ChangeLoadingFlag");
static_assert(offsetof(WBP_AsyncLoadingImage_C_ChangeLoadingFlag, LoadingFlag_0) == 0x000000, "Member 'WBP_AsyncLoadingImage_C_ChangeLoadingFlag::LoadingFlag_0' has a wrong offset!");

// Function WBP_AsyncLoadingImage.WBP_AsyncLoadingImage_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_AsyncLoadingImage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AsyncLoadingImage_C_Tick) == 0x000004, "Wrong alignment on WBP_AsyncLoadingImage_C_Tick");
static_assert(sizeof(WBP_AsyncLoadingImage_C_Tick) == 0x000040, "Wrong size on WBP_AsyncLoadingImage_C_Tick");
static_assert(offsetof(WBP_AsyncLoadingImage_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_AsyncLoadingImage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AsyncLoadingImage_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_AsyncLoadingImage_C_Tick::InDeltaTime' has a wrong offset!");

}


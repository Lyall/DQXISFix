#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Message_Sentaku_Blacksmith_modern

#include "Basic.hpp"

#include "WBP_Menu_Message_Sentaku_Blacksmith_modern_classes.hpp"
#include "WBP_Menu_Message_Sentaku_Blacksmith_modern_parameters.hpp"


namespace SDK
{

// Function WBP_Menu_Message_Sentaku_Blacksmith_modern.WBP_Menu_Message_Sentaku_Blacksmith_modern_C.ExecuteUbergraph_WBP_Menu_Message_Sentaku_Blacksmith_modern
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Message_Sentaku_Blacksmith_modern_C::ExecuteUbergraph_WBP_Menu_Message_Sentaku_Blacksmith_modern(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Message_Sentaku_Blacksmith_modern_C", "ExecuteUbergraph_WBP_Menu_Message_Sentaku_Blacksmith_modern");

	Params::WBP_Menu_Message_Sentaku_Blacksmith_modern_C_ExecuteUbergraph_WBP_Menu_Message_Sentaku_Blacksmith_modern Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Message_Sentaku_Blacksmith_modern.WBP_Menu_Message_Sentaku_Blacksmith_modern_C.SetData
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ItemNameList                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<int32>                           CountList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   ItemNameLength                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Message_Sentaku_Blacksmith_modern_C::SetData(const TArray<class FString>& ItemNameList, const TArray<int32>& CountList, int32 ItemNameLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Message_Sentaku_Blacksmith_modern_C", "SetData");

	Params::WBP_Menu_Message_Sentaku_Blacksmith_modern_C_SetData Parms{};

	Parms.ItemNameList = std::move(ItemNameList);
	Parms.CountList = std::move(CountList);
	Parms.ItemNameLength = ItemNameLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Message_Sentaku_Blacksmith_modern.WBP_Menu_Message_Sentaku_Blacksmith_modern_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Menu_Message_Sentaku_Blacksmith_modern_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Message_Sentaku_Blacksmith_modern_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Menu_Message_Sentaku_Blacksmith_modern.WBP_Menu_Message_Sentaku_Blacksmith_modern_C.RemoveUnuseParts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UJackUMGItemBase*>         PartsList                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class FString>                   TargetArray                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UWBP_Menu_Message_Sentaku_Blacksmith_modern_C::RemoveUnuseParts(TArray<class UJackUMGItemBase*>& PartsList, TArray<class FString>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Message_Sentaku_Blacksmith_modern_C", "RemoveUnuseParts");

	Params::WBP_Menu_Message_Sentaku_Blacksmith_modern_C_RemoveUnuseParts Parms{};

	Parms.PartsList = std::move(PartsList);
	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	PartsList = std::move(Parms.PartsList);
	TargetArray = std::move(Parms.TargetArray);
}

}


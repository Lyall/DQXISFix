#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Time

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_Time.BP_FLIB_Time_C.Set Time Pause
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_Time_C_Set_Time_Pause final
{
public:
	EJackWorldTimePausePurpose                    Purpose;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Time_C_Set_Time_Pause) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_Set_Time_Pause");
static_assert(sizeof(BP_FLIB_Time_C_Set_Time_Pause) == 0x000018, "Wrong size on BP_FLIB_Time_C_Set_Time_Pause");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Pause, Purpose) == 0x000000, "Member 'BP_FLIB_Time_C_Set_Time_Pause::Purpose' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Pause, Pause) == 0x000001, "Member 'BP_FLIB_Time_C_Set_Time_Pause::Pause' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Pause, __WorldContext) == 0x000008, "Member 'BP_FLIB_Time_C_Set_Time_Pause::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Pause, CallFunc_GetWorldTime_ReturnValue) == 0x000010, "Member 'BP_FLIB_Time_C_Set_Time_Pause::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.Set Time HMS
// 0x0058 (0x0058 - 0x0000)
struct BP_FLIB_Time_C_Set_Time_HMS final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Second;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetNPC_Schedule;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseTimeProc;                                      // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_CommonEvent_C>  K2Node_DynamicCast_AsBP_IF_Common_Event;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue2;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Time_C_Set_Time_HMS) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_Set_Time_HMS");
static_assert(sizeof(BP_FLIB_Time_C_Set_Time_HMS) == 0x000058, "Wrong size on BP_FLIB_Time_C_Set_Time_HMS");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, Hour) == 0x000000, "Member 'BP_FLIB_Time_C_Set_Time_HMS::Hour' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, Minute) == 0x000004, "Member 'BP_FLIB_Time_C_Set_Time_HMS::Minute' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, Second) == 0x000008, "Member 'BP_FLIB_Time_C_Set_Time_HMS::Second' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, ResetNPC_Schedule) == 0x00000C, "Member 'BP_FLIB_Time_C_Set_Time_HMS::ResetNPC_Schedule' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, bUseTimeProc) == 0x00000D, "Member 'BP_FLIB_Time_C_Set_Time_HMS::bUseTimeProc' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, __WorldContext) == 0x000010, "Member 'BP_FLIB_Time_C_Set_Time_HMS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_GetStreamingLevel_ReturnValue) == 0x000020, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_GetWorldTime_ReturnValue) == 0x000028, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000030, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, K2Node_DynamicCast_AsBP_IF_Common_Event) == 0x000038, "Member 'BP_FLIB_Time_C_Set_Time_HMS::K2Node_DynamicCast_AsBP_IF_Common_Event' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FLIB_Time_C_Set_Time_HMS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_Multiply_IntInt_ReturnValue2) == 0x00004C, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_Multiply_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_HMS, CallFunc_Add_IntInt_ReturnValue2) == 0x000054, "Member 'BP_FLIB_Time_C_Set_Time_HMS::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.Set Time Zone
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_Time_C_Set_Time_Zone final
{
public:
	EJackTimeZone                                 Timezone;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetNPCSchedule;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempHour;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_Set_Time_Zone) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_Set_Time_Zone");
static_assert(sizeof(BP_FLIB_Time_C_Set_Time_Zone) == 0x000018, "Wrong size on BP_FLIB_Time_C_Set_Time_Zone");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Zone, Timezone) == 0x000000, "Member 'BP_FLIB_Time_C_Set_Time_Zone::Timezone' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Zone, ResetNPCSchedule) == 0x000001, "Member 'BP_FLIB_Time_C_Set_Time_Zone::ResetNPCSchedule' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Zone, __WorldContext) == 0x000008, "Member 'BP_FLIB_Time_C_Set_Time_Zone::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Zone, TempHour) == 0x000010, "Member 'BP_FLIB_Time_C_Set_Time_Zone::TempHour' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_Set_Time_Zone, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_FLIB_Time_C_Set_Time_Zone::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.SetTimePauseTimeZoneEventSave
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackTimeZone                                 Timezone;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetNPCSchedule;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseTimeProc;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackTimeZone                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave");
static_assert(sizeof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave) == 0x000028, "Wrong size on BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, bPause) == 0x000000, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::bPause' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, Timezone) == 0x000001, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::Timezone' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, ResetNPCSchedule) == 0x000002, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::ResetNPCSchedule' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, bUseTimeProc) == 0x000003, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::bUseTimeProc' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, __WorldContext) == 0x000008, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, Temp_byte_Variable) == 0x000010, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, CallFunc_GetWorldTime_ReturnValue) == 0x000018, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave, K2Node_Select_Default) == 0x000020, "Member 'BP_FLIB_Time_C_SetTimePauseTimeZoneEventSave::K2Node_Select_Default' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.SetTimePauseTimeEventSave
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_Time_C_SetTimePauseTimeEventSave final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Hour;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Second;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetNPCSchedule;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseTimeProc;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Time_C_SetTimePauseTimeEventSave) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_SetTimePauseTimeEventSave");
static_assert(sizeof(BP_FLIB_Time_C_SetTimePauseTimeEventSave) == 0x000040, "Wrong size on BP_FLIB_Time_C_SetTimePauseTimeEventSave");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, bPause) == 0x000000, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::bPause' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, Hour) == 0x000004, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::Hour' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, Minute) == 0x000008, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::Minute' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, Second) == 0x00000C, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::Second' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, ResetNPCSchedule) == 0x000010, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::ResetNPCSchedule' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, bUseTimeProc) == 0x000011, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::bUseTimeProc' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, __WorldContext) == 0x000018, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, CallFunc_GetSaveData_ReturnValue) == 0x000020, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, CallFunc_GetActiveMapID_ReturnValue) == 0x000028, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimePauseTimeEventSave, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_FLIB_Time_C_SetTimePauseTimeEventSave::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.CheckTimePauseEventSave
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_Time_C_CheckTimePauseEventSave final
{
public:
	class FName                                   MapId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapStart;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Night;                                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlagInt_ReturnValue2;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue2;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlagInt_ReturnValue3;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue3;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_CheckTimePauseEventSave) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_CheckTimePauseEventSave");
static_assert(sizeof(BP_FLIB_Time_C_CheckTimePauseEventSave) == 0x000050, "Wrong size on BP_FLIB_Time_C_CheckTimePauseEventSave");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, MapId) == 0x000000, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::MapId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, MapStart) == 0x000008, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::MapStart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, __WorldContext) == 0x000010, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, Night) == 0x000018, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::Night' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_GetGameFlagInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_GetGameFlagInt_ReturnValue2) == 0x000020, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_GetGameFlagInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_NotEqual_IntInt_ReturnValue2) == 0x000025, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_NotEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_GetGameFlagInt_ReturnValue3) == 0x000028, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_GetGameFlagInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_GetGameFlagString_ReturnValue) == 0x000030, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000048, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000049, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_NotEqual_IntInt_ReturnValue3) == 0x00004A, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_NotEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTimePauseEventSave, CallFunc_BooleanAND_ReturnValue2) == 0x00004C, "Member 'BP_FLIB_Time_C_CheckTimePauseEventSave::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.SetTimeStopperInRoom
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_Time_C_SetTimeStopperInRoom final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue2;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue3;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue4;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue4;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_SetTimeStopperInRoom) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_SetTimeStopperInRoom");
static_assert(sizeof(BP_FLIB_Time_C_SetTimeStopperInRoom) == 0x000038, "Wrong size on BP_FLIB_Time_C_SetTimeStopperInRoom");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, __WorldContext) == 0x000000, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Multiply_IntInt_ReturnValue) == 0x000008, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_GetNowWorldTime_ReturnValue) == 0x00000C, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_GetNowWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_GetWorldTime_ReturnValue) == 0x000010, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Multiply_IntInt_ReturnValue2) == 0x000018, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Multiply_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Multiply_IntInt_ReturnValue3) == 0x00001C, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Multiply_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Multiply_IntInt_ReturnValue4) == 0x000020, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Multiply_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Add_IntInt_ReturnValue2) == 0x000028, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_Less_IntInt_ReturnValue) == 0x00002E, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x00002F, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x000030, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_LessEqual_IntInt_ReturnValue4) == 0x000031, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_LessEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_SetTimeStopperInRoom, CallFunc_BooleanAND_ReturnValue2) == 0x000033, "Member 'BP_FLIB_Time_C_SetTimeStopperInRoom::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.ReleaseTimeStopperInRoom
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_Time_C_ReleaseTimeStopperInRoom final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Time_C_ReleaseTimeStopperInRoom) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_ReleaseTimeStopperInRoom");
static_assert(sizeof(BP_FLIB_Time_C_ReleaseTimeStopperInRoom) == 0x000010, "Wrong size on BP_FLIB_Time_C_ReleaseTimeStopperInRoom");
static_assert(offsetof(BP_FLIB_Time_C_ReleaseTimeStopperInRoom, __WorldContext) == 0x000000, "Member 'BP_FLIB_Time_C_ReleaseTimeStopperInRoom::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_ReleaseTimeStopperInRoom, CallFunc_GetWorldTime_ReturnValue) == 0x000008, "Member 'BP_FLIB_Time_C_ReleaseTimeStopperInRoom::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.CheckMapJumpTimeSkip
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FLIB_Time_C_CheckMapJumpTimeSkip final
{
public:
	class FName                                   MapId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapStart;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RoomMap;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue3;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue4;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCurrentMapTown_bTown;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue3;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue4;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue5;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue4;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue6;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue7;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue8;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue9;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue5;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue6;            // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue7;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue8;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue10;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue11;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue12;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue13;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue9;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue10;           // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue11;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue12;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue14;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue15;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue16;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue13;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue4;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue4;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue14;           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue15;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue16;           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_CheckMapJumpTimeSkip) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_CheckMapJumpTimeSkip");
static_assert(sizeof(BP_FLIB_Time_C_CheckMapJumpTimeSkip) == 0x0000B0, "Wrong size on BP_FLIB_Time_C_CheckMapJumpTimeSkip");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, MapId) == 0x000000, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::MapId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, MapStart) == 0x000008, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::MapStart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, __WorldContext) == 0x000010, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, RoomMap) == 0x000018, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::RoomMap' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_GetNowWorldTime_ReturnValue) == 0x000020, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_GetNowWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_GetNowWorldTime_ReturnValue2) == 0x000024, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_GetNowWorldTime_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_GetNowWorldTime_ReturnValue3) == 0x000028, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_GetNowWorldTime_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_GetNowWorldTime_ReturnValue4) == 0x00002C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_GetNowWorldTime_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_CheckCurrentMapTown_bTown) == 0x000030, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_CheckCurrentMapTown_bTown' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, K2Node_SwitchName_CmpSuccess) == 0x000031, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, K2Node_SwitchName2_CmpSuccess) == 0x000032, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue2) == 0x000034, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue3) == 0x000038, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue4) == 0x00003C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue5) == 0x000040, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue2) == 0x000048, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Greater_IntInt_ReturnValue) == 0x00004D, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Less_IntInt_ReturnValue) == 0x00004E, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x00004F, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x000050, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue4) == 0x000051, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue2) == 0x000053, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue6) == 0x000054, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue7) == 0x000058, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue8) == 0x00005C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue9) == 0x000060, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue3) == 0x000064, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue4) == 0x000068, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue5) == 0x00006C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Greater_IntInt_ReturnValue2) == 0x00006D, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Less_IntInt_ReturnValue2) == 0x00006E, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue6) == 0x00006F, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue7) == 0x000070, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue8) == 0x000071, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue3) == 0x000072, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue4) == 0x000073, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue10) == 0x000074, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue11) == 0x000078, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue12) == 0x00007C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue13) == 0x000080, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue5) == 0x000084, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue6) == 0x000088, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue9) == 0x00008C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Greater_IntInt_ReturnValue3) == 0x00008D, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Less_IntInt_ReturnValue3) == 0x00008E, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue10) == 0x00008F, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue11) == 0x000090, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue12) == 0x000091, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue5) == 0x000092, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue6) == 0x000093, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue14) == 0x000094, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue15) == 0x000098, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Multiply_IntInt_ReturnValue16) == 0x00009C, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Multiply_IntInt_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue7) == 0x0000A0, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Add_IntInt_ReturnValue8) == 0x0000A4, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue13) == 0x0000A8, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Greater_IntInt_ReturnValue4) == 0x0000A9, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Greater_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_Less_IntInt_ReturnValue4) == 0x0000AA, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_Less_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue14) == 0x0000AB, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue15) == 0x0000AC, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_LessEqual_IntInt_ReturnValue16) == 0x0000AD, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_LessEqual_IntInt_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue7) == 0x0000AE, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckMapJumpTimeSkip, CallFunc_BooleanAND_ReturnValue8) == 0x0000AF, "Member 'BP_FLIB_Time_C_CheckMapJumpTimeSkip::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.CheckTempSaveNight
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_Time_C_CheckTempSaveNight final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Night;                                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue3;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue4;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue4;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_CheckTempSaveNight) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_CheckTempSaveNight");
static_assert(sizeof(BP_FLIB_Time_C_CheckTempSaveNight) == 0x000038, "Wrong size on BP_FLIB_Time_C_CheckTempSaveNight");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, __WorldContext) == 0x000000, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, Night) == 0x000008, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::Night' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_GetNowWorldTime_ReturnValue) == 0x000010, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_GetNowWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Multiply_IntInt_ReturnValue2) == 0x000014, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Multiply_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Multiply_IntInt_ReturnValue3) == 0x000018, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Multiply_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000021, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Multiply_IntInt_ReturnValue4) == 0x000024, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Multiply_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Add_IntInt_ReturnValue2) == 0x000028, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x00002C, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_Less_IntInt_ReturnValue) == 0x00002F, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_LessEqual_IntInt_ReturnValue4) == 0x000030, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_LessEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckTempSaveNight, CallFunc_BooleanAND_ReturnValue2) == 0x000031, "Member 'BP_FLIB_Time_C_CheckTempSaveNight::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Time.BP_FLIB_Time_C.CheckNightTimePause
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_Time_C_CheckNightTimePause final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowWorldTime_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue2;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue3;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue4;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue4;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Time_C_CheckNightTimePause) == 0x000008, "Wrong alignment on BP_FLIB_Time_C_CheckNightTimePause");
static_assert(sizeof(BP_FLIB_Time_C_CheckNightTimePause) == 0x000030, "Wrong size on BP_FLIB_Time_C_CheckNightTimePause");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, __WorldContext) == 0x000000, "Member 'BP_FLIB_Time_C_CheckNightTimePause::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Multiply_IntInt_ReturnValue) == 0x000008, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_GetNowWorldTime_ReturnValue) == 0x00000C, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_GetNowWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Multiply_IntInt_ReturnValue2) == 0x000010, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Multiply_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Multiply_IntInt_ReturnValue3) == 0x000014, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Multiply_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Multiply_IntInt_ReturnValue4) == 0x000018, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Multiply_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Add_IntInt_ReturnValue2) == 0x000020, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_Less_IntInt_ReturnValue) == 0x000026, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000027, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x000028, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_LessEqual_IntInt_ReturnValue4) == 0x000029, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_LessEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Time_C_CheckNightTimePause, CallFunc_BooleanAND_ReturnValue2) == 0x00002B, "Member 'BP_FLIB_Time_C_CheckNightTimePause::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

}


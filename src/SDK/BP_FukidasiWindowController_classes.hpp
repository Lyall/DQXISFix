#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FukidasiWindowController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FukidasiWindowController.BP_FukidasiWindowController_C
// 0x0020 (0x0478 - 0x0458)
class UBP_FukidasiWindowController_C final : public UJackUMGFukidasiWindowController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(Transient, DuplicateTransient)
	bool                                          bUseActionCursor3D;                                // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bUseBattleCursor3D;                                // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WorkIndex;                                         // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UI3d_Icon_ActionCursor_Arrow_C*     ActionCursor3D;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_UI3d_Icon_BattleCursor_C*           BattleCursor3D;                                    // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FukidasiWindowController(int32 EntryPoint);
	void DrawUpdate3dWidget();
	void InitFusigiKaziSuccessWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void UpdateActionCursorIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitFusigiKaziFailedWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitFusigiKaziMaterialWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void HideMonsterEmotionLoopIconWidget(const class UJackUMG3DWidgetData* Data);
	void UpdateMonsterEmotionLoopIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitMonsterEmotionLoopIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitFukidasiIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void UpdateFukidasiIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void HideMonsterEmotionIcon(const class UJackUMG3DWidgetData* Data);
	void UpdateMonsterEmotionIcon(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void HideBattleCursorWidget(const class UJackUMG3DWidgetData* Data);
	void UpdateBattleCursorWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitNamePlateWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void HideNamePlateWidget(const class UJackUMG3DWidgetData* Data);
	void UpdateNamePlateWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void HideActionCursorWidget(const class UJackUMG3DWidgetData* Data);
	void InitMonsterEmotionIcon(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitActionGuideWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitBattleCursorWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitFukidasiWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void InitItemGetIconWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void UpdateActionCursorWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void UpdateFukidasiWidget(class UUserWidget* Widget, const class UJackUMG3DWidgetData* Data);
	void Destroy3dWidget(class UJackUMG3DWidgetData* Data);
	void Update3dWidget(class UJackUMG3DWidgetData* Data);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FukidasiWindowController_C">();
	}
	static class UBP_FukidasiWindowController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FukidasiWindowController_C>();
	}
};
static_assert(alignof(UBP_FukidasiWindowController_C) == 0x000008, "Wrong alignment on UBP_FukidasiWindowController_C");
static_assert(sizeof(UBP_FukidasiWindowController_C) == 0x000478, "Wrong size on UBP_FukidasiWindowController_C");
static_assert(offsetof(UBP_FukidasiWindowController_C, UberGraphFrame) == 0x000458, "Member 'UBP_FukidasiWindowController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FukidasiWindowController_C, bUseActionCursor3D) == 0x000460, "Member 'UBP_FukidasiWindowController_C::bUseActionCursor3D' has a wrong offset!");
static_assert(offsetof(UBP_FukidasiWindowController_C, bUseBattleCursor3D) == 0x000461, "Member 'UBP_FukidasiWindowController_C::bUseBattleCursor3D' has a wrong offset!");
static_assert(offsetof(UBP_FukidasiWindowController_C, WorkIndex) == 0x000464, "Member 'UBP_FukidasiWindowController_C::WorkIndex' has a wrong offset!");
static_assert(offsetof(UBP_FukidasiWindowController_C, ActionCursor3D) == 0x000468, "Member 'UBP_FukidasiWindowController_C::ActionCursor3D' has a wrong offset!");
static_assert(offsetof(UBP_FukidasiWindowController_C, BattleCursor3D) == 0x000470, "Member 'UBP_FukidasiWindowController_C::BattleCursor3D' has a wrong offset!");

}


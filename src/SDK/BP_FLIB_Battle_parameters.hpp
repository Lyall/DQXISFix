#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Battle

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.CheckToubatuMonsterArray
// 0x0088 (0x0088 - 0x0000)
struct BP_FLIB_Battle_C_CheckToubatuMonsterArray final
{
public:
	TArray<class FName>                           MonsterIDs;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class FName>                           ActionIDs;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class FName>                           RenkeiIDs;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempToubatu;                                       // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckToubatuMonster_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Battle_C_CheckToubatuMonsterArray) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_CheckToubatuMonsterArray");
static_assert(sizeof(BP_FLIB_Battle_C_CheckToubatuMonsterArray) == 0x000088, "Wrong size on BP_FLIB_Battle_C_CheckToubatuMonsterArray");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, MonsterIDs) == 0x000000, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::MonsterIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, ActionIDs) == 0x000010, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::ActionIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, RenkeiIDs) == 0x000020, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::RenkeiIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, __WorldContext) == 0x000030, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, Ret) == 0x000038, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, TempToubatu) == 0x000039, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::TempToubatu' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_GetBattleManager_ReturnValue) == 0x000040, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Get_Item2) == 0x000050, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Get_Item3) == 0x000058, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_CheckToubatuMonster_ReturnValue) == 0x000060, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_CheckToubatuMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Length_ReturnValue2) == 0x000068, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Length_ReturnValue3) == 0x00006C, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Array_Length_ReturnValue4) == 0x000074, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x00007C, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Less_IntInt_ReturnValue) == 0x00007E, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, Temp_bool_True_if_break_was_hit_Variable) == 0x000084, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_CheckToubatuMonsterArray, CallFunc_BooleanAND_ReturnValue2) == 0x000086, "Member 'BP_FLIB_Battle_C_CheckToubatuMonsterArray::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattleMonsterTroopInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo final
{
public:
	class AActor*                                 MonterLocation;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_EventBattle                   EventBattleID;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          TroopTracking;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackEventBattleManager*                CallFunc_GetEventBattleManager_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackEventBattleInfo*                   CallFunc_GetEventBattleInfo_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo");
static_assert(sizeof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo) == 0x000050, "Wrong size on BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, MonterLocation) == 0x000000, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::MonterLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, EventBattleID) == 0x000008, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::EventBattleID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, TroopTracking) == 0x000018, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::TroopTracking' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, __WorldContext) == 0x000020, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, CallFunc_GetEventBattleManager_ReturnValue) == 0x000030, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::CallFunc_GetEventBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo, CallFunc_GetEventBattleInfo_ReturnValue) == 0x000048, "Member 'BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo::CallFunc_GetEventBattleInfo_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattlePlayerInfo
// 0x0058 (0x0058 - 0x0000)
struct BP_FLIB_Battle_C_SetEventBattlePlayerInfo final
{
public:
	class AActor*                                 MonterLocation;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_EventBattle                   EventBattleID;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackEventBattleManager*                CallFunc_GetEventBattleManager_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackEventBattleInfo*                   CallFunc_GetEventBattleInfo_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_SetEventBattlePlayerInfo");
static_assert(sizeof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo) == 0x000058, "Wrong size on BP_FLIB_Battle_C_SetEventBattlePlayerInfo");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, MonterLocation) == 0x000000, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::MonterLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, EventBattleID) == 0x000008, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::EventBattleID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, __WorldContext) == 0x000018, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, CallFunc_GetEventBattleManager_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::CallFunc_GetEventBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, CallFunc_GetEventBattleInfo_ReturnValue) == 0x000040, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::CallFunc_GetEventBattleInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattlePlayerInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_FLIB_Battle_C_SetEventBattlePlayerInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattleTroopLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_Battle_C_SetEventBattleTroopLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackMight                                    MightType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTroopLocation_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Battle_C_SetEventBattleTroopLocation) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_SetEventBattleTroopLocation");
static_assert(sizeof(BP_FLIB_Battle_C_SetEventBattleTroopLocation) == 0x000028, "Wrong size on BP_FLIB_Battle_C_SetEventBattleTroopLocation");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleTroopLocation, Location) == 0x000000, "Member 'BP_FLIB_Battle_C_SetEventBattleTroopLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleTroopLocation, MightType) == 0x00000C, "Member 'BP_FLIB_Battle_C_SetEventBattleTroopLocation::MightType' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleTroopLocation, __WorldContext) == 0x000010, "Member 'BP_FLIB_Battle_C_SetEventBattleTroopLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleTroopLocation, CallFunc_GetBattleManager_ReturnValue) == 0x000018, "Member 'BP_FLIB_Battle_C_SetEventBattleTroopLocation::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_SetEventBattleTroopLocation, CallFunc_SetTroopLocation_ReturnValue) == 0x000020, "Member 'BP_FLIB_Battle_C_SetEventBattleTroopLocation::CallFunc_SetTroopLocation_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetEventBattleAppearDisplayName
// 0x0190 (0x0190 - 0x0000)
struct BP_FLIB_Battle_C_GetEventBattleAppearDisplayName final
{
public:
	struct FJackLDT_EventBattle                   EventBattleID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AppearName;                                        // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UJackTextManager*                       CallFunc_GetTextManager_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableEventBattle              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0148)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTextFromTextPackBP_ReturnValue;        // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_GetEventBattleAppearDisplayName");
static_assert(sizeof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName) == 0x000190, "Wrong size on BP_FLIB_Battle_C_GetEventBattleAppearDisplayName");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, EventBattleID) == 0x000000, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::EventBattleID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, __WorldContext) == 0x000010, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, AppearName) == 0x000018, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::AppearName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, CallFunc_GetTextManager_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::CallFunc_GetTextManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000178, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayName, CallFunc_GetTextFromTextPackBP_ReturnValue) == 0x000180, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayName::CallFunc_GetTextFromTextPackBP_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetEventBattleAppearDisplayNameId
// 0x0170 (0x0170 - 0x0000)
struct BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId final
{
public:
	struct FJackLDT_EventBattle                   EventBattleID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AppearNameId;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableEventBattle              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0148)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId");
static_assert(sizeof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId) == 0x000170, "Wrong size on BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId, EventBattleID) == 0x000000, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId::EventBattleID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId, __WorldContext) == 0x000010, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId, AppearNameId) == 0x000018, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId::AppearNameId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.IsEventBattle
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_Battle_C_IsEventBattle final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EventBattle;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EventBattleID;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_IsEventBattle) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_IsEventBattle");
static_assert(sizeof(BP_FLIB_Battle_C_IsEventBattle) == 0x000038, "Wrong size on BP_FLIB_Battle_C_IsEventBattle");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, __WorldContext) == 0x000000, "Member 'BP_FLIB_Battle_C_IsEventBattle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, EventBattle) == 0x000008, "Member 'BP_FLIB_Battle_C_IsEventBattle::EventBattle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, EventBattleID) == 0x000010, "Member 'BP_FLIB_Battle_C_IsEventBattle::EventBattleID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, CallFunc_GetGameFlagString_ReturnValue) == 0x000018, "Member 'BP_FLIB_Battle_C_IsEventBattle::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_IsEventBattle::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_IsEventBattle, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_FLIB_Battle_C_IsEventBattle::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.AddToubatuCount
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_Battle_C_AddToubatuCount final
{
public:
	struct FJackLDT_Monster                       MonsterID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Counted;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefeatMonsterCount_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Battle_C_AddToubatuCount) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_AddToubatuCount");
static_assert(sizeof(BP_FLIB_Battle_C_AddToubatuCount) == 0x000030, "Wrong size on BP_FLIB_Battle_C_AddToubatuCount");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, MonsterID) == 0x000000, "Member 'BP_FLIB_Battle_C_AddToubatuCount::MonsterID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, __WorldContext) == 0x000010, "Member 'BP_FLIB_Battle_C_AddToubatuCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, Counted) == 0x000018, "Member 'BP_FLIB_Battle_C_AddToubatuCount::Counted' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, CallFunc_GetSaveData_ReturnValue) == 0x000020, "Member 'BP_FLIB_Battle_C_AddToubatuCount::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, CallFunc_GetDefeatMonsterCount_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_AddToubatuCount::CallFunc_GetDefeatMonsterCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_AddToubatuCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FLIB_Battle_C_AddToubatuCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetBattleFieldInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_Battle_C_GetBattleFieldInfo final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackBattleFieldInfo*                   BattleFieldInfo;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_GetBattleFieldInfo) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_GetBattleFieldInfo");
static_assert(sizeof(BP_FLIB_Battle_C_GetBattleFieldInfo) == 0x000018, "Wrong size on BP_FLIB_Battle_C_GetBattleFieldInfo");
static_assert(offsetof(BP_FLIB_Battle_C_GetBattleFieldInfo, __WorldContext) == 0x000000, "Member 'BP_FLIB_Battle_C_GetBattleFieldInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetBattleFieldInfo, BattleFieldInfo) == 0x000008, "Member 'BP_FLIB_Battle_C_GetBattleFieldInfo::BattleFieldInfo' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetBattleFieldInfo, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_FLIB_Battle_C_GetBattleFieldInfo::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetLengthPlayerToBattleFieldCenter
// 0x0070 (0x0070 - 0x0000)
struct BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         ControlCharacter;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackBattleFieldInfo*                   CallFunc_GetBattleFieldInfo_BattleFieldInfo;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInfinityBattleField_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackBattleFieldInfo*                   CallFunc_GetBattleFieldInfo_BattleFieldInfo2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetControlCharacter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter) == 0x000008, "Wrong alignment on BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter");
static_assert(sizeof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter) == 0x000070, "Wrong size on BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, __WorldContext) == 0x000000, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, Length) == 0x000008, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::Length' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, ControlCharacter) == 0x000010, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::ControlCharacter' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_GetBattleFieldInfo_BattleFieldInfo) == 0x000018, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_GetBattleFieldInfo_BattleFieldInfo' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_IsInfinityBattleField_ReturnValue) == 0x000021, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_IsInfinityBattleField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_GetBattleManager_ReturnValue) == 0x000028, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_GetBattleFieldInfo_BattleFieldInfo2) == 0x000030, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_GetBattleFieldInfo_BattleFieldInfo2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_GetControlCharacter_ReturnValue) == 0x000038, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_GetControlCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter, CallFunc_VSize2D_ReturnValue) == 0x00006C, "Member 'BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter::CallFunc_VSize2D_ReturnValue' has a wrong offset!");

}


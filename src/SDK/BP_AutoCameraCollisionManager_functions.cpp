#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AutoCameraCollisionManager

#include "Basic.hpp"

#include "BP_AutoCameraCollisionManager_classes.hpp"
#include "BP_AutoCameraCollisionManager_parameters.hpp"


namespace SDK
{

// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.ExecuteUbergraph_BP_AutoCameraCollisionManager
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AutoCameraCollisionManager_C::ExecuteUbergraph_BP_AutoCameraCollisionManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "ExecuteUbergraph_BP_AutoCameraCollisionManager");

	Params::BP_AutoCameraCollisionManager_C_ExecuteUbergraph_BP_AutoCameraCollisionManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.OnBattleCameraEndDelegate_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackBattleCameraCategory               BattleCameraCategory                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AutoCameraCollisionManager_C::OnBattleCameraEndDelegate_Event(EJackBattleCameraCategory BattleCameraCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "OnBattleCameraEndDelegate_Event");

	Params::BP_AutoCameraCollisionManager_C_OnBattleCameraEndDelegate_Event Parms{};

	Parms.BattleCameraCategory = BattleCameraCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.OnBattleCameraStartDelegate_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackBattleCameraCategory               BattleCameraCategory                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AutoCameraCollisionManager_C::OnBattleCameraStartDelegate_Event(EJackBattleCameraCategory BattleCameraCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "OnBattleCameraStartDelegate_Event");

	Params::BP_AutoCameraCollisionManager_C_OnBattleCameraStartDelegate_Event Parms{};

	Parms.BattleCameraCategory = BattleCameraCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.OnPrgCameraSetupDelegate_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::OnPrgCameraSetupDelegate_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "OnPrgCameraSetupDelegate_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.PutCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::PutCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "PutCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.CalcCollisionData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::CalcCollisionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "CalcCollisionData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.CalcCollisionDataNearBattleField
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::CalcCollisionDataNearBattleField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "CalcCollisionDataNearBattleField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.IsCollisionEnableDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          CollisionLocation_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AutoCameraCollisionManager_C::IsCollisionEnableDistance(const struct FVector& CollisionLocation_0, bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "IsCollisionEnableDistance");

	Params::BP_AutoCameraCollisionManager_C_IsCollisionEnableDistance Parms{};

	Parms.CollisionLocation_0 = std::move(CollisionLocation_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.SetCameraCollisionEnable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::SetCameraCollisionEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "SetCameraCollisionEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.SetCameraCollisionDisable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AutoCameraCollisionManager_C::SetCameraCollisionDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "SetCameraCollisionDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AutoCameraCollisionManager.BP_AutoCameraCollisionManager_C.AddCollisionFromDT
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AutoCameraCollisionManager_C::AddCollisionFromDT(class AActor* Actor, class FName Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AutoCameraCollisionManager_C", "AddCollisionFromDT");

	Params::BP_AutoCameraCollisionManager_C_AddCollisionFromDT Parms{};

	Parms.Actor = Actor;
	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Parts_064_modern

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_Parts_064_modern.WBP_Menu_Parts_064_modern_C.ExecuteUbergraph_WBP_Menu_Parts_064_modern
// 0x0100 (0x0100 - 0x0000)
struct WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FJackUMGItemContainer& ItemContainer)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EJackUMGTextColorSet                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          Temp_byte_Variable2;                               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          Temp_byte_Variable3;                               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          Temp_byte_Variable4;                               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          Temp_byte_Variable5;                               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          Temp_byte_Variable6;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          Temp_byte_Variable7;                               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackUMGItemContainer                  K2Node_CustomEvent_ItemContainer;                  // 0x0028(0x0050)()
	class UJackUMGWorldMapQuestMemoData*          K2Node_DynamicCast_AsJack_UMGWorld_Map_Quest_Memo_Data; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGSenrekiQuestData*               K2Node_DynamicCast_AsJack_UMGSenreki_Quest_Data;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Title;                          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EJackProgression                              K2Node_CustomEvent_State;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Description;                    // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJackQuestReward                       K2Node_CustomEvent_RewardData;                     // 0x00C0(0x0020)(NoDestructor)
	bool                                          K2Node_CustomEvent_bHighlight;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bFromQuestMemo;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bYochiQuest;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          K2Node_Select_Default;                             // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          K2Node_Select2_Default;                            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          K2Node_Select3_Default;                            // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          K2Node_Select4_Default;                            // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
};
static_assert(alignof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern) == 0x000008, "Wrong alignment on WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern");
static_assert(sizeof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern) == 0x000100, "Wrong size on WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_bool_Variable) == 0x000004, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable) == 0x000018, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_bool_Variable2) == 0x000019, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable2) == 0x00001A, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable3) == 0x00001B, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_bool_Variable3) == 0x00001C, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable4) == 0x00001D, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable5) == 0x00001E, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_bool_Variable4) == 0x00001F, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable6) == 0x000020, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, Temp_byte_Variable7) == 0x000021, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_ItemContainer) == 0x000028, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_ItemContainer' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_DynamicCast_AsJack_UMGWorld_Map_Quest_Memo_Data) == 0x000078, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_DynamicCast_AsJack_UMGWorld_Map_Quest_Memo_Data' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_DynamicCast_AsJack_UMGSenreki_Quest_Data) == 0x000088, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_DynamicCast_AsJack_UMGSenreki_Quest_Data' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_DynamicCast_bSuccess2) == 0x000090, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_SwitchName_CmpSuccess) == 0x000091, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_Title) == 0x000098, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_Title' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_State) == 0x0000A8, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_Description) == 0x0000B0, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_Description' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_RewardData) == 0x0000C0, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_RewardData' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_bHighlight) == 0x0000E0, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_bHighlight' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_bFromQuestMemo) == 0x0000E1, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_bFromQuestMemo' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_CustomEvent_bYochiQuest) == 0x0000E2, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_CustomEvent_bYochiQuest' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_Select_Default) == 0x0000E3, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_Select2_Default) == 0x0000E4, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_Select3_Default) == 0x0000E5, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_Select4_Default) == 0x0000E6, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, K2Node_SwitchEnum_CmpSuccess) == 0x0000E7, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'WBP_Menu_Parts_064_modern_C_ExecuteUbergraph_WBP_Menu_Parts_064_modern::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_Menu_Parts_064_modern.WBP_Menu_Parts_064_modern_C.SetData
// 0x0050 (0x0050 - 0x0000)
struct WBP_Menu_Parts_064_modern_C_SetData final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EJackProgression                              State;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Description_0;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FJackQuestReward                       RewardData;                                        // 0x0028(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bHighlight;                                        // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromQuestMemo;                                    // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bYochiQuest;                                       // 0x004A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Parts_064_modern_C_SetData) == 0x000008, "Wrong alignment on WBP_Menu_Parts_064_modern_C_SetData");
static_assert(sizeof(WBP_Menu_Parts_064_modern_C_SetData) == 0x000050, "Wrong size on WBP_Menu_Parts_064_modern_C_SetData");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, Title) == 0x000000, "Member 'WBP_Menu_Parts_064_modern_C_SetData::Title' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, State) == 0x000010, "Member 'WBP_Menu_Parts_064_modern_C_SetData::State' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, Description_0) == 0x000018, "Member 'WBP_Menu_Parts_064_modern_C_SetData::Description_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, RewardData) == 0x000028, "Member 'WBP_Menu_Parts_064_modern_C_SetData::RewardData' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, bHighlight) == 0x000048, "Member 'WBP_Menu_Parts_064_modern_C_SetData::bHighlight' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, bFromQuestMemo) == 0x000049, "Member 'WBP_Menu_Parts_064_modern_C_SetData::bFromQuestMemo' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetData, bYochiQuest) == 0x00004A, "Member 'WBP_Menu_Parts_064_modern_C_SetData::bYochiQuest' has a wrong offset!");

// Function WBP_Menu_Parts_064_modern.WBP_Menu_Parts_064_modern_C.CustomEvent_0
// 0x0050 (0x0050 - 0x0000)
struct WBP_Menu_Parts_064_modern_C_CustomEvent_0 final
{
public:
	struct FJackUMGItemContainer                  ItemContainer;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Menu_Parts_064_modern_C_CustomEvent_0) == 0x000008, "Wrong alignment on WBP_Menu_Parts_064_modern_C_CustomEvent_0");
static_assert(sizeof(WBP_Menu_Parts_064_modern_C_CustomEvent_0) == 0x000050, "Wrong size on WBP_Menu_Parts_064_modern_C_CustomEvent_0");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_CustomEvent_0, ItemContainer) == 0x000000, "Member 'WBP_Menu_Parts_064_modern_C_CustomEvent_0::ItemContainer' has a wrong offset!");

// Function WBP_Menu_Parts_064_modern.WBP_Menu_Parts_064_modern_C.SetQuestIconVisibility
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility final
{
public:
	bool                                          IsYochiQuest;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility) == 0x000001, "Wrong alignment on WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility");
static_assert(sizeof(WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility) == 0x000001, "Wrong size on WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility");
static_assert(offsetof(WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility, IsYochiQuest) == 0x000000, "Member 'WBP_Menu_Parts_064_modern_C_SetQuestIconVisibility::IsYochiQuest' has a wrong offset!");

}


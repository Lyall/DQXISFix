#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChairTargetBase

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// DynamicClass BP_ChairTargetBase.BP_ChairTargetBase_C
// 0x0048 (0x03E0 - 0x0398)
class ABP_ChairTargetBase_C : public AActor
{
public:
	class UNavModifierComponent*                  NavModifier;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Sphere;                                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        SitFront;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        SitRight;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        SitLeft;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   Isu;                                               // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextRenderComponent*                   TextRender1;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Override_Mesh;                                     // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NaviModefireEnable;                                // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_ChairTargetBase_C">();
	}
	static class ABP_ChairTargetBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChairTargetBase_C>();
	}
};
static_assert(alignof(ABP_ChairTargetBase_C) == 0x000008, "Wrong alignment on ABP_ChairTargetBase_C");
static_assert(sizeof(ABP_ChairTargetBase_C) == 0x0003E0, "Wrong size on ABP_ChairTargetBase_C");
static_assert(offsetof(ABP_ChairTargetBase_C, NavModifier) == 0x000398, "Member 'ABP_ChairTargetBase_C::NavModifier' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, Sphere) == 0x0003A0, "Member 'ABP_ChairTargetBase_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, SitFront) == 0x0003A8, "Member 'ABP_ChairTargetBase_C::SitFront' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, SitRight) == 0x0003B0, "Member 'ABP_ChairTargetBase_C::SitRight' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, SitLeft) == 0x0003B8, "Member 'ABP_ChairTargetBase_C::SitLeft' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, Isu) == 0x0003C0, "Member 'ABP_ChairTargetBase_C::Isu' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, TextRender1) == 0x0003C8, "Member 'ABP_ChairTargetBase_C::TextRender1' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, Override_Mesh) == 0x0003D0, "Member 'ABP_ChairTargetBase_C::Override_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_ChairTargetBase_C, NaviModefireEnable) == 0x0003D8, "Member 'ABP_ChairTargetBase_C::NaviModefireEnable' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleFieldGenerator

#include "Basic.hpp"

#include "BP_BattleFieldGenerator_classes.hpp"
#include "BP_BattleFieldGenerator_parameters.hpp"


namespace SDK
{

// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.ExecuteUbergraph_BP_BattleFieldGenerator
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattleFieldGenerator_C::ExecuteUbergraph_BP_BattleFieldGenerator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "ExecuteUbergraph_BP_BattleFieldGenerator");

	Params::BP_BattleFieldGenerator_C_ExecuteUbergraph_BP_BattleFieldGenerator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.OnBattleEnd_Event_0
// (BlueprintCallable, BlueprintEvent)

void ABP_BattleFieldGenerator_C::OnBattleEnd_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "OnBattleEnd_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.OnBattleStart_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PermitIndex_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattleFieldGenerator_C::OnBattleStart_Event_0(int32 PermitIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "OnBattleStart_Event_0");

	Params::BP_BattleFieldGenerator_C_OnBattleStart_Event_0 Parms{};

	Parms.PermitIndex_0 = PermitIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BattleFieldGenerator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BattleFieldGenerator_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.SetBlockngVolumeEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   PermitIndex_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattleFieldGenerator_C::SetBlockngVolumeEnable(bool Enable, int32 PermitIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "SetBlockngVolumeEnable");

	Params::BP_BattleFieldGenerator_C_SetBlockngVolumeEnable Parms{};

	Parms.Enable = Enable;
	Parms.PermitIndex_0 = PermitIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.IsPermitVolumeValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BattleFieldGenerator_C::IsPermitVolumeValid(bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "IsPermitVolumeValid");

	Params::BP_BattleFieldGenerator_C_IsPermitVolumeValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.SetupVolumes
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_BattleFieldGenerator_C::SetupVolumes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "SetupVolumes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleFieldGenerator.BP_BattleFieldGenerator_C.DisableOverlapEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AVolume*                          Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BattleFieldGenerator_C::DisableOverlapEvent(class AVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleFieldGenerator_C", "DisableOverlapEvent");

	Params::BP_BattleFieldGenerator_C_DisableOverlapEvent Parms{};

	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}

}


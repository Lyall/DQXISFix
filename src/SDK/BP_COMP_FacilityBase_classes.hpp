#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_COMP_FacilityBase

#include "Basic.hpp"

#include "JackGame_classes.hpp"


namespace SDK
{

// DynamicClass BP_COMP_FacilityBase.BP_COMP_FacilityBase_C
// 0x0040 (0x0168 - 0x0128)
class UBP_COMP_FacilityBase_C : public UJackNPCComponentBase
{
public:
	class AJackScheduledNPC*                      TalkNPC;                                           // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TalkShopOnly;                                      // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Available;                                         // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     CallFunc_UniqueMenuOpen_Result;                    // 0x0140(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJackScheduledNPC*                      K2Node_DynamicCast_AsJack_Scheduled_NPC;           // 0x0148(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackScheduledNPC*                      K2Node_CustomEvent_NPC;                            // 0x0158(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_LookAtEnable;                   // 0x0160(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExecuteUbergraph_BP_COMP_FacilityBase_2(int32 bpp__EntryPoint__pf);
	void OpenMenu();
	void ReceiveBeginPlay();
	void SetLookAtToTalkCharacter(bool bpp__LookAtEnable__pf);
	void ShopTalkEnd();
	void ShopTalkSequence(class AJackScheduledNPC* bpp__NPC__pf, bool bpp__LookAtEnable__pf);
	void UniqueMenuOpen(class UJackUMGWidgetBase** bpp__Result__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_COMP_FacilityBase_C">();
	}
	static class UBP_COMP_FacilityBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_COMP_FacilityBase_C>();
	}
};
static_assert(alignof(UBP_COMP_FacilityBase_C) == 0x000008, "Wrong alignment on UBP_COMP_FacilityBase_C");
static_assert(sizeof(UBP_COMP_FacilityBase_C) == 0x000168, "Wrong size on UBP_COMP_FacilityBase_C");
static_assert(offsetof(UBP_COMP_FacilityBase_C, TalkNPC) == 0x000128, "Member 'UBP_COMP_FacilityBase_C::TalkNPC' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, TalkShopOnly) == 0x000130, "Member 'UBP_COMP_FacilityBase_C::TalkShopOnly' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, Value) == 0x000134, "Member 'UBP_COMP_FacilityBase_C::Value' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, Available) == 0x000138, "Member 'UBP_COMP_FacilityBase_C::Available' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, CallFunc_UniqueMenuOpen_Result) == 0x000140, "Member 'UBP_COMP_FacilityBase_C::CallFunc_UniqueMenuOpen_Result' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, K2Node_DynamicCast_AsJack_Scheduled_NPC) == 0x000148, "Member 'UBP_COMP_FacilityBase_C::K2Node_DynamicCast_AsJack_Scheduled_NPC' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'UBP_COMP_FacilityBase_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, K2Node_CustomEvent_NPC) == 0x000158, "Member 'UBP_COMP_FacilityBase_C::K2Node_CustomEvent_NPC' has a wrong offset!");
static_assert(offsetof(UBP_COMP_FacilityBase_C, K2Node_CustomEvent_LookAtEnable) == 0x000160, "Member 'UBP_COMP_FacilityBase_C::K2Node_CustomEvent_LookAtEnable' has a wrong offset!");

}


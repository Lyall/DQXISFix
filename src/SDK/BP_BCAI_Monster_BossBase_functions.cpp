#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BCAI_Monster_BossBase

#include "Basic.hpp"

#include "BP_BCAI_Monster_BossBase_classes.hpp"
#include "BP_BCAI_Monster_BossBase_parameters.hpp"


namespace SDK
{

// Function BP_BCAI_Monster_BossBase.BP_BCAI_Monster_BossBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_BCAI_Monster_BossBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BCAI_Monster_BossBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BCAI_Monster_BossBase.BP_BCAI_Monster_BossBase_C.ExecTurnCommand
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackBattleCommandAI_ExecTurnCommandResultReturnValue                                            (Parm, OutParm, ReturnParm)

struct FJackBattleCommandAI_ExecTurnCommandResult ABP_BCAI_Monster_BossBase_C::ExecTurnCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BCAI_Monster_BossBase_C", "ExecTurnCommand");

	Params::BP_BCAI_Monster_BossBase_C_ExecTurnCommand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BCAI_Monster_BossBase.BP_BCAI_Monster_BossBase_C.ChoiceNextAIIDFromCandidates
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurrentAIID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             NextAIID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BCAI_Monster_BossBase_C::ChoiceNextAIIDFromCandidates(class FName CurrentAIID, class FName* NextAIID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BCAI_Monster_BossBase_C", "ChoiceNextAIIDFromCandidates");

	Params::BP_BCAI_Monster_BossBase_C_ChoiceNextAIIDFromCandidates Parms{};

	Parms.CurrentAIID = CurrentAIID;

	UObject::ProcessEvent(Func, &Parms);

	if (NextAIID != nullptr)
		*NextAIID = Parms.NextAIID;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_PlayerController

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FLIB_PlayerController.BP_FLIB_PlayerController_C
// 0x0000 (0x0038 - 0x0038)
class UBP_FLIB_PlayerController_C final : public UBlueprintFunctionLibrary
{
public:
	static void UpdateGroundAffects(class APlayerController* PlayerController, class UObject* __WorldContext);
	static void SetFootLocationMaterialParameter(int32 Index_0, const struct FVector& ParameterValue, class UObject* __WorldContext);
	static void SetPartyOddEffect(const struct FJackLDT_OddEffect& InOddEffect, class UObject* __WorldContext);
	static void SetCharaOddEffectCore(TArray<class UJackGameCharacter*>& CharaArray, const struct FJackLDT_OddEffect& InOddEffect, class UObject* __WorldContext);
	static void SetCharaOddEffect(TArray<EJackCharacter>& CharaIDArray, const struct FJackLDT_OddEffect& InOddEffect, class UObject* __WorldContext);
	static void IsDeadCharacter(EJackCharacter CharaID, class UObject* __WorldContext, bool* Dead);
	static void GetPlayerLevel(class UObject* __WorldContext, int32* NewParam);
	static void CalcPlayerGroundLocation(const struct FVector& InLocation, float SweepDistance, class UObject* __WorldContext, struct FVector* OutLocation);
	static void VehicleForceUnmount(bool Destroy, class UObject* __WorldContext, class AJackVehicle** RetVehicle);
	static void CalcNpcGroundLocation(const struct FVector& InLocation, class AJackScheduledNPC* NPC, class UObject* __WorldContext, struct FVector* OutLocation);
	static void PlayerNijiiroNoEdaEffect(class UObject* __WorldContext);
	static void StopPlayerNijiiroNoEdaEffect(class UObject* __WorldContext);
	static void RidableVehicleAllDestroy(class UObject* __WorldContext);
	static void SpawnFlueEmitterAnyWhereVer(class UObject* __WorldContext);
	static void NearVehicleSetLocation(class AActor* SetLocationActor, float Range, class UObject* __WorldContext);
	static void ChoiceRidableVehicle(EJackVehicleModelId VehicleModel, class UObject* __WorldContext, class AActor** RetActor);
	static void ChangeControlledCharacter(EJackCharacter InType, class UObject* __WorldContext);
	static void CopyCameraParam(class ACameraActor* InCamera, class UObject* __WorldContext);
	static void SetLookAtPlayerToCharacter(class AJackCharacter* Character, bool LookAtEnable, class UObject* __WorldContext);
	static void SetNoRelocationCharacters(TArray<EJackCharacter>& InIDs, bool Enable, class UObject* __WorldContext);
	static void ResetNoRelocationCharacters(class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FLIB_PlayerController_C">();
	}
	static class UBP_FLIB_PlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FLIB_PlayerController_C>();
	}
};
static_assert(alignof(UBP_FLIB_PlayerController_C) == 0x000008, "Wrong alignment on UBP_FLIB_PlayerController_C");
static_assert(sizeof(UBP_FLIB_PlayerController_C) == 0x000038, "Wrong size on UBP_FLIB_PlayerController_C");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Keyconfig_Parts_000_Steam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_Keyconfig_Parts_000_Steam.WBP_Menu_Keyconfig_Parts_000_Steam_C
// 0x0038 (0x0408 - 0x03D0)
class UWBP_Menu_Keyconfig_Parts_000_Steam_C final : public UJackUMGItemBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blink;                                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePanel_Gamepad_1;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePanel_Gamepad_2_LR;                           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePanel_Gamepad_3_OptionShare;                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPanel_Gamepad_1;                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPanel_Keybord_1;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Menu_Keyconfig_Parts_000_Steam(int32 EntryPoint);
	void UpdateContainerDelegate(const struct FJackUMGItemContainer& ItemContainer);
	void Construct();
	void SetKeyListColor(bool Enable);
	void SetTextureAndCaption(class UTexture2D* InTexture, const class FText& InText);
	void SetButtonTexture(class UTexture2D* InTexture);
	void SetLoopAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_Keyconfig_Parts_000_Steam_C">();
	}
	static class UWBP_Menu_Keyconfig_Parts_000_Steam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_Keyconfig_Parts_000_Steam_C>();
	}
};
static_assert(alignof(UWBP_Menu_Keyconfig_Parts_000_Steam_C) == 0x000008, "Wrong alignment on UWBP_Menu_Keyconfig_Parts_000_Steam_C");
static_assert(sizeof(UWBP_Menu_Keyconfig_Parts_000_Steam_C) == 0x000408, "Wrong size on UWBP_Menu_Keyconfig_Parts_000_Steam_C");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, UberGraphFrame) == 0x0003D0, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, Blink) == 0x0003D8, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::Blink' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, ImagePanel_Gamepad_1) == 0x0003E0, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::ImagePanel_Gamepad_1' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, ImagePanel_Gamepad_2_LR) == 0x0003E8, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::ImagePanel_Gamepad_2_LR' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, ImagePanel_Gamepad_3_OptionShare) == 0x0003F0, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::ImagePanel_Gamepad_3_OptionShare' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, TextPanel_Gamepad_1) == 0x0003F8, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::TextPanel_Gamepad_1' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Keyconfig_Parts_000_Steam_C, TextPanel_Keybord_1) == 0x000400, "Member 'UWBP_Menu_Keyconfig_Parts_000_Steam_C::TextPanel_Keybord_1' has a wrong offset!");

}


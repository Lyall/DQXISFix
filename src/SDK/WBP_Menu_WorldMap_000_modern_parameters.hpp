#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_000_modern

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "JackGame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.ExecuteUbergraph_WBP_Menu_WorldMap_000_modern
// 0x0178 (0x0178 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventTag;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackKeys                                     K2Node_Event_Key;                                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Pressed;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Released;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Vector2;                        // 0x0074(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUIDisableCamera_Disabled;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0094(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EJackKeys InKeyType, bool bIsPressed)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Vector;                         // 0x00C4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue3;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackUMGAnimSet                        K2Node_MakeStruct_JackUMGAnimSet;                  // 0x00D8(0x0038)(NoDestructor)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue4;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAnimSet_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGSoundSet*                       CallFunc_GetSoundSet_ReturnValue;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorMembers*                CallFunc_GetAccessorMembers_ReturnValue;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue5;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSoundSet*                       CallFunc_GetSoundSet_ReturnValue2;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventTag)>         K2Node_CreateDelegate_OutputDelegate3;             // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UWBP_Menu_WorldMap_Cursor_000_C*> K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern) == 0x000178, "Wrong size on WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_MyGeometry) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_InDeltaTime) == 0x000050, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CustomEvent_EventTag) == 0x000058, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_SwitchName_CmpSuccess) == 0x000060, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUMGManager_ReturnValue) == 0x000068, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_Key) == 0x000070, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_Key' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_Pressed) == 0x000071, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_Pressed' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_Released) == 0x000072, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_Released' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CustomEvent_Vector2) == 0x000074, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CustomEvent_Vector2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_VSize2D_ReturnValue) == 0x00007C, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUMGManager_ReturnValue2) == 0x000088, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUIDisableCamera_Disabled) == 0x000090, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUIDisableCamera_Disabled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_MakeVector2D_ReturnValue) == 0x000094, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_Event_DeltaTime) == 0x00009C, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_TestsWorldMapState_ReturnValue) == 0x0000A0, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CustomEvent_Vector) == 0x0000C4, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CustomEvent_Vector' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUMGManager_ReturnValue3) == 0x0000D0, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUMGManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_MakeStruct_JackUMGAnimSet) == 0x0000D8, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_MakeStruct_JackUMGAnimSet' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUMGManager_ReturnValue4) == 0x000110, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUMGManager_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_SetAnimSet_ReturnValue) == 0x000118, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_SetAnimSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetSoundSet_ReturnValue) == 0x000120, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetSoundSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetAccessorMembers_ReturnValue) == 0x000128, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetAccessorMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetUMGManager_ReturnValue5) == 0x000130, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetUMGManager_ReturnValue5' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetSoundSet_ReturnValue2) == 0x000138, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetSoundSet_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CreateDelegate_OutputDelegate2) == 0x000140, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetTimeRange_MinTime) == 0x000150, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, CallFunc_GetTimeRange_MaxTime) == 0x000154, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_CreateDelegate_OutputDelegate3) == 0x000158, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern, K2Node_MakeArray_Array) == 0x000168, "Member 'WBP_Menu_WorldMap_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_000_modern::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.StickEventR
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_StickEventR final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_StickEventR) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_StickEventR");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_StickEventR) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_StickEventR");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_StickEventR, Vector) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_StickEventR::Vector' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdateWidget
// 0x0004 (0x0004 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdateWidget final
{
public:
	float                                         DeltaTime_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdateWidget) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdateWidget");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdateWidget) == 0x000004, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdateWidget");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateWidget, DeltaTime_0) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateWidget::DeltaTime_0' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.StickEventL
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_StickEventL final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_StickEventL) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_StickEventL");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_StickEventL) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_StickEventL");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_StickEventL, Vector) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_StickEventL::Vector' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OnDetailedKeyEvent
// 0x0003 (0x0003 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent final
{
public:
	EJackKeys                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Released;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent) == 0x000003, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent, Key) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent::Key' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent, Pressed) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent::Pressed' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent, Released) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_OnDetailedKeyEvent::Released' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.WidgetBPActionDelegate
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate final
{
public:
	class FName                                   EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate, EventTag) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_WidgetBPActionDelegate::EventTag' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_Tick");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_Tick) == 0x000040, "Wrong size on WBP_Menu_WorldMap_000_modern_C_Tick");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_WorldMap_000_modern_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.Open
// 0x0100 (0x0100 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_Open final
{
public:
	ESlateVisibility                              FloorSelectorVisibility;                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSekaitizu_Result;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJackUMGMapResourceType>               K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Button_001_modern_C* K2Node_DynamicCast_AsWBP_Menu_World_Map_Button_001_Modern; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 RequesterID)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Limits_Float_Max_ReturnValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RequestFloorInfo_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0088(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapResourceRequester*           CallFunc_SetRequesterAndUpdateLocationTitle_Requester; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Limits_Float_Min_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x00A4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_TransformToMapView_ReturnValue;           // 0x00B4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     CallFunc_AddUMGMenuWidget_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_WorldMap_Spacer_000_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_Spacer_000; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue4;                // 0x00E8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMapOrigin_ReturnValue;                 // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_Open) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_Open");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_Open) == 0x000100, "Wrong size on WBP_Menu_WorldMap_000_modern_C_Open");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, FloorSelectorVisibility) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::FloorSelectorVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_HasSekaitizu_Result) == 0x000034, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_HasSekaitizu_Result' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_MakeArray_Array) == 0x000040, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_PushMenu_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_PushMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_DynamicCast_AsWBP_Menu_World_Map_Button_001_Modern) == 0x000058, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_DynamicCast_AsWBP_Menu_World_Map_Button_001_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_Limits_Float_Max_ReturnValue) == 0x000080, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_Limits_Float_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_RequestFloorInfo_ReturnValue) == 0x000084, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_RequestFloorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_MakeVector2D_ReturnValue2) == 0x000088, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_SetRequesterAndUpdateLocationTitle_Requester) == 0x000090, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_SetRequesterAndUpdateLocationTitle_Requester' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_X) == 0x000098, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_Y) == 0x00009C, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_Limits_Float_Min_ReturnValue) == 0x0000A0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_Limits_Float_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_MakeVector2D_ReturnValue3) == 0x0000A4, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_X2) == 0x0000AC, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_Y2) == 0x0000B0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_TransformToMapView_ReturnValue) == 0x0000B4, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_TransformToMapView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_X3) == 0x0000BC, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_BreakVector2D_Y3) == 0x0000C0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_AddUMGMenuWidget_ReturnValue) == 0x0000C8, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_AddUMGMenuWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_DynamicCast_AsWBP_Menu_World_Map_Spacer_000) == 0x0000D8, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_DynamicCast_AsWBP_Menu_World_Map_Spacer_000' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, K2Node_DynamicCast_bSuccess2) == 0x0000E0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_FClamp_ReturnValue2) == 0x0000E4, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_MakeVector2D_ReturnValue4) == 0x0000E8, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_MakeVector2D_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Open, CallFunc_GetMapOrigin_ReturnValue) == 0x0000F0, "Member 'WBP_Menu_WorldMap_000_modern_C_Open::CallFunc_GetMapOrigin_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.Close
// 0x0020 (0x0020 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_Close final
{
public:
	class UJackUMGMainMapOverlayWidgetBase*       CallFunc_SetMapTextWidget_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMainMapOverlayWidgetBase*       CallFunc_GetMapTextWidget_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_Close) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_Close");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_Close) == 0x000020, "Wrong size on WBP_Menu_WorldMap_000_modern_C_Close");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Close, CallFunc_SetMapTextWidget_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_Close::CallFunc_SetMapTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Close, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_Close::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Close, CallFunc_GetMapTextWidget_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_Close::CallFunc_GetMapTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Close, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_Close::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdateFloorSpinnerStatus
// 0x0024 (0x0024 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus final
{
public:
	bool                                          CallFunc_IsChangingFloorEnabled_bEnabled;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFloorLevelCount_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExistsFloor_OutFloorKeyIndex;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExistsFloor_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExistsFloor_OutFloorKeyIndex2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExistsFloor_ReturnValue2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus) == 0x000024, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_IsChangingFloorEnabled_bEnabled) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_IsChangingFloorEnabled_bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_GetFloorLevelCount_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_GetFloorLevelCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_Add_IntInt_ReturnValue2) == 0x00000C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_ExistsFloor_OutFloorKeyIndex) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_ExistsFloor_OutFloorKeyIndex' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_ExistsFloor_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_ExistsFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_ExistsFloor_OutFloorKeyIndex2) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_ExistsFloor_OutFloorKeyIndex2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus, CallFunc_ExistsFloor_ReturnValue2) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorSpinnerStatus::CallFunc_ExistsFloor_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OpenBoukenGuide
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide final
{
public:
	bool                                          CallFunc_GetBoukenGuideVisible_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide) == 0x000001, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide, CallFunc_GetBoukenGuideVisible_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenBoukenGuide::CallFunc_GetBoukenGuideVisible_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetMapBasePaper
// 0x0002 (0x0002 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper final
{
public:
	EJackMapFieldType                             CallFunc_GetCurrentMapFieldType_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper) == 0x000002, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper, CallFunc_GetCurrentMapFieldType_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper::CallFunc_GetCurrentMapFieldType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapBasePaper::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetLocationName
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetLocationName final
{
public:
	class FString                                 LocationName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetLocationName) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetLocationName");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetLocationName) == 0x000028, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetLocationName");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetLocationName, LocationName) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetLocationName::LocationName' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetLocationName, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_SetLocationName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OnKeyChangeFloor
// 0x0080 (0x0080 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor final
{
public:
	EJackKeys                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextFloorLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PCMarkerColor;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EJackUMGMapResourceType>               K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsChangingFloorEnabled_bEnabled;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 RequesterID)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSoundSet*                       CallFunc_GetSoundSet_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RequestFloorInfo_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGMapResourceRequester*           CallFunc_SetRequesterAndUpdateLocationTitle_Requester; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ExistsFloor_OutFloorKeyIndex;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExistsFloor_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFloorLevelCount_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor) == 0x000080, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, Key) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::Key' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, NextFloorLevel) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::NextFloorLevel' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, PCMarkerColor) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::PCMarkerColor' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_IsChangingFloorEnabled_bEnabled) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_IsChangingFloorEnabled_bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_TestsWorldMapState_ReturnValue) == 0x000048, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_GetUMGManager_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_GetSoundSet_ReturnValue) == 0x000058, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_GetSoundSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_RequestFloorInfo_ReturnValue) == 0x000060, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_RequestFloorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_SetRequesterAndUpdateLocationTitle_Requester) == 0x000068, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_SetRequesterAndUpdateLocationTitle_Requester' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_ExistsFloor_OutFloorKeyIndex) == 0x000070, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_ExistsFloor_OutFloorKeyIndex' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_ExistsFloor_ReturnValue) == 0x000074, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_ExistsFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_GetFloorLevelCount_ReturnValue) == 0x000078, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_GetFloorLevelCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeFloor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.ProcButtonHold
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_ProcButtonHold final
{
public:
	EJackKeys                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Press;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Release;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackKeys                                     TargetButton;                                      // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnOff;                                             // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_ProcButtonHold");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold) == 0x000018, "Wrong size on WBP_Menu_WorldMap_000_modern_C_ProcButtonHold");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Key) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Key' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Press) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Press' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Release) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Release' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, TargetButton) == 0x000003, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::TargetButton' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, OnOff) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::OnOff' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Temp_bool_Variable) == 0x000005, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Temp_float_Variable) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, Temp_float_Variable2) == 0x00000C, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, K2Node_Select_Default) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_ProcButtonHold, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_ProcButtonHold::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.CalcMapUVWH
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH final
{
public:
	struct FLinearColor                           MapUVWH;                                           // 0x0000(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TexCoord;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNowLoading_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetZoomCenterWorldPosition_ReturnValue;   // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue; // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH) == 0x000040, "Wrong size on WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, MapUVWH) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::MapUVWH' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, TexCoord) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::TexCoord' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, CallFunc_IsNowLoading_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::CallFunc_IsNowLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, CallFunc_TestsWorldMapState_ReturnValue) == 0x000022, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, CallFunc_GetZoomCenterWorldPosition_ReturnValue) == 0x000024, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::CallFunc_GetZoomCenterWorldPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH, CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_CalcMapUVWH::CallFunc_CalcMapTextureCoordCenteringOnWorldPosition_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OnKeyChangeZoom
// 0x0038 (0x0038 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom final
{
public:
	bool                                          bWithButtonAnimation;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackHUD*                               CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSoundSet*                       CallFunc_GetSoundSet_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMainMapOverlayWidgetBase*       CallFunc_GetMapTextWidget_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue2;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom) == 0x000038, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, bWithButtonAnimation) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::bWithButtonAnimation' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_GetUMGManager_ReturnValue2) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_GetSoundSet_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_GetSoundSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_GetMapTextWidget_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_GetMapTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_TestsWorldMapState_ReturnValue) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom, CallFunc_TestsWorldMapState_ReturnValue2) == 0x000031, "Member 'WBP_Menu_WorldMap_000_modern_C_OnKeyChangeZoom::CallFunc_TestsWorldMapState_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdateZoomScrollMarker
// 0x0004 (0x0004 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker final
{
public:
	bool                                          CallFunc_IsScrollableToRight_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsScrollableToLeft_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsScrollableToUp_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsScrollableToDown_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker) == 0x000004, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker, CallFunc_IsScrollableToRight_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker::CallFunc_IsScrollableToRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker, CallFunc_IsScrollableToLeft_ReturnValue) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker::CallFunc_IsScrollableToLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker, CallFunc_IsScrollableToUp_ReturnValue) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker::CallFunc_IsScrollableToUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker, CallFunc_IsScrollableToDown_ReturnValue) == 0x000003, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateZoomScrollMarker::CallFunc_IsScrollableToDown_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetScrollMarkerVisibility
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility final
{
public:
	class UUserWidget*                            Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bScrollable;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility) == 0x000010, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility, Marker) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility::Marker' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility, bScrollable) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility::bScrollable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_Menu_WorldMap_000_modern_C_SetScrollMarkerVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.Update
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_Update final
{
public:
	float                                         DeltaTime_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Limits_Float_Max_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CalcMapUVWH_MapUVWH;                      // 0x004C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGMainMapOverlayWidgetBase*       CallFunc_GetMapTextWidget_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Limits_Float_Max_ReturnValue2;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x007C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayNowLoading_ReturnValue;      // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoukenGuideVisible_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_TransformToMapView_ReturnValue;           // 0x0094(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x00B4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_Update) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_Update");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_Update) == 0x0000C0, "Wrong size on WBP_Menu_WorldMap_000_modern_C_Update");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, DeltaTime_0) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::DeltaTime_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Limits_Float_Max_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Limits_Float_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_X) == 0x000044, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_CalcMapUVWH_MapUVWH) == 0x00004C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_CalcMapUVWH_MapUVWH' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_GetMapTextWidget_ReturnValue) == 0x000060, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_GetMapTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Limits_Float_Max_ReturnValue2) == 0x00006C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Limits_Float_Max_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_TestsWorldMapState_ReturnValue) == 0x000070, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_MakeVector2D_ReturnValue2) == 0x00007C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_X2) == 0x000084, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_Y2) == 0x000088, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00008D, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x00008E, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_ShouldDisplayNowLoading_ReturnValue) == 0x00008F, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_ShouldDisplayNowLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_GetBoukenGuideVisible_ReturnValue) == 0x000090, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_GetBoukenGuideVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000091, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x000092, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_TransformToMapView_ReturnValue) == 0x000094, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_TransformToMapView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_X3) == 0x00009C, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BreakVector2D_Y3) == 0x0000A0, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_Not_PreBool_ReturnValue2) == 0x0000A4, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_FClamp_ReturnValue) == 0x0000A8, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_BooleanAND_ReturnValue2) == 0x0000AC, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_FClamp_ReturnValue2) == 0x0000B0, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_Update, CallFunc_MakeVector2D_ReturnValue3) == 0x0000B4, "Member 'WBP_Menu_WorldMap_000_modern_C_Update::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.BindStick
// 0x0038 (0x0038 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_BindStick final
{
public:
	bool                                          bLeftStick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRightStick;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector2D& InVector2D)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector2D& InVector2D)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class AJackHUD*                               CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_BindStick) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_BindStick");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_BindStick) == 0x000038, "Wrong size on WBP_Menu_WorldMap_000_modern_C_BindStick");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, bLeftStick) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::bLeftStick' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, bRightStick) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::bRightStick' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, CallFunc_GetUMGManager_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindStick, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_BindStick::CallFunc_GetHUD_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UnbindStick
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UnbindStick final
{
public:
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackHUD*                               CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UnbindStick) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UnbindStick");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UnbindStick) == 0x000010, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UnbindStick");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UnbindStick, CallFunc_GetUMGManager_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UnbindStick::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UnbindStick, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_UnbindStick::CallFunc_GetHUD_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OpenLocalMapMenu
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu final
{
public:
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackHUD*                               CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSekaitizu_Result;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bOpen)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_List_000_modern_C*   K2Node_DynamicCast_AsWBP_Menu_World_Map_List_000_Modern; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu) == 0x000040, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, CallFunc_GetUMGManager_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, CallFunc_HasSekaitizu_Result) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::CallFunc_HasSekaitizu_Result' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, CallFunc_PushMenu_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::CallFunc_PushMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, K2Node_DynamicCast_AsWBP_Menu_World_Map_List_000_Modern) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::K2Node_DynamicCast_AsWBP_Menu_World_Map_List_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu, CallFunc_TestsWorldMapState_ReturnValue) == 0x000039, "Member 'WBP_Menu_WorldMap_000_modern_C_OpenLocalMapMenu::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdateMapSymbolTypesToDisplay
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay final
{
public:
	EJackWorldMapState                            State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EJackMapSymbol>                        SymbolTypes;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<EJackMapSymbol>                        CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay) == 0x000028, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay, State) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay::State' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay, SymbolTypes) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay::SymbolTypes' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay, CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateMapSymbolTypesToDisplay::CallFunc_GetMapSymbolTypeListForMapMode_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdatePointer
// 0x0098 (0x0098 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdatePointer final
{
public:
	TArray<int32>                                 NewTargets;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_GetEmptyPointer_PointerWBP;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item2;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item3;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapSymbolInfoBase*              CallFunc_FindMapSymbolInfo_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWorldPosition_ReturnValue;             // 0x005C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_GetTargettingPointer_PointerWBP;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetPointerTargetList_ReturnValue;         // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector2D                              CallFunc_TransformToWorldMapViewPosition_ReturnValue; // 0x0090(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdatePointer");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer) == 0x000098, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdatePointer");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, NewTargets) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::NewTargets' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Array_Index_Variable2) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Loop_Counter_Variable2) == 0x00002C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Add_IntInt_ReturnValue2) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Array_Index_Variable3) == 0x000034, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, Temp_int_Loop_Counter_Variable3) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Add_IntInt_ReturnValue3) == 0x00003C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_GetEmptyPointer_PointerWBP) == 0x000040, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_GetEmptyPointer_PointerWBP' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Get_Item2) == 0x000048, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Get_Item3) == 0x00004C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_FindMapSymbolInfo_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_FindMapSymbolInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000058, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000059, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_GetWorldPosition_ReturnValue) == 0x00005C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_GetWorldPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_GetTargettingPointer_PointerWBP) == 0x000068, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_GetTargettingPointer_PointerWBP' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Length_ReturnValue2) == 0x000070, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Length_ReturnValue3) == 0x000074, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Less_IntInt_ReturnValue2) == 0x000078, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Less_IntInt_ReturnValue3) == 0x000079, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_GetPointerTargetList_ReturnValue) == 0x000080, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_GetPointerTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePointer, CallFunc_TransformToWorldMapViewPosition_ReturnValue) == 0x000090, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePointer::CallFunc_TransformToWorldMapViewPosition_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OnEmptyPointerTargets
// 0x0020 (0x0020 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets) == 0x000020, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_OnEmptyPointerTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.GetEmptyPointer
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer final
{
public:
	class UWBP_Menu_WorldMap_Cursor_000_C*        PointerWBP;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_bEmpty;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer) == 0x000028, "Wrong size on WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, PointerWBP) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::PointerWBP' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer, CallFunc_IsEmpty_bEmpty) == 0x000021, "Member 'WBP_Menu_WorldMap_000_modern_C_GetEmptyPointer::CallFunc_IsEmpty_bEmpty' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.GetTargettingPointer
// 0x0030 (0x0030 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer final
{
public:
	int32                                         UniqueNo;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_WorldMap_Cursor_000_C*        PointerWBP;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Cursor_000_C*        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer) == 0x000030, "Wrong size on WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, UniqueNo) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::UniqueNo' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, PointerWBP) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::PointerWBP' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'WBP_Menu_WorldMap_000_modern_C_GetTargettingPointer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.DisplayFloorMap
// 0x0070 (0x0070 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap final
{
public:
	class UJackUMGMapFloorInfo*                   FloorInfo;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable2;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable3;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetLinkedFloorMapVolumeIDList_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetMapSymbolVisible_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNowLoading_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select2_Default;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select3_Default;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap) == 0x000070, "Wrong size on WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, FloorInfo) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::FloorInfo' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Texture) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Texture' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_object_Variable) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_bool_Variable) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_object_Variable2) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_bool_Variable2) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_object_Variable3) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_TestsWorldMapState_ReturnValue) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_GetLinkedFloorMapVolumeIDList_ReturnValue) == 0x000040, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_GetLinkedFloorMapVolumeIDList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_GetMapSymbolVisible_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_GetMapSymbolVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_IsNowLoading_ReturnValue) == 0x000051, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_IsNowLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, Temp_bool_Variable3) == 0x000052, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_Array_Contains_ReturnValue) == 0x000053, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, K2Node_Select_Default) == 0x000058, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, K2Node_Select2_Default) == 0x000060, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap, K2Node_Select3_Default) == 0x000068, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayFloorMap::K2Node_Select3_Default' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.CloseRequest
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_CloseRequest final
{
public:
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_CloseRequest) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_CloseRequest");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_CloseRequest) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_CloseRequest");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CloseRequest, CallFunc_GetUMGManager_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_CloseRequest::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.OnOpenRuraMenu
// 0x0002 (0x0002 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu) == 0x000002, "Wrong size on WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu, bOpen) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu::bOpen' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_OnOpenRuraMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.CreateMID
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_CreateMID final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_CreateMID) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_CreateMID");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_CreateMID) == 0x000010, "Wrong size on WBP_Menu_WorldMap_000_modern_C_CreateMID");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CreateMID, ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_CreateMID::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CreateMID, CallFunc_GetJackGameMode_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_CreateMID::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.RequestToDisplayMap
// 0x0038 (0x0038 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap final
{
public:
	class FName                                   MapVolumeID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EJackUMGMapResourceType>               K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void(int32 RequesterID)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RequestFloorInfoForVolumeID_ReturnValue;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGMapResourceRequester*           CallFunc_SetRequesterAndUpdateLocationTitle_Requester; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap) == 0x000038, "Wrong size on WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap, MapVolumeID) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap::MapVolumeID' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap, CallFunc_RequestFloorInfoForVolumeID_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap::CallFunc_RequestFloorInfoForVolumeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap, CallFunc_SetRequesterAndUpdateLocationTitle_Requester) == 0x000030, "Member 'WBP_Menu_WorldMap_000_modern_C_RequestToDisplayMap::CallFunc_SetRequesterAndUpdateLocationTitle_Requester' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.GetMapTextDrawCanvas
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas final
{
public:
	class UCanvasPanel*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas, ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_GetMapTextDrawCanvas::ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.CreateMapSymbolMID
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID) == 0x000010, "Wrong size on WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID, ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID, CallFunc_GetJackGameMode_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_CreateMapSymbolMID::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.MapSymbolVisibleChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged final
{
public:
	class UObject*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Payload;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMainMapOverlayWidgetBase*       CallFunc_GetMapTextWidget_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged) == 0x000028, "Wrong size on WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged, Sender) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged::Sender' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged, bVisible) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged, Payload) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged::Payload' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged, CallFunc_GetMapTextWidget_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged::CallFunc_GetMapTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_MapSymbolVisibleChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.BindHandler
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_000_modern_C_BindHandler final
{
public:
	bool                                          bUnbind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Sender, bool bValue, class UObject* Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_BindHandler) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_BindHandler");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_BindHandler) == 0x000018, "Wrong size on WBP_Menu_WorldMap_000_modern_C_BindHandler");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindHandler, bUnbind) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_BindHandler::bUnbind' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_BindHandler, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_BindHandler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.GetRenderTargetName
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName, ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_GetRenderTargetName::ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdateFloorChangeCaptionVisible
// 0x000C (0x000C - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChangingFloorEnabled_bEnabled;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFloorLevelCount_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible) == 0x00000C, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, bVisible) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, CallFunc_IsChangingFloorEnabled_bEnabled) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::CallFunc_IsChangingFloorEnabled_bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, CallFunc_GetFloorLevelCount_ReturnValue) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::CallFunc_GetFloorLevelCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible, CallFunc_BooleanAND_ReturnValue2) == 0x000009, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdateFloorChangeCaptionVisible::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.AsyncLoadFinished
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished final
{
public:
	int32                                         RequesterID_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGMapResourceRequester*           CallFunc_FindResourceRequester_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished) == 0x000018, "Wrong size on WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished, RequesterID_0) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished::RequesterID_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished, CallFunc_FindResourceRequester_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished::CallFunc_FindResourceRequester_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_AsyncLoadFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetRequesterAndUpdateLocationTitle
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle final
{
public:
	int32                                         RequesterID_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGMapResourceRequester*           Requester;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapResourceRequester*           CallFunc_FindResourceRequester_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle) == 0x000018, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle, RequesterID_0) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle::RequesterID_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle, Requester) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle::Requester' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle, CallFunc_FindResourceRequester_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_SetRequesterAndUpdateLocationTitle::CallFunc_FindResourceRequester_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetMapMaterialTexture
// 0x0020 (0x0020 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture final
{
public:
	class UTexture2D*                             MapOpenTexture;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             MapMaskTexture;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             JourneyTexture;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture) == 0x000020, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture, MapOpenTexture) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture::MapOpenTexture' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture, MapMaskTexture) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture::MapMaskTexture' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture, JourneyTexture) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture::JourneyTexture' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_SetMapMaterialTexture::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.KeyEventHandler
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_KeyEventHandler final
{
public:
	EJackKeys                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMapOrigin_ReturnValue;                 // 0x0004(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue2;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue3;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_KeyEventHandler");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler) == 0x000040, "Wrong size on WBP_Menu_WorldMap_000_modern_C_KeyEventHandler");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, Key) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::Key' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, Condition) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::Condition' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, Temp_bool_Variable) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_GetMapOrigin_ReturnValue) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_GetMapOrigin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_TestsWorldMapState_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_TestsWorldMapState_ReturnValue2) == 0x000011, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_TestsWorldMapState_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, K2Node_Select_Default) == 0x00002C, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_TestsWorldMapState_ReturnValue3) == 0x000038, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_TestsWorldMapState_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_KeyEventHandler, CallFunc_BooleanAND_ReturnValue2) == 0x000039, "Member 'WBP_Menu_WorldMap_000_modern_C_KeyEventHandler::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.DisplayCurrentMap
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap final
{
public:
	class FName                                   CallFunc_GetMapVolumeID_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap, CallFunc_GetMapVolumeID_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_DisplayCurrentMap::CallFunc_GetMapVolumeID_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.UpdatePCMarkerColor
// 0x0014 (0x0014 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor final
{
public:
	struct FLinearColor                           PCMarkerColor;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor) == 0x000014, "Wrong size on WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor, PCMarkerColor) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor::PCMarkerColor' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_UpdatePCMarkerColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.IsChangingFloorEnabled
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue2;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue3;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMapID_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled) == 0x000018, "Wrong size on WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, bEnabled) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_GetGameFlagBool_ReturnValue) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_GetGameFlagBool_ReturnValue2) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_GetGameFlagBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_GetGameFlagBool_ReturnValue3) == 0x000003, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_GetGameFlagBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_GetMapID_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000011, "Member 'WBP_Menu_WorldMap_000_modern_C_IsChangingFloorEnabled::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.SetupBoukenGuide
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide final
{
public:
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide) == 0x000008, "Wrong size on WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide, CallFunc_PushMenu_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_SetupBoukenGuide::CallFunc_PushMenu_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_000_modern.WBP_Menu_WorldMap_000_modern_C.IsPCMarkerVisible
// 0x0003 (0x0003 - 0x0000)
struct WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible");
static_assert(sizeof(WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible) == 0x000003, "Wrong size on WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible, ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'WBP_Menu_WorldMap_000_modern_C_IsPCMarkerVisible::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}


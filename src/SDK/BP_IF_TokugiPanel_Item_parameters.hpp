#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IF_TokugiPanel_Item

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetDrawPos
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetDrawPos final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetDrawPos) == 0x000004, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetDrawPos");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetDrawPos) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_SetDrawPos");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetDrawPos, Position) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetDrawPos::Position' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetDisplayData
// 0x0014 (0x0014 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetDisplayData final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BgScroll;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetDisplayData) == 0x000004, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetDisplayData");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetDisplayData) == 0x000014, "Wrong size on BP_IF_TokugiPanel_Item_C_SetDisplayData");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetDisplayData, Position) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetDisplayData::Position' has a wrong offset!");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetDisplayData, Scale) == 0x000008, "Member 'BP_IF_TokugiPanel_Item_C_SetDisplayData::Scale' has a wrong offset!");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetDisplayData, BgScroll) == 0x00000C, "Member 'BP_IF_TokugiPanel_Item_C_SetDisplayData::BgScroll' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetDisplayScale
// 0x0004 (0x0004 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetDisplayScale final
{
public:
	float                                         DisplayScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetDisplayScale) == 0x000004, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetDisplayScale");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetDisplayScale) == 0x000004, "Wrong size on BP_IF_TokugiPanel_Item_C_SetDisplayScale");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetDisplayScale, DisplayScale) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetDisplayScale::DisplayScale' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetBackGroundScroll
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetBackGroundScroll final
{
public:
	struct FVector2D                              BgScroll;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetBackGroundScroll) == 0x000004, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetBackGroundScroll");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetBackGroundScroll) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_SetBackGroundScroll");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetBackGroundScroll, BgScroll) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetBackGroundScroll::BgScroll' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetCancelEventListener
// 0x0010 (0x0010 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetCancelEventListener final
{
public:
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> CancelEventListener;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetCancelEventListener) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetCancelEventListener");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetCancelEventListener) == 0x000010, "Wrong size on BP_IF_TokugiPanel_Item_C_SetCancelEventListener");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetCancelEventListener, CancelEventListener) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetCancelEventListener::CancelEventListener' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetBattleResultMode
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetBattleResultMode final
{
public:
	EJackCharacter                                CharacterType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetBattleResultMode) == 0x000001, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetBattleResultMode");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetBattleResultMode) == 0x000001, "Wrong size on BP_IF_TokugiPanel_Item_C_SetBattleResultMode");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetBattleResultMode, CharacterType) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetBattleResultMode::CharacterType' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetEndAnimEventListener
// 0x0010 (0x0010 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener final
{
public:
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> Listener;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener) == 0x000010, "Wrong size on BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener, Listener) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetEndAnimEventListener::Listener' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.OnEndAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_OnEndAnim final
{
public:
	class UUserWidget*                            Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_OnEndAnim) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_OnEndAnim");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_OnEndAnim) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_OnEndAnim");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_OnEndAnim, Sender) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_OnEndAnim::Sender' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.PlayAnimationIntArg
// 0x0004 (0x0004 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg final
{
public:
	int32                                         Arg;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg) == 0x000004, "Wrong alignment on BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg) == 0x000004, "Wrong size on BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg, Arg) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_PlayAnimationIntArg::Arg' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.PlayAnimationNameArg
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg final
{
public:
	class FName                                   Arg;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg, Arg) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_PlayAnimationNameArg::Arg' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetPanelData
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetPanelData final
{
public:
	class UJackUMGTokugiPanelData*                PanelData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetPanelData) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetPanelData");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetPanelData) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_SetPanelData");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetPanelData, PanelData) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetPanelData::PanelData' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SetCharacterItemData
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_SetCharacterItemData final
{
public:
	class UJackUMGItemData*                       ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SetCharacterItemData) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SetCharacterItemData");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SetCharacterItemData) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_SetCharacterItemData");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SetCharacterItemData, ItemData) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SetCharacterItemData::ItemData' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.PlayAnimData
// 0x0040 (0x0040 - 0x0000)
struct BP_IF_TokugiPanel_Item_C_PlayAnimData final
{
public:
	struct FJackUMGTokugiPanelAnimData            AnimData;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_PlayAnimData) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_PlayAnimData");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_PlayAnimData) == 0x000040, "Wrong size on BP_IF_TokugiPanel_Item_C_PlayAnimData");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_PlayAnimData, AnimData) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_PlayAnimData::AnimData' has a wrong offset!");

// Function BP_IF_TokugiPanel_Item.BP_IF_TokugiPanel_Item_C.SendTokugiPanelMessage
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage final
{
public:
	class FName                                   Message;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage) == 0x000008, "Wrong alignment on BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage");
static_assert(sizeof(BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage) == 0x000008, "Wrong size on BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage");
static_assert(offsetof(BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage, Message) == 0x000000, "Member 'BP_IF_TokugiPanel_Item_C_SendTokugiPanelMessage::Message' has a wrong offset!");

}


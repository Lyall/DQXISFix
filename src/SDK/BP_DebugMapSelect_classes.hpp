#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugMapSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "STRUCT_DebugMapStart_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DebugMapSelect.BP_DebugMapSelect_C
// 0x0130 (0x04C8 - 0x0398)
class ABP_DebugMapSelect_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         F;                                                 // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         C;                                                 // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         M;                                                 // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         D;                                                 // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         S;                                                 // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FString                                 SplitCharacter;                                    // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 OpenString;                                        // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         Ido;                                               // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         Other;                                             // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Initialized;                                       // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_DebugMapStart> MapStartName;                                      // 0x0440(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          UpdateMapStartMap;                                 // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key2;                                              // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   Key1;                                              // 0x04B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DebugMapSelect(int32 EntryPoint);
	void EventRiremito();
	void EventRura();
	void EventClearPreload();
	void EventMapJump();
	void EventOpenLevel();
	void EventPreload();
	void EventSetRestartPoint();
	void MakeMenuFromDebugMenu();
	void DebugMapSelectInitialize();
	void ExecCommand(const TArray<class UJackDebugMenuVariableCommand*>& MapJump, const TArray<class UJackDebugMenuVariableCommand*>& OpenLevel, const TArray<class UJackDebugMenuVariableCommand*>& PreLoad, const TArray<class UJackDebugMenuVariableCommand*>& ClearPreload, const TArray<class UJackDebugMenuVariableCommand*>& SetRestartPoint, const TArray<class UJackDebugMenuVariableCommand*>& Rura, const TArray<class UJackDebugMenuVariableCommand*>& Riremito);
	void MakeMenu();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeMenu();
	void AddArrayMapName(TArray<class FString>& InArray, TArray<class FString>* OutArray);
	void AddDebugMenuMapStart(TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu, TArray<class UJackDebugMenuVariableCommand*>* MapJump, TArray<class UJackDebugMenuVariableCommand*>* OpenLevel, TArray<class UJackDebugMenuVariableCommand*>* PreLoad, TArray<class UJackDebugMenuVariableCommand*>* ClearPreload, TArray<class UJackDebugMenuVariableCommand*>* SetRestartPoint, TArray<class UJackDebugMenuVariableCommand*>* Rura, TArray<class UJackDebugMenuVariableCommand*>* Riremito);
	void AddDebugMenuOnlyOpenLevel(TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu, TArray<class UJackDebugMenuVariableCommand*>* OpenLevel);
	void GetSelectedMapStartTag(class FName* MapStartTag);
	void MakeMapJumpMenu(const class FString& MenuName, TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu);
	void MakeMapStartMap();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DebugMapSelect_C">();
	}
	static class ABP_DebugMapSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DebugMapSelect_C>();
	}
};
static_assert(alignof(ABP_DebugMapSelect_C) == 0x000008, "Wrong alignment on ABP_DebugMapSelect_C");
static_assert(sizeof(ABP_DebugMapSelect_C) == 0x0004C8, "Wrong size on ABP_DebugMapSelect_C");
static_assert(offsetof(ABP_DebugMapSelect_C, UberGraphFrame) == 0x000398, "Member 'ABP_DebugMapSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, DefaultSceneRoot) == 0x0003A0, "Member 'ABP_DebugMapSelect_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, F) == 0x0003A8, "Member 'ABP_DebugMapSelect_C::F' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, C) == 0x0003B8, "Member 'ABP_DebugMapSelect_C::C' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, M) == 0x0003C8, "Member 'ABP_DebugMapSelect_C::M' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, D) == 0x0003D8, "Member 'ABP_DebugMapSelect_C::D' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, S) == 0x0003E8, "Member 'ABP_DebugMapSelect_C::S' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, SplitCharacter) == 0x0003F8, "Member 'ABP_DebugMapSelect_C::SplitCharacter' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, OpenString) == 0x000408, "Member 'ABP_DebugMapSelect_C::OpenString' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, Ido) == 0x000418, "Member 'ABP_DebugMapSelect_C::Ido' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, Other) == 0x000428, "Member 'ABP_DebugMapSelect_C::Other' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, Initialized) == 0x000438, "Member 'ABP_DebugMapSelect_C::Initialized' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, MapStartName) == 0x000440, "Member 'ABP_DebugMapSelect_C::MapStartName' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, UpdateMapStartMap) == 0x000490, "Member 'ABP_DebugMapSelect_C::UpdateMapStartMap' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, Key2) == 0x000498, "Member 'ABP_DebugMapSelect_C::Key2' has a wrong offset!");
static_assert(offsetof(ABP_DebugMapSelect_C, Key1) == 0x0004B0, "Member 'ABP_DebugMapSelect_C::Key1' has a wrong offset!");

}


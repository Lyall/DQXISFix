#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Keyconfig_Settei_003_Steam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventTag)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bVisible;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_SlideTargetOrigin;                    // 0x0024(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_MaxSlideTargetSize;                   // 0x002C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_MinSlideTargetSize;                   // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       K2Node_CustomEvent_InItemBase;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventTag;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue2;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetPressedKeyInItemList_ReturnValue;      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, class UJackUMGItemBase* InItemBase)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_SetPressedKeyInItemList_ReturnValue2;     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam) == 0x000008, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam) == 0x0000D8, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, EntryPoint) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_bVisible) == 0x000020, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_SlideTargetOrigin) == 0x000024, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_SlideTargetOrigin' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_MaxSlideTargetSize) == 0x00002C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_MaxSlideTargetSize' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_MinSlideTargetSize) == 0x000034, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_MinSlideTargetSize' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_CustomEvent_EventName) == 0x000040, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_CustomEvent_InItemBase) == 0x000048, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_CustomEvent_InItemBase' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_CustomEvent_EventTag) == 0x000050, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_SwitchName_CmpSuccess) == 0x000058, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_SwitchName2_CmpSuccess) == 0x000059, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_MyGeometry) == 0x00005C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_Event_InDeltaTime) == 0x000098, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_TextIsEmpty_ReturnValue) == 0x00009C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_GetAccessorSaveData_ReturnValue) == 0x0000A0, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_GetAccessorSaveData_ReturnValue2) == 0x0000A8, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_GetAccessorSaveData_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_SetPressedKeyInItemList_ReturnValue) == 0x0000B0, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_SetPressedKeyInItemList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_Clamp_ReturnValue) == 0x0000B8, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, K2Node_CreateDelegate_OutputDelegate2) == 0x0000C0, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam, CallFunc_SetPressedKeyInItemList_ReturnValue2) == 0x0000D0, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_ExecuteUbergraph_WBP_Menu_Keyconfig_Settei_003_Steam::CallFunc_SetPressedKeyInItemList_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick) == 0x000040, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.WidgetBPActionDelegate
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate final
{
public:
	class FName                                   EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate) == 0x000008, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate) == 0x000008, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate, EventTag) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_WidgetBPActionDelegate::EventTag' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.OnItemListControl
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       InItemBase;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl) == 0x000008, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl) == 0x000010, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl, EventName) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl::EventName' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl, InItemBase) == 0x000008, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_OnItemListControl::InItemBase' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetDebugTargetSize
// 0x001C (0x001C - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SlideTargetOrigin;                                 // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MaxSlideTargetSize;                                // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MinSlideTargetSize;                                // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize) == 0x000004, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize) == 0x00001C, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize, bVisible) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize, SlideTargetOrigin) == 0x000004, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize::SlideTargetOrigin' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize, MaxSlideTargetSize) == 0x00000C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize::MaxSlideTargetSize' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize, MinSlideTargetSize) == 0x000014, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetDebugTargetSize::MinSlideTargetSize' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetWidgetKeyConfigSettei000
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000 final
{
public:
	class UWBP_Menu_Keyconfig_Settei_000_Steam_C* InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000) == 0x000008, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000) == 0x000008, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000, InWidget) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetWidgetKeyConfigSettei000::InWidget' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetKeyAssignPanelPosition
// 0x0020 (0x0020 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition final
{
public:
	struct FVector2D                              Position_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition) == 0x000004, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition) == 0x000020, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, Position_0) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::Position_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, Visible) == 0x000008, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::Visible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetKeyAssignPanelPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetCursorOffset
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Position_0;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetX;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset) == 0x000004, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset) == 0x000028, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, IsActive) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::IsActive' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, Position_0) == 0x000004, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::Position_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, OffsetX) == 0x00000C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::OffsetX' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x00001C, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetCursorOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetTextureAndCaption
// 0x0020 (0x0020 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption final
{
public:
	class UTexture2D*                             InTexture;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InText;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption) == 0x000008, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption) == 0x000020, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption, InTexture) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption::InTexture' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption, InText) == 0x000008, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetTextureAndCaption::InText' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.SetNativeTickEnable
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable) == 0x000001, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable) == 0x000001, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable, Enable) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_SetNativeTickEnable::Enable' has a wrong offset!");

// Function WBP_Menu_Keyconfig_Settei_003_Steam.WBP_Menu_Keyconfig_Settei_003_Steam_C.CancelReturn
// 0x000C (0x000C - 0x0000)
struct WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn final
{
public:
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0000(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn) == 0x000004, "Wrong alignment on WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn");
static_assert(sizeof(WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn) == 0x00000C, "Wrong size on WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn, CallFunc_MakeVector2D_ReturnValue) == 0x000000, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WBP_Menu_Keyconfig_Settei_003_Steam_C_CancelReturn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}


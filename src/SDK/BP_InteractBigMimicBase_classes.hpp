#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractBigMimicBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "BP_InteractiveBase_classes.hpp"


namespace SDK
{

// DynamicClass BP_InteractBigMimicBase.BP_InteractBigMimicBase_C
// 0x0180 (0x0680 - 0x0500)
class ABP_InteractBigMimicBase_C final : public ABP_InteractiveBase_C
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackLDT_EventBattle                   CurrentEventBattleID;                              // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class AJackLocator*                           CurrentBattleLocation;                             // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AJackLocator*>                   CurrentEnemyPopPoints;                             // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0530(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0534(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0538(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x053C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0540(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackBattleResult                             Temp_byte_Variable;                                // 0x0544(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackFadeColor                                Temp_byte_Variable2;                               // 0x0545(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_546[0x2];                                      // 0x0546(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableBGM                      CallFunc_GetDataTableBGM_Out;                      // 0x0548(0x0080)(Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          CallFunc_GetDataTableBGM_Success;                  // 0x05C8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_Snd_Control_C>  K2Node_DynamicCast_AsBP_IF_Snd_Control;            // 0x05D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05E0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_Snd_Control_C>  K2Node_DynamicCast_AsBP_IF_Snd_Control2;           // 0x05E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x05F8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable;                              // 0x05F9(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	EJackFadeColor                                Temp_byte_Variable3;                               // 0x05FE(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FF[0x1];                                      // 0x05FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0600(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_DestroyCheck_Destroy;                     // 0x0604(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_BP_InteractBigMimicBase_C; // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackMessageArgumentData               K2Node_MakeStruct_JackMessageArgumentData;         // 0x0610(0x0048)(Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array_BP_InteractBigMimicBase_C;  // 0x0658(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	EJackFadeColor                                K2Node_Select_Default;                             // 0x0668(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_BattleWinSetFlag_Ret;                     // 0x0678(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_SetCurrentParam_Success;                  // 0x0679(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding; // 0x067A(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_67B[0x5];                                      // 0x067B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BattleWinSetFlag(bool* bpp__Ret__pf);
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_107_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void DestroyCheck(bool* bpp__Destroy__pf);
	void ExecuteUbergraph_BP_InteractBigMimicBase_0(int32 bpp__EntryPoint__pf);
	void GetInpasuResultTextId(class FName* bpp__OutTextId__pf);
	void ReceiveBeginPlay();
	void SelfHidden(bool bpp__NewHidden__pf);
	void SetCurrentParam(bool* bpp__Success__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_InteractBigMimicBase_C">();
	}
	static class ABP_InteractBigMimicBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractBigMimicBase_C>();
	}
};
static_assert(alignof(ABP_InteractBigMimicBase_C) == 0x000008, "Wrong alignment on ABP_InteractBigMimicBase_C");
static_assert(sizeof(ABP_InteractBigMimicBase_C) == 0x000680, "Wrong size on ABP_InteractBigMimicBase_C");
static_assert(offsetof(ABP_InteractBigMimicBase_C, SkeletalMesh) == 0x000500, "Member 'ABP_InteractBigMimicBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CurrentEventBattleID) == 0x000508, "Member 'ABP_InteractBigMimicBase_C::CurrentEventBattleID' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CurrentBattleLocation) == 0x000518, "Member 'ABP_InteractBigMimicBase_C::CurrentBattleLocation' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CurrentEnemyPopPoints) == 0x000520, "Member 'ABP_InteractBigMimicBase_C::CurrentEnemyPopPoints' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_int_Array_Index_Variable) == 0x000530, "Member 'ABP_InteractBigMimicBase_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_SwitchEnum_CmpSuccess) == 0x000534, "Member 'ABP_InteractBigMimicBase_C::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_BreakRotator_Roll) == 0x000538, "Member 'ABP_InteractBigMimicBase_C::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_BreakRotator_Pitch) == 0x00053C, "Member 'ABP_InteractBigMimicBase_C::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_BreakRotator_Yaw) == 0x000540, "Member 'ABP_InteractBigMimicBase_C::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_byte_Variable) == 0x000544, "Member 'ABP_InteractBigMimicBase_C::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_byte_Variable2) == 0x000545, "Member 'ABP_InteractBigMimicBase_C::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_GetDataTableBGM_Out) == 0x000548, "Member 'ABP_InteractBigMimicBase_C::CallFunc_GetDataTableBGM_Out' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_GetDataTableBGM_Success) == 0x0005C8, "Member 'ABP_InteractBigMimicBase_C::CallFunc_GetDataTableBGM_Success' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_DynamicCast_AsBP_IF_Snd_Control) == 0x0005D0, "Member 'ABP_InteractBigMimicBase_C::K2Node_DynamicCast_AsBP_IF_Snd_Control' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_DynamicCast_bSuccess) == 0x0005E0, "Member 'ABP_InteractBigMimicBase_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_DynamicCast_AsBP_IF_Snd_Control2) == 0x0005E8, "Member 'ABP_InteractBigMimicBase_C::K2Node_DynamicCast_AsBP_IF_Snd_Control2' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_DynamicCast_bSuccess2) == 0x0005F8, "Member 'ABP_InteractBigMimicBase_C::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_struct_Variable) == 0x0005F9, "Member 'ABP_InteractBigMimicBase_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_byte_Variable3) == 0x0005FE, "Member 'ABP_InteractBigMimicBase_C::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, Temp_int_Loop_Counter_Variable) == 0x000600, "Member 'ABP_InteractBigMimicBase_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_DestroyCheck_Destroy) == 0x000604, "Member 'ABP_InteractBigMimicBase_C::CallFunc_DestroyCheck_Destroy' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_ComponentBoundEvent_OtherActor_BP_InteractBigMimicBase_C) == 0x000608, "Member 'ABP_InteractBigMimicBase_C::K2Node_ComponentBoundEvent_OtherActor_BP_InteractBigMimicBase_C' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_MakeStruct_JackMessageArgumentData) == 0x000610, "Member 'ABP_InteractBigMimicBase_C::K2Node_MakeStruct_JackMessageArgumentData' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_MakeArray_Array_BP_InteractBigMimicBase_C) == 0x000658, "Member 'ABP_InteractBigMimicBase_C::K2Node_MakeArray_Array_BP_InteractBigMimicBase_C' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, K2Node_Select_Default) == 0x000668, "Member 'ABP_InteractBigMimicBase_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_Array_Get_Item) == 0x000670, "Member 'ABP_InteractBigMimicBase_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_BattleWinSetFlag_Ret) == 0x000678, "Member 'ABP_InteractBigMimicBase_C::CallFunc_BattleWinSetFlag_Ret' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_SetCurrentParam_Success) == 0x000679, "Member 'ABP_InteractBigMimicBase_C::CallFunc_SetCurrentParam_Success' has a wrong offset!");
static_assert(offsetof(ABP_InteractBigMimicBase_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding) == 0x00067A, "Member 'ABP_InteractBigMimicBase_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding' has a wrong offset!");

}


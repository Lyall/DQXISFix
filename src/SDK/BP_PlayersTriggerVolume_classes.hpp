#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayersTriggerVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C
// 0x0020 (0x03F0 - 0x03D0)
class ABP_PlayersTriggerVolume_C final : public AJackTriggerVolume
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(Transient, DuplicateTransient)
	UMulticastDelegateProperty_                   OnPossessPlayerControlAtBeginOverlap;              // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EJackPlayerControlPossessor                   Possessor;                                         // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBattleOnly;                                     // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void OnPossessPlayerControlAtBeginOverlap__DelegateSignature(class AActor* OtherActor, class ABP_PlayersTriggerVolume_C* VolumeActor, EJackPlayerControlPossessor Possessor_0);
	void ExecuteUbergraph_BP_PlayersTriggerVolume(int32 EntryPoint);
	void BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void IsEnable(bool* Enable);
	void SetEnable(bool Enable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayersTriggerVolume_C">();
	}
	static class ABP_PlayersTriggerVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayersTriggerVolume_C>();
	}
};
static_assert(alignof(ABP_PlayersTriggerVolume_C) == 0x000008, "Wrong alignment on ABP_PlayersTriggerVolume_C");
static_assert(sizeof(ABP_PlayersTriggerVolume_C) == 0x0003F0, "Wrong size on ABP_PlayersTriggerVolume_C");
static_assert(offsetof(ABP_PlayersTriggerVolume_C, UberGraphFrame) == 0x0003D0, "Member 'ABP_PlayersTriggerVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayersTriggerVolume_C, OnPossessPlayerControlAtBeginOverlap) == 0x0003D8, "Member 'ABP_PlayersTriggerVolume_C::OnPossessPlayerControlAtBeginOverlap' has a wrong offset!");
static_assert(offsetof(ABP_PlayersTriggerVolume_C, Possessor) == 0x0003E8, "Member 'ABP_PlayersTriggerVolume_C::Possessor' has a wrong offset!");
static_assert(offsetof(ABP_PlayersTriggerVolume_C, UseBattleOnly) == 0x0003E9, "Member 'ABP_PlayersTriggerVolume_C::UseBattleOnly' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GimmickRura

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GimmickRura.BP_GimmickRura_C
// 0x0020 (0x0588 - 0x0568)
class ABP_GimmickRura_C final : public AJackRuraBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0568(0x0008)(Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_MapStart                      MapstartStr;                                       // 0x0578(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BP_GimmickRura(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void OnStartJumpNoAnimMontageStart(EJackRuraFail InType);
	void OnRiremitoJumpNoAnimMontageStart(EJackRuraFail InType);
	void OnDebugCheckOverlapActor(class AActor* InActor);
	void OnDebugCheck(EJackRuraFail InFail);
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_264_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnStartJump(EJackRuraPurpose InPurpose, class FName InJumpTag);
	void UserConstructionScript();
	void ResetPlayerMovementDefault();
	void RuraCheck(class UObject* Object);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GimmickRura_C">();
	}
	static class ABP_GimmickRura_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GimmickRura_C>();
	}
};
static_assert(alignof(ABP_GimmickRura_C) == 0x000008, "Wrong alignment on ABP_GimmickRura_C");
static_assert(sizeof(ABP_GimmickRura_C) == 0x000588, "Wrong size on ABP_GimmickRura_C");
static_assert(offsetof(ABP_GimmickRura_C, UberGraphFrame) == 0x000568, "Member 'ABP_GimmickRura_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GimmickRura_C, Capsule) == 0x000570, "Member 'ABP_GimmickRura_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_GimmickRura_C, MapstartStr) == 0x000578, "Member 'ABP_GimmickRura_C::MapstartStr' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugPlayerCoord

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_DebugPlayerCoord.BP_DebugPlayerCoord_C.ExecuteUbergraph_BP_DebugPlayerCoord
// 0x0048 (0x0048 - 0x0000)
struct BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord) == 0x000008, "Wrong alignment on BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord");
static_assert(sizeof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord) == 0x000048, "Wrong size on BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, EntryPoint) == 0x000000, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, CallFunc_Concat_StrStr_ReturnValue2) == 0x000028, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord, CallFunc_Concat_StrStr_ReturnValue3) == 0x000038, "Member 'BP_DebugPlayerCoord_C_ExecuteUbergraph_BP_DebugPlayerCoord::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");

// Function BP_DebugPlayerCoord.BP_DebugPlayerCoord_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_DebugPlayerCoord_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DebugPlayerCoord_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_DebugPlayerCoord_C_ReceiveTick");
static_assert(sizeof(BP_DebugPlayerCoord_C_ReceiveTick) == 0x000004, "Wrong size on BP_DebugPlayerCoord_C_ReceiveTick");
static_assert(offsetof(BP_DebugPlayerCoord_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_DebugPlayerCoord_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}


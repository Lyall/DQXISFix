#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tutorial_Window_000_Main_modern

#include "Basic.hpp"

#include "WBP_Menu_Tutorial_Window_000_Main_modern_classes.hpp"
#include "WBP_Menu_Tutorial_Window_000_Main_modern_parameters.hpp"


namespace SDK
{

// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.LoadingPictureEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::LoadingPictureEvent__DelegateSignature(bool bIsLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "LoadingPictureEvent__DelegateSignature");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_LoadingPictureEvent__DelegateSignature Parms{};

	Parms.bIsLoading = bIsLoading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.ExecuteUbergraph_WBP_Menu_Tutorial_Window_000_Main_modern
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::ExecuteUbergraph_WBP_Menu_Tutorial_Window_000_Main_modern(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "ExecuteUbergraph_WBP_Menu_Tutorial_Window_000_Main_modern");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_ExecuteUbergraph_WBP_Menu_Tutorial_Window_000_Main_modern Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.PlayArrowAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsRight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::PlayArrowAnimation(bool bIsRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "PlayArrowAnimation");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_PlayArrowAnimation Parms{};

	Parms.bIsRight = bIsRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.OnEndLoadingIamge
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_AsyncLoadingImage_C*         Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::OnEndLoadingIamge(class UWBP_AsyncLoadingImage_C* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "OnEndLoadingIamge");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_OnEndLoadingIamge Parms{};

	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "Tick");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.AsyncLoadTutorialPicture
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture>          InTextureAsset                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::AsyncLoadTutorialPicture(TSoftObjectPtr<class UTexture> InTextureAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "AsyncLoadTutorialPicture");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_AsyncLoadTutorialPicture Parms{};

	Parms.InTextureAsset = InTextureAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.OnLoadComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InResultCode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          InLoaddedObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJackUMGAsyncLoad*                InLoadInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::OnLoadComplete(int32 InResultCode, class UObject* InLoaddedObject, class UJackUMGAsyncLoad* InLoadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "OnLoadComplete");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_OnLoadComplete Parms{};

	Parms.InResultCode = InResultCode;
	Parms.InLoaddedObject = InLoaddedObject;
	Parms.InLoadInfo = InLoadInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Menu_Tutorial_Window_000_Main_modern.WBP_Menu_Tutorial_Window_000_Main_modern_C.SetPageData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackUMGTabiNoKokoroePageData    PageData                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   PageMax                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Menu_Tutorial_Window_000_Main_modern_C::SetPageData(const struct FJackUMGTabiNoKokoroePageData& PageData, int32 PageMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Menu_Tutorial_Window_000_Main_modern_C", "SetPageData");

	Params::WBP_Menu_Tutorial_Window_000_Main_modern_C_SetPageData Parms{};

	Parms.PageData = std::move(PageData);
	Parms.PageMax = PageMax;

	UObject::ProcessEvent(Func, &Parms);
}

}


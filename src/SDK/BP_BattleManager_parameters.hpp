#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleManager.BP_BattleManager_C.ExecuteUbergraph_BP_BattleManager
// 0x04D0 (0x04D0 - 0x0000)
struct BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackBattleNigeruComponent*             CallFunc_GetBattleNigeruComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackCommandBattleInitialize           K2Node_CustomEvent_InCommand;                      // 0x0018(0x0040)(ConstParm, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInBattle_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackWorldTime*                         CallFunc_GetWorldTime_ReturnValue2;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class UBP_COMP_BattleNigeru_C*                CallFunc_AddComponent_ReturnValue;                 // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSerifuWindowController*         CallFunc_CloseFieldMessageWindow_ReturnValue;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackFadeColor                                CallFunc_GetStartFadeColor_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackFadeColor                                CallFunc_GetStartFadeColor_ReturnValue2;           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStartFadeTime_ReturnValue;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DitherRange;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_DitherLocation;                       // 0x0118(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DitherBounds;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0130(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackBattleCameraCategory                     K2Node_CustomEvent_BattleCameraCategory2;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackBattleCameraCategory                     K2Node_CustomEvent_BattleCameraCategory;           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleEncounterEffect_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue2;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackBattleTroop                       CallFunc_Array_Get_Item;                           // 0x01B0(0x00A8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
	struct FJackBattleGroup                       CallFunc_Array_Get_Item2;                          // 0x0268(0x0098)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0310(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x031C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x032C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue2;                 // 0x0338(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x0354(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattleFieldNigeruInvalid_ReturnValue;   // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInfinityBattleField_ReturnValue;        // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleFieldCollision_C*             CallFunc_FinishSpawningActor_ReturnValue2;         // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x03C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EJackBattleCameraCategory BattleCameraCategory)> K2Node_CreateDelegate_OutputDelegate7;             // 0x03D0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInfinityBattleField_ReturnValue2;       // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x03E8(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x03FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue3;        // 0x0408(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue4;        // 0x0414(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue3;            // 0x0420(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue4;            // 0x042C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue5;            // 0x0438(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EJackBattleCameraCategory BattleCameraCategory)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0448(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0458(0x0010)(ZeroConstructor, NoDestructor)
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue;   // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate11;            // 0x0478(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndFadeOutDefaultTimeByOther_ReturnValue; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FJackCommandBattleInitialize& InCommand)> K2Node_CreateDelegate_OutputDelegate12;            // 0x0490(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetEndFadeTime_ReturnValue;               // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x04A8(0x0010)(ZeroConstructor, NoDestructor)
	EJackFadeColor                                CallFunc_GetEndFadeColor_ReturnValue;              // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattleFieldNigeruInvalid_ReturnValue2;  // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x04C0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager) == 0x000010, "Wrong alignment on BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager");
static_assert(sizeof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager) == 0x0004D0, "Wrong size on BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, EntryPoint) == 0x000000, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetBattleNigeruComponent_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetBattleNigeruComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CustomEvent_InCommand) == 0x000018, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CustomEvent_InCommand' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsInBattle_ReturnValue) == 0x000071, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsInBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetWorldTime_ReturnValue) == 0x000080, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetWorldTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000088, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_BooleanOR_ReturnValue) == 0x000089, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetWorldTime_ReturnValue2) == 0x000090, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetWorldTime_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_BooleanOR_ReturnValue2) == 0x000098, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue2) == 0x0000B1, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_int_Array_Index_Variable2) == 0x0000B4, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_struct_Variable) == 0x0000C0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_AddComponent_ReturnValue) == 0x0000F0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_CloseFieldMessageWindow_ReturnValue) == 0x0000F8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_CloseFieldMessageWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetStartFadeColor_ReturnValue) == 0x000100, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetStartFadeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetStartFadeColor_ReturnValue2) == 0x000101, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetStartFadeColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetStartFadeTime_ReturnValue) == 0x000104, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetStartFadeTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CustomEvent_DestroyedActor) == 0x000108, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_DitherRange) == 0x000110, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_DitherRange' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_DitherLocation) == 0x000118, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_DitherLocation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_DitherBounds) == 0x000124, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_DitherBounds' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_int_Loop_Counter_Variable2) == 0x000128, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_IntInt_ReturnValue2) == 0x00012C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000130, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CustomEvent_BattleCameraCategory2) == 0x000140, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CustomEvent_BattleCameraCategory2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CustomEvent_BattleCameraCategory) == 0x000141, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CustomEvent_BattleCameraCategory' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue3) == 0x000142, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate3) == 0x000148, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000160, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000190, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000198, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetBattleManager_ReturnValue) == 0x0001A0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetBattleManager_ReturnValue2) == 0x0001A8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetBattleManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate4) == 0x000258, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Array_Get_Item2) == 0x000268, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Array_Length_ReturnValue) == 0x000300, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Less_IntInt_ReturnValue) == 0x000304, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000308, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x00030C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetForwardVector_ReturnValue) == 0x000310, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_SelectColor_ReturnValue) == 0x00031C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00032C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_SelectColor_ReturnValue2) == 0x000338, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_SelectColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_VectorVector_ReturnValue) == 0x000348, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_VectorVector_ReturnValue2) == 0x000354, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Array_Length_ReturnValue2) == 0x000360, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Less_IntInt_ReturnValue2) == 0x000364, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsBattleFieldNigeruInvalid_ReturnValue) == 0x000365, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsBattleFieldNigeruInvalid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate5) == 0x000368, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Not_PreBool_ReturnValue2) == 0x000378, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsInfinityBattleField_ReturnValue) == 0x000379, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsInfinityBattleField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2) == 0x0003B0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_FinishSpawningActor_ReturnValue2) == 0x0003B8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_FinishSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate6) == 0x0003C0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate7) == 0x0003D0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0003E0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsInfinityBattleField_ReturnValue2) == 0x0003E4, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsInfinityBattleField_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate8) == 0x0003E8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0003F8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x0003FC, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_VectorFloat_ReturnValue3) == 0x000408, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_VectorFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Multiply_VectorFloat_ReturnValue4) == 0x000414, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Multiply_VectorFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_VectorVector_ReturnValue3) == 0x000420, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_VectorVector_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_VectorVector_ReturnValue4) == 0x00042C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_VectorVector_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Add_VectorVector_ReturnValue5) == 0x000438, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Add_VectorVector_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate9) == 0x000448, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate10) == 0x000458, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetJackPlayerCameraManager_ReturnValue) == 0x000468, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetJackPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue4) == 0x000470, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate11) == 0x000478, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue5) == 0x000488, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetEndFadeOutDefaultTimeByOther_ReturnValue) == 0x00048C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetEndFadeOutDefaultTimeByOther_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate12) == 0x000490, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetEndFadeTime_ReturnValue) == 0x0004A0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetEndFadeTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate13) == 0x0004A8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetEndFadeColor_ReturnValue) == 0x0004B8, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetEndFadeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0004B9, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsBattleFieldNigeruInvalid_ReturnValue2) == 0x0004BA, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsBattleFieldNigeruInvalid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Not_PreBool_ReturnValue3) == 0x0004BB, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate14) == 0x0004C0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.OnBattleCameraEndDelegate_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleManager_C_OnBattleCameraEndDelegate_Event final
{
public:
	EJackBattleCameraCategory                     BattleCameraCategory;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_OnBattleCameraEndDelegate_Event) == 0x000001, "Wrong alignment on BP_BattleManager_C_OnBattleCameraEndDelegate_Event");
static_assert(sizeof(BP_BattleManager_C_OnBattleCameraEndDelegate_Event) == 0x000001, "Wrong size on BP_BattleManager_C_OnBattleCameraEndDelegate_Event");
static_assert(offsetof(BP_BattleManager_C_OnBattleCameraEndDelegate_Event, BattleCameraCategory) == 0x000000, "Member 'BP_BattleManager_C_OnBattleCameraEndDelegate_Event::BattleCameraCategory' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.OnBattleCameraStartDelegate_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleManager_C_OnBattleCameraStartDelegate_Event final
{
public:
	EJackBattleCameraCategory                     BattleCameraCategory;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_OnBattleCameraStartDelegate_Event) == 0x000001, "Wrong alignment on BP_BattleManager_C_OnBattleCameraStartDelegate_Event");
static_assert(sizeof(BP_BattleManager_C_OnBattleCameraStartDelegate_Event) == 0x000001, "Wrong size on BP_BattleManager_C_OnBattleCameraStartDelegate_Event");
static_assert(offsetof(BP_BattleManager_C_OnBattleCameraStartDelegate_Event, BattleCameraCategory) == 0x000000, "Member 'BP_BattleManager_C_OnBattleCameraStartDelegate_Event::BattleCameraCategory' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetFoliageDitherBattleFieldDirect
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleManager_C_SetFoliageDitherBattleFieldDirect final
{
public:
	struct FVector                                DitherLocation;                                    // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DitherBounds;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetFoliageDitherBattleFieldDirect) == 0x000004, "Wrong alignment on BP_BattleManager_C_SetFoliageDitherBattleFieldDirect");
static_assert(sizeof(BP_BattleManager_C_SetFoliageDitherBattleFieldDirect) == 0x000010, "Wrong size on BP_BattleManager_C_SetFoliageDitherBattleFieldDirect");
static_assert(offsetof(BP_BattleManager_C_SetFoliageDitherBattleFieldDirect, DitherLocation) == 0x000000, "Member 'BP_BattleManager_C_SetFoliageDitherBattleFieldDirect::DitherLocation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetFoliageDitherBattleFieldDirect, DitherBounds) == 0x00000C, "Member 'BP_BattleManager_C_SetFoliageDitherBattleFieldDirect::DitherBounds' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetFoliageDitherRangeDirect
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleManager_C_SetFoliageDitherRangeDirect final
{
public:
	float                                         DitherRange;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetFoliageDitherRangeDirect) == 0x000004, "Wrong alignment on BP_BattleManager_C_SetFoliageDitherRangeDirect");
static_assert(sizeof(BP_BattleManager_C_SetFoliageDitherRangeDirect) == 0x000004, "Wrong size on BP_BattleManager_C_SetFoliageDitherRangeDirect");
static_assert(offsetof(BP_BattleManager_C_SetFoliageDitherRangeDirect, DitherRange) == 0x000000, "Member 'BP_BattleManager_C_SetFoliageDitherRangeDirect::DitherRange' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.OnDestroyed_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_OnDestroyed_Event_0 final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_OnDestroyed_Event_0) == 0x000008, "Wrong alignment on BP_BattleManager_C_OnDestroyed_Event_0");
static_assert(sizeof(BP_BattleManager_C_OnDestroyed_Event_0) == 0x000008, "Wrong size on BP_BattleManager_C_OnDestroyed_Event_0");
static_assert(offsetof(BP_BattleManager_C_OnDestroyed_Event_0, DestroyedActor) == 0x000000, "Member 'BP_BattleManager_C_OnDestroyed_Event_0::DestroyedActor' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BattleManager_C_ReceiveTick");
static_assert(sizeof(BP_BattleManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_BattleManager_C_ReceiveTick");
static_assert(offsetof(BP_BattleManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BattleManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.OnBattleInitialize_Event_0
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleManager_C_OnBattleInitialize_Event_0 final
{
public:
	struct FJackCommandBattleInitialize           InCommand;                                         // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_OnBattleInitialize_Event_0) == 0x000008, "Wrong alignment on BP_BattleManager_C_OnBattleInitialize_Event_0");
static_assert(sizeof(BP_BattleManager_C_OnBattleInitialize_Event_0) == 0x000040, "Wrong size on BP_BattleManager_C_OnBattleInitialize_Event_0");
static_assert(offsetof(BP_BattleManager_C_OnBattleInitialize_Event_0, InCommand) == 0x000000, "Member 'BP_BattleManager_C_OnBattleInitialize_Event_0::InCommand' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetMinimapVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleManager_C_SetMinimapVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetMinimapVisibility) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetMinimapVisibility");
static_assert(sizeof(BP_BattleManager_C_SetMinimapVisibility) == 0x000010, "Wrong size on BP_BattleManager_C_SetMinimapVisibility");
static_assert(offsetof(BP_BattleManager_C_SetMinimapVisibility, bVisible) == 0x000000, "Member 'BP_BattleManager_C_SetMinimapVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMinimapVisibility, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_SetMinimapVisibility::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetHiddenInBattle
// 0x00D8 (0x00D8 - 0x0000)
struct BP_BattleManager_C_SetHiddenInBattle final
{
public:
	bool                                          bHidden_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AJackCharacter*>                 BattleMonsterCharacters;                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AJackCharacter*>                 AllCharacters;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AJackCharacter*>                 CandidateHiddenMonsters;                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class FName                                   CallFunc_GetHiddenExclusionTag_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetHiddenExclusionTag_ReturnValue2;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AJackCharacter*>                 CallFunc_GetCharacters_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class AJackCharacter*                         CallFunc_Array_Get_Item2;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackMonsterCharacter*                  K2Node_DynamicCast_AsJack_Monster_Character;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_Array_Get_Item3;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackCharacter*>                 CallFunc_GetBattleMonsterCharacters_ReturnValue;   // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetHiddenInBattle) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetHiddenInBattle");
static_assert(sizeof(BP_BattleManager_C_SetHiddenInBattle) == 0x0000D8, "Wrong size on BP_BattleManager_C_SetHiddenInBattle");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, bHidden_0) == 0x000000, "Member 'BP_BattleManager_C_SetHiddenInBattle::bHidden_0' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, BattleMonsterCharacters) == 0x000008, "Member 'BP_BattleManager_C_SetHiddenInBattle::BattleMonsterCharacters' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, AllCharacters) == 0x000018, "Member 'BP_BattleManager_C_SetHiddenInBattle::AllCharacters' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CandidateHiddenMonsters) == 0x000028, "Member 'BP_BattleManager_C_SetHiddenInBattle::CandidateHiddenMonsters' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_GetHiddenExclusionTag_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_GetHiddenExclusionTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_GetHiddenExclusionTag_ReturnValue2) == 0x000048, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_GetHiddenExclusionTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Array_Index_Variable2) == 0x000054, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Length_ReturnValue2) == 0x000064, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Array_Index_Variable3) == 0x000068, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_GetCharacters_ReturnValue) == 0x000070, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_GetCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Get_Item2) == 0x000080, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, K2Node_DynamicCast_AsJack_Monster_Character) == 0x000088, "Member 'BP_BattleManager_C_SetHiddenInBattle::K2Node_DynamicCast_AsJack_Monster_Character' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_BattleManager_C_SetHiddenInBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Loop_Counter_Variable2) == 0x000094, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Get_Item3) == 0x000098, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Length_ReturnValue3) == 0x0000A0, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Less_IntInt_ReturnValue2) == 0x0000AC, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Add_IntInt_ReturnValue2) == 0x0000B0, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Add_ReturnValue2) == 0x0000B4, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_GetBattleMonsterCharacters_ReturnValue) == 0x0000B8, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_GetBattleMonsterCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Array_Contains_ReturnValue) == 0x0000C8, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Not_PreBool_ReturnValue) == 0x0000C9, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, Temp_int_Loop_Counter_Variable3) == 0x0000CC, "Member 'BP_BattleManager_C_SetHiddenInBattle::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Less_IntInt_ReturnValue3) == 0x0000D0, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetHiddenInBattle, CallFunc_Add_IntInt_ReturnValue3) == 0x0000D4, "Member 'BP_BattleManager_C_SetHiddenInBattle::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.DebugDrawCylinder
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleManager_C_DebugDrawCylinder final
{
public:
	struct FVector                                InCenter;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRadius;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InColor;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_DebugDrawCylinder) == 0x000004, "Wrong alignment on BP_BattleManager_C_DebugDrawCylinder");
static_assert(sizeof(BP_BattleManager_C_DebugDrawCylinder) == 0x000038, "Wrong size on BP_BattleManager_C_DebugDrawCylinder");
static_assert(offsetof(BP_BattleManager_C_DebugDrawCylinder, InCenter) == 0x000000, "Member 'BP_BattleManager_C_DebugDrawCylinder::InCenter' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_DebugDrawCylinder, InRadius) == 0x00000C, "Member 'BP_BattleManager_C_DebugDrawCylinder::InRadius' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_DebugDrawCylinder, InColor) == 0x000010, "Member 'BP_BattleManager_C_DebugDrawCylinder::InColor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_DebugDrawCylinder, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_DebugDrawCylinder::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_DebugDrawCylinder, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_BattleManager_C_DebugDrawCylinder::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.ApplyToubatuMonsterCount
// 0x0098 (0x0098 - 0x0000)
struct BP_BattleManager_C_ApplyToubatuMonsterCount final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackBattleStatus*                      CallFunc_GetBattleStatusBP_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackBattleExtraToubatuCountInfo       CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_Array_Get_Item2;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackMonsterGameCharacter*              K2Node_DynamicCast_AsJack_Monster_Game_Character;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMonsterID_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackBattleCharacterManager*            CallFunc_GetBattleCharacterManager_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackGameCharacter*>             CallFunc_GetToubatuMonsterGameCharacters_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue2;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_ApplyToubatuMonsterCount) == 0x000008, "Wrong alignment on BP_BattleManager_C_ApplyToubatuMonsterCount");
static_assert(sizeof(BP_BattleManager_C_ApplyToubatuMonsterCount) == 0x000098, "Wrong size on BP_BattleManager_C_ApplyToubatuMonsterCount");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, Temp_int_Array_Index_Variable2) == 0x00000C, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetSaveData_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetBattleStatusBP_ReturnValue) == 0x000018, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetBattleStatusBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, Temp_int_Loop_Counter_Variable2) == 0x000020, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Add_IntInt_ReturnValue2) == 0x000040, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Array_Get_Item2) == 0x000048, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, K2Node_DynamicCast_AsJack_Monster_Game_Character) == 0x000050, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::K2Node_DynamicCast_AsJack_Monster_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetMonsterID_ReturnValue) == 0x000060, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetMonsterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Array_Length_ReturnValue2) == 0x000068, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetBattleCharacterManager_ReturnValue) == 0x000070, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetBattleCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_Less_IntInt_ReturnValue2) == 0x000078, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetToubatuMonsterGameCharacters_ReturnValue) == 0x000080, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetToubatuMonsterGameCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ApplyToubatuMonsterCount, CallFunc_GetSaveData_ReturnValue2) == 0x000090, "Member 'BP_BattleManager_C_ApplyToubatuMonsterCount::CallFunc_GetSaveData_ReturnValue2' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetMonsterIgnoreCollisionNMV_BlockMonster
// 0x0070 (0x0070 - 0x0000)
struct BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster final
{
public:
	bool                                          bIgnoreCollision;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item2;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackBattleCharacterManager*            CallFunc_GetBattleCharacterManager_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackCharacter*>                 CallFunc_GetBattleMonsterCharacters_ReturnValue;   // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster");
static_assert(sizeof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster) == 0x000070, "Wrong size on BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, bIgnoreCollision) == 0x000000, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::bIgnoreCollision' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, Temp_int_Array_Index_Variable2) == 0x000010, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Array_Get_Item2) == 0x000020, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, K2Node_DynamicCast_AsPrimitive_Component) == 0x000038, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Array_Length_ReturnValue2) == 0x000044, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, Temp_int_Loop_Counter_Variable2) == 0x00004C, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue2) == 0x000050, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue2) == 0x000054, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_GetBattleCharacterManager_ReturnValue) == 0x000058, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_GetBattleCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster, CallFunc_GetBattleMonsterCharacters_ReturnValue) == 0x000060, "Member 'BP_BattleManager_C_SetMonsterIgnoreCollisionNMV_BlockMonster::CallFunc_GetBattleMonsterCharacters_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.InitializeNMV_BlockMonster
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BattleManager_C_InitializeNMV_BlockMonster final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ABP_NavModifierVolume_BlockMonster_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class ABP_NavModifierVolume_BlockMonster_C*   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackNavModifierVolume*                 CallFunc_DuplicateAsBattleVolume_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsInfinityBattleField_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_CapsuleOverlapActors_OutActors;           // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapActors_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NavModifierVolume_BlockMonster_C*   K2Node_DynamicCast_AsBP_Nav_Modifier_Volume_Block_Monster; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_InitializeNMV_BlockMonster) == 0x000008, "Wrong alignment on BP_BattleManager_C_InitializeNMV_BlockMonster");
static_assert(sizeof(BP_BattleManager_C_InitializeNMV_BlockMonster) == 0x0000A8, "Wrong size on BP_BattleManager_C_InitializeNMV_BlockMonster");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, Temp_int_Array_Index_Variable2) == 0x00000C, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, Temp_object_Variable) == 0x000010, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_DuplicateAsBattleVolume_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_DuplicateAsBattleVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, Temp_int_Loop_Counter_Variable2) == 0x000048, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue2) == 0x000050, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_IsInfinityBattleField_ReturnValue) == 0x000068, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_IsInfinityBattleField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_CapsuleOverlapActors_OutActors) == 0x000070, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_CapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_CapsuleOverlapActors_ReturnValue) == 0x000080, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_CapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Length_ReturnValue2) == 0x000084, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Get_Item2) == 0x000088, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue2) == 0x000090, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, K2Node_DynamicCast_AsBP_Nav_Modifier_Volume_Block_Monster) == 0x000098, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::K2Node_DynamicCast_AsBP_Nav_Modifier_Volume_Block_Monster' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_InitializeNMV_BlockMonster, CallFunc_Array_Add_ReturnValue2) == 0x0000A4, "Member 'BP_BattleManager_C_InitializeNMV_BlockMonster::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.FinalizeNMV_BlockMonster
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleManager_C_FinalizeNMV_BlockMonster final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackNavModifierVolume*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NavModifierVolume_BlockMonster_C*   CallFunc_Array_Get_Item2;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_FinalizeNMV_BlockMonster) == 0x000008, "Wrong alignment on BP_BattleManager_C_FinalizeNMV_BlockMonster");
static_assert(sizeof(BP_BattleManager_C_FinalizeNMV_BlockMonster) == 0x000040, "Wrong size on BP_BattleManager_C_FinalizeNMV_BlockMonster");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, Temp_int_Array_Index_Variable2) == 0x00000C, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, Temp_int_Loop_Counter_Variable2) == 0x000010, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Add_IntInt_ReturnValue2) == 0x000020, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Array_Get_Item2) == 0x000030, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Array_Length_ReturnValue2) == 0x000038, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_FinalizeNMV_BlockMonster, CallFunc_Less_IntInt_ReturnValue2) == 0x00003C, "Member 'BP_BattleManager_C_FinalizeNMV_BlockMonster::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.CallAllDead
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleManager_C_CallAllDead final
{
public:
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameEvent*                         CallFunc_GetGameEvent_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_CallAllDead) == 0x000008, "Wrong alignment on BP_BattleManager_C_CallAllDead");
static_assert(sizeof(BP_BattleManager_C_CallAllDead) == 0x000018, "Wrong size on BP_BattleManager_C_CallAllDead");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_GetJackGameMode_ReturnValue) == 0x000000, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_GetGameEvent_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_GetGameEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000012, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallAllDead, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_BattleManager_C_CallAllDead::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetMonsterAppearPlantDitherParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_SetMonsterAppearPlantDitherParameter final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetMonsterAppearPlantDitherParameter) == 0x000004, "Wrong alignment on BP_BattleManager_C_SetMonsterAppearPlantDitherParameter");
static_assert(sizeof(BP_BattleManager_C_SetMonsterAppearPlantDitherParameter) == 0x000008, "Wrong size on BP_BattleManager_C_SetMonsterAppearPlantDitherParameter");
static_assert(offsetof(BP_BattleManager_C_SetMonsterAppearPlantDitherParameter, Enable) == 0x000000, "Member 'BP_BattleManager_C_SetMonsterAppearPlantDitherParameter::Enable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetMonsterAppearPlantDitherParameter, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_BattleManager_C_SetMonsterAppearPlantDitherParameter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetBattleFieldCollisionIgnore
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleManager_C_SetBattleFieldCollisionIgnore final
{
public:
	class AJackCharacter*                         IgnoreCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_SetBattleFieldCollisionIgnore) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetBattleFieldCollisionIgnore");
static_assert(sizeof(BP_BattleManager_C_SetBattleFieldCollisionIgnore) == 0x000028, "Wrong size on BP_BattleManager_C_SetBattleFieldCollisionIgnore");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, IgnoreCharacter) == 0x000000, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::IgnoreCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetBattleFieldCollisionIgnore, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_SetBattleFieldCollisionIgnore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetActivateEnvParam
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_SetActivateEnvParam final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetActivateEnvParam) == 0x000004, "Wrong alignment on BP_BattleManager_C_SetActivateEnvParam");
static_assert(sizeof(BP_BattleManager_C_SetActivateEnvParam) == 0x000008, "Wrong size on BP_BattleManager_C_SetActivateEnvParam");
static_assert(offsetof(BP_BattleManager_C_SetActivateEnvParam, bActive) == 0x000000, "Member 'BP_BattleManager_C_SetActivateEnvParam::bActive' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetActivateEnvParam, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_BattleManager_C_SetActivateEnvParam::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.GetEnvParamMaterialParameterCollection
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_GetEnvParamMaterialParameterCollection final
{
public:
	class UMaterialParameterCollection*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_GetEnvParamMaterialParameterCollection) == 0x000008, "Wrong alignment on BP_BattleManager_C_GetEnvParamMaterialParameterCollection");
static_assert(sizeof(BP_BattleManager_C_GetEnvParamMaterialParameterCollection) == 0x000008, "Wrong size on BP_BattleManager_C_GetEnvParamMaterialParameterCollection");
static_assert(offsetof(BP_BattleManager_C_GetEnvParamMaterialParameterCollection, ReturnValue) == 0x000000, "Member 'BP_BattleManager_C_GetEnvParamMaterialParameterCollection::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MobMonster_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MobMonster_Base.BP_MobMonster_Base_C.ExecuteUbergraph_BP_MobMonster_Base
// 0x0010 (0x0010 - 0x0000)
struct BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackMaterialUpdaterScalar*             CallFunc_StartActorMaterialScalarUpdate_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base) == 0x000008, "Wrong alignment on BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base");
static_assert(sizeof(BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base) == 0x000010, "Wrong size on BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base");
static_assert(offsetof(BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base, EntryPoint) == 0x000000, "Member 'BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000004, "Member 'BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base, CallFunc_StartActorMaterialScalarUpdate_ReturnValue) == 0x000008, "Member 'BP_MobMonster_Base_C_ExecuteUbergraph_BP_MobMonster_Base::CallFunc_StartActorMaterialScalarUpdate_ReturnValue' has a wrong offset!");

// Function BP_MobMonster_Base.BP_MobMonster_Base_C.UserConstructionScript
// 0x0140 (0x0140 - 0x0000)
struct BP_MobMonster_Base_C_UserConstructionScript final
{
public:
	struct FJackDataTableMonsterPhysicalProperty  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0130)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MobMonster_Base_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_MobMonster_Base_C_UserConstructionScript");
static_assert(sizeof(BP_MobMonster_Base_C_UserConstructionScript) == 0x000140, "Wrong size on BP_MobMonster_Base_C_UserConstructionScript");
static_assert(offsetof(BP_MobMonster_Base_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_MobMonster_Base_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_MobMonster_Base_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'BP_MobMonster_Base_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_MobMonster_Base.BP_MobMonster_Base_C.HiddenInGameForMobMonster
// 0x0005 (0x0005 - 0x0000)
struct BP_MobMonster_Base_C_HiddenInGameForMobMonster final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MobMonster_Base_C_HiddenInGameForMobMonster) == 0x000001, "Wrong alignment on BP_MobMonster_Base_C_HiddenInGameForMobMonster");
static_assert(sizeof(BP_MobMonster_Base_C_HiddenInGameForMobMonster) == 0x000005, "Wrong size on BP_MobMonster_Base_C_HiddenInGameForMobMonster");
static_assert(offsetof(BP_MobMonster_Base_C_HiddenInGameForMobMonster, Hidden) == 0x000000, "Member 'BP_MobMonster_Base_C_HiddenInGameForMobMonster::Hidden' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_HiddenInGameForMobMonster, Temp_bool_Variable) == 0x000001, "Member 'BP_MobMonster_Base_C_HiddenInGameForMobMonster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_HiddenInGameForMobMonster, Temp_byte_Variable) == 0x000002, "Member 'BP_MobMonster_Base_C_HiddenInGameForMobMonster::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_HiddenInGameForMobMonster, Temp_byte_Variable2) == 0x000003, "Member 'BP_MobMonster_Base_C_HiddenInGameForMobMonster::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_MobMonster_Base_C_HiddenInGameForMobMonster, K2Node_Select_Default) == 0x000004, "Member 'BP_MobMonster_Base_C_HiddenInGameForMobMonster::K2Node_Select_Default' has a wrong offset!");

}


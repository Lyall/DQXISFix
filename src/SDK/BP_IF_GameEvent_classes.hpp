#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IF_GameEvent

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// DynamicClass BP_IF_GameEvent.BP_IF_GameEvent_C
// 0x0000 (0x0038 - 0x0038)
class IBP_IF_GameEvent_C final : public IInterface
{
public:
	void GameMinusEndCamp(bool bpp__IsMapJump__pf);
	void GameMinusEndEnvSoundForCamp(float bpp__FadeTime__pf, bool bpp__IsNight__pf);
	void GameMinusM12EventBattle();
	void GameMinusM12EventBattleFinalPhase();
	void GameMinusMapJumpFadeInStart(class FName bpp__MapID__pf, class FName bpp__BGMID__pf);
	void GameMinusPost_B_110_CS_260();
	void GameMinusReplay_BGM();
	void GameMinusStartCamp();
	void GameMinusStartEnvSoundForCamp(float bpp__FadeTime__pf, bool bpp__IsNight__pf);
	void Game_Minus_CasinoNpcScheduleEnd(class AJackScheduledNPC* bpp__TargetNpc__pf);
	void Game_Minus_ChangeEnvSoundFromCS(bool bpp__IsNight__pf, class FName bpp__CSxID__pfT);
	void Game_Minus_ChangeTImeZone(bool bpp__IsNight__pf);
	void Game_Minus_ChangeTimeZoneToField(bool bpp__DefaultFadeTime__pf, float bpp__FadeTime__pf);
	void Game_Minus_CSBeginFadeAfter(bool* bpp__BGMChange__pf);
	void Game_Minus_CSBeginFadeBefore(class FName bpp__CSID__pf, bool bpp__IsMemories__pf);
	void Game_Minus_CSEndFadeAfter();
	void Game_Minus_CSEndFadeBefore(bool bpp__IsMemories__pf, bool bpp__EnvSound__pf);
	void Game_Minus_CSMapJump(class FName bpp__InMapID__pf, class FName bpp__InBGMID__pf);
	void Game_Minus_CutSceneSkip(float bpp__fadeoutTime__pf);
	void Game_Minus_D90_RoomEnv_Update(class FName bpp__ChangeMapID__pf);
	void Game_Minus_D90GetLocationFrom(class FName* bpp__LocationName__pf);
	void Game_Minus_F01_H_GroupEventBattle_End();
	void Game_Minus_FinishMapChange(class FName bpp__MapxID__pfT);
	void Game_Minus_GuideTreeEndProcess();
	void Game_Minus_InRoom();
	void Game_Minus_MapChangeFinished(class FName bpp__MapxID__pfT, class FName bpp__BGMxID__pfT);
	void Game_Minus_OutRoom();
	void Game_Minus_PlayJingle(uint8 bpp__JinglexType__pfT);
	void Game_Minus_PostUpdateNpcImportance();
	void Game_Minus_TravelMap(EJackMapChangeSound bpp__PlayMapChangeSound__pf);
	void Game_Minus_UpdateWind(EJackWorldWindLevel bpp__WindForce__pf);
	void Game_Minus_WeatherChange(EJackWorldWeather bpp__WeatherPtn__pf);
	void Game_Minus_WeatherChange_Integration(EJackWorldWeather bpp__WeatherPtn__pf, EJackWorldWindLevel bpp__WindForce__pf);
	void Game_Minus_WeatherEffectAvtive(EJackWorldWeather bpp__Weather__pf);
	void Game_Minus_WeatherEffectDeactive();
	void GemeMinusDontGoBegin();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_IF_GameEvent_C">();
	}
	static class IBP_IF_GameEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBP_IF_GameEvent_C>();
	}
};
static_assert(alignof(IBP_IF_GameEvent_C) == 0x000008, "Wrong alignment on IBP_IF_GameEvent_C");
static_assert(sizeof(IBP_IF_GameEvent_C) == 0x000038, "Wrong size on IBP_IF_GameEvent_C");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LocationVolume

#include "Basic.hpp"

#include "BP_LocationVolume_classes.hpp"
#include "BP_LocationVolume_parameters.hpp"


namespace SDK
{

// Function BP_LocationVolume.BP_LocationVolume_C.ExecuteUbergraph_BP_LocationVolume
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LocationVolume_C::ExecuteUbergraph_BP_LocationVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "ExecuteUbergraph_BP_LocationVolume");

	Params::BP_LocationVolume_C_ExecuteUbergraph_BP_LocationVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LocationVolume.BP_LocationVolume_C.MapJumpBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LocationVolume_C::MapJumpBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "MapJumpBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LocationVolume.BP_LocationVolume_C.CallSetMinimapData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_UIMapInfo               VolimeID                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    Out                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LocationVolume_C::CallSetMinimapData(const struct FJackLDT_UIMapInfo& VolimeID, bool Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "CallSetMinimapData");

	Params::BP_LocationVolume_C_CallSetMinimapData Parms{};

	Parms.VolimeID = std::move(VolimeID);
	Parms.Out = Out;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LocationVolume.BP_LocationVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LocationVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LocationVolume.BP_LocationVolume_C.BndEvt__BrushComponent_K2Node_ComponentBoundEvent_99_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LocationVolume_C::BndEvt__BrushComponent_K2Node_ComponentBoundEvent_99_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "BndEvt__BrushComponent_K2Node_ComponentBoundEvent_99_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_LocationVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_99_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LocationVolume.BP_LocationVolume_C.BndEvt__BrushComponent_K2Node_ComponentBoundEvent_96_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_LocationVolume_C::BndEvt__BrushComponent_K2Node_ComponentBoundEvent_96_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "BndEvt__BrushComponent_K2Node_ComponentBoundEvent_96_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_LocationVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_96_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LocationVolume.BP_LocationVolume_C.SetMinimapData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_UIMapInfo               VolumeID                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    Out                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LocationVolume_C::SetMinimapData(const struct FJackLDT_UIMapInfo& VolumeID, bool Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "SetMinimapData");

	Params::BP_LocationVolume_C_SetMinimapData Parms{};

	Parms.VolumeID = std::move(VolumeID);
	Parms.Out = Out;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LocationVolume.BP_LocationVolume_C.MapJumpEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LocationVolume_C::MapJumpEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "MapJumpEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LocationVolume.BP_LocationVolume_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LocationVolume_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LocationVolume.BP_LocationVolume_C.GetInVolume
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_UIMapInfo               InVolumeID_0                                           (Parm, OutParm, NoDestructor)

void ABP_LocationVolume_C::GetInVolume(struct FJackLDT_UIMapInfo* InVolumeID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "GetInVolume");

	Params::BP_LocationVolume_C_GetInVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InVolumeID_0 != nullptr)
		*InVolumeID_0 = std::move(Parms.InVolumeID_0);
}


// Function BP_LocationVolume.BP_LocationVolume_C.GetOutVolume
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_UIMapInfo               OutVolumeID_0                                          (Parm, OutParm, NoDestructor)

void ABP_LocationVolume_C::GetOutVolume(struct FJackLDT_UIMapInfo* OutVolumeID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LocationVolume_C", "GetOutVolume");

	Params::BP_LocationVolume_C_GetOutVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutVolumeID_0 != nullptr)
		*OutVolumeID_0 = std::move(Parms.OutVolumeID_0);
}

}


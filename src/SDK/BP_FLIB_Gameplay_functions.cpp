#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Gameplay

#include "Basic.hpp"

#include "BP_FLIB_Gameplay_classes.hpp"
#include "BP_FLIB_Gameplay_parameters.hpp"


namespace SDK
{

// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Input Disabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Input_Disabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Input Disabled");

	Params::BP_FLIB_Gameplay_C_Player_Input_Disabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Input Enabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Input_Enabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Input Enabled");

	Params::BP_FLIB_Gameplay_C_Player_Input_Enabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Character Movement Enabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   JackCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Character_Movement_Enabled(class AJackCharacter* JackCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Character Movement Enabled");

	Params::BP_FLIB_Gameplay_C_Character_Movement_Enabled Parms{};

	Parms.JackCharacter = JackCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Character Movement Disabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   JackCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Character_Movement_Disabled(class AJackCharacter* JackCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Character Movement Disabled");

	Params::BP_FLIB_Gameplay_C_Character_Movement_Disabled Parms{};

	Parms.JackCharacter = JackCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Camera Reset
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Interp_Second                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Camera_Reset(float Interp_Second, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Camera Reset");

	Params::BP_FLIB_Gameplay_C_Player_Camera_Reset Parms{};

	Parms.Interp_Second = Interp_Second;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Talk Camera Enabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   TalkCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LocationUpdate                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Talk_Camera_Enabled(class AJackCharacter* TalkCharacter, bool LocationUpdate, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Talk Camera Enabled");

	Params::BP_FLIB_Gameplay_C_Talk_Camera_Enabled Parms{};

	Parms.TalkCharacter = TalkCharacter;
	Parms.LocationUpdate = LocationUpdate;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Talk Camera Disabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Talk_Camera_Disabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Talk Camera Disabled");

	Params::BP_FLIB_Gameplay_C_Talk_Camera_Disabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Movement Enabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Movement_Enabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Movement Enabled");

	Params::BP_FLIB_Gameplay_C_Player_Movement_Enabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Movement Disabled
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Movement_Disabled(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Movement Disabled");

	Params::BP_FLIB_Gameplay_C_Player_Movement_Disabled Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Hidden All Characters
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacterHiddenPurpose             Purpose                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayerPause                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IgnoreSymbolMonster                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Hidden_All_Characters(EJackCharacterHiddenPurpose Purpose, bool NewHidden, bool PlayerPause, bool IgnoreSymbolMonster, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Hidden All Characters");

	Params::BP_FLIB_Gameplay_C_Set_Hidden_All_Characters Parms{};

	Parms.Purpose = Purpose;
	Parms.NewHidden = NewHidden;
	Parms.PlayerPause = PlayerPause;
	Parms.IgnoreSymbolMonster = IgnoreSymbolMonster;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.AddInteractiveActorComponent
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJackInteractiveActorComponent*   InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::AddInteractiveActorComponent(class AActor* InActor, class UJackInteractiveActorComponent* InComponent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "AddInteractiveActorComponent");

	Params::BP_FLIB_Gameplay_C_AddInteractiveActorComponent Parms{};

	Parms.InActor = InActor;
	Parms.InComponent = InComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.RemoveInteractiveActorComponent
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJackInteractiveActorComponent*   InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::RemoveInteractiveActorComponent(class AActor* InActor, class UJackInteractiveActorComponent* InComponent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "RemoveInteractiveActorComponent");

	Params::BP_FLIB_Gameplay_C_RemoveInteractiveActorComponent Parms{};

	Parms.InActor = InActor;
	Parms.InComponent = InComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Time Color
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FLinearColor>             ColorTable                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Get_Time_Color(TArray<struct FLinearColor>& ColorTable, int32 Time, class UObject* __WorldContext, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Time Color");

	Params::BP_FLIB_Gameplay_C_Get_Time_Color Parms{};

	Parms.ColorTable = std::move(ColorTable);
	Parms.Time = Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ColorTable = std::move(Parms.ColorTable);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Time Float
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<float>                           FloatTable                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Float                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Get_Time_Float(TArray<float>& FloatTable, int32 Time, class UObject* __WorldContext, float* Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Time Float");

	Params::BP_FLIB_Gameplay_C_Get_Time_Float Parms{};

	Parms.FloatTable = std::move(FloatTable);
	Parms.Time = Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	FloatTable = std::move(Parms.FloatTable);

	if (Float != nullptr)
		*Float = Parms.Float;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Player Camera Rotation
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSeconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRelativeRotation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Player_Camera_Rotation(const struct FRotator& Rotation, float Length, float InterpSeconds, bool bRelativeRotation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Player Camera Rotation");

	Params::BP_FLIB_Gameplay_C_Set_Player_Camera_Rotation Parms{};

	Parms.Rotation = std::move(Rotation);
	Parms.Length = Length;
	Parms.InterpSeconds = InterpSeconds;
	Parms.bRelativeRotation = bRelativeRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Player Camera Target Rotation
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSeconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OffsetRotator                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Player_Camera_Target_Rotation(class AActor* Target, float Length, float InterpSeconds, const struct FRotator& OffsetRotator, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Player Camera Target Rotation");

	Params::BP_FLIB_Gameplay_C_Set_Player_Camera_Target_Rotation Parms{};

	Parms.Target = Target;
	Parms.Length = Length;
	Parms.InterpSeconds = InterpSeconds;
	Parms.OffsetRotator = std::move(OffsetRotator);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Player Teleport And Camera Reset
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         CameraRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   CameraInterpSeconds                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CameraRelativeRotation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Player_Teleport_And_Camera_Reset(class AActor* Actor, const struct FRotator& CameraRotation, float CameraInterpSeconds, bool CameraRelativeRotation, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Player Teleport And Camera Reset");

	Params::BP_FLIB_Gameplay_C_Player_Teleport_And_Camera_Reset Parms{};

	Parms.Actor = Actor;
	Parms.CameraRotation = std::move(CameraRotation);
	Parms.CameraInterpSeconds = CameraInterpSeconds;
	Parms.CameraRelativeRotation = CameraRelativeRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Player Condition Riding On Horse
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Player_Condition_Riding_On_Horse(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Player Condition Riding On Horse");

	Params::BP_FLIB_Gameplay_C_Set_Player_Condition_Riding_On_Horse Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.On Begin Gimmick
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   JackCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreLookAt                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreFootIK                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreFieldActionControl                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGuestNPCHiddenControl                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::On_Begin_Gimmick(class AJackCharacter* JackCharacter, bool bIgnoreLookAt, bool bIgnoreFootIK, bool bIgnoreFieldActionControl, bool bGuestNPCHiddenControl, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "On Begin Gimmick");

	Params::BP_FLIB_Gameplay_C_On_Begin_Gimmick Parms{};

	Parms.JackCharacter = JackCharacter;
	Parms.bIgnoreLookAt = bIgnoreLookAt;
	Parms.bIgnoreFootIK = bIgnoreFootIK;
	Parms.bIgnoreFieldActionControl = bIgnoreFieldActionControl;
	Parms.bGuestNPCHiddenControl = bGuestNPCHiddenControl;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.On End Gimmick
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   JackCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIgnoreLookAt                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreFootIK                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIgnoreFieldActionControl                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGuestNPCHiddenControl                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::On_End_Gimmick(class AJackCharacter* JackCharacter, bool bIgnoreLookAt, bool bIgnoreFootIK, bool bIgnoreFieldActionControl, bool bGuestNPCHiddenControl, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "On End Gimmick");

	Params::BP_FLIB_Gameplay_C_On_End_Gimmick Parms{};

	Parms.JackCharacter = JackCharacter;
	Parms.bIgnoreLookAt = bIgnoreLookAt;
	Parms.bIgnoreFootIK = bIgnoreFootIK;
	Parms.bIgnoreFieldActionControl = bIgnoreFieldActionControl;
	Parms.bGuestNPCHiddenControl = bGuestNPCHiddenControl;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartEventPlayerSetting
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EventWrapper                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartEventPlayerSetting(bool EventWrapper, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartEventPlayerSetting");

	Params::BP_FLIB_Gameplay_C_StartEventPlayerSetting Parms{};

	Parms.EventWrapper = EventWrapper;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.EndEventPlayerSetting
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EventWrapper                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::EndEventPlayerSetting(bool EventWrapper, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "EndEventPlayerSetting");

	Params::BP_FLIB_Gameplay_C_EndEventPlayerSetting Parms{};

	Parms.EventWrapper = EventWrapper;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Character Teleport
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Character_Teleport(class AJackCharacter* Target, class AActor* Actor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Character Teleport");

	Params::BP_FLIB_Gameplay_C_Character_Teleport Parms{};

	Parms.Target = Target;
	Parms.Actor = Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartMessagePlayerSettings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartMessagePlayerSettings(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartMessagePlayerSettings");

	Params::BP_FLIB_Gameplay_C_StartMessagePlayerSettings Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.EndMessagePlayerSettings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::EndMessagePlayerSettings(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "EndMessagePlayerSettings");

	Params::BP_FLIB_Gameplay_C_EndMessagePlayerSettings Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetCharacterMaxSpeedType
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackCharacterMovementMaxSpeed          MaxSpeedType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetCharacterMaxSpeedType(class AActor* Actor, EJackCharacterMovementMaxSpeed MaxSpeedType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetCharacterMaxSpeedType");

	Params::BP_FLIB_Gameplay_C_SetCharacterMaxSpeedType Parms{};

	Parms.Actor = Actor;
	Parms.MaxSpeedType = MaxSpeedType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Attach Prop To Player
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PropName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Attach_Prop_To_Player(class FName PropName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Attach Prop To Player");

	Params::BP_FLIB_Gameplay_C_Attach_Prop_To_Player Parms{};

	Parms.PropName = PropName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Detach Prop From Player
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PropName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Detach_Prop_From_Player(class FName PropName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Detach Prop From Player");

	Params::BP_FLIB_Gameplay_C_Detach_Prop_From_Player Parms{};

	Parms.PropName = PropName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetHiddenCharacterWeapon
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetHiddenCharacterWeapon(class AJackCharacter* Character, bool NewHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetHiddenCharacterWeapon");

	Params::BP_FLIB_Gameplay_C_SetHiddenCharacterWeapon Parms{};

	Parms.Character = Character;
	Parms.NewHidden = NewHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetHiddenCharacterWeaponAccessary
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetHiddenCharacterWeaponAccessary(class AJackCharacter* Character, bool NewHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetHiddenCharacterWeaponAccessary");

	Params::BP_FLIB_Gameplay_C_SetHiddenCharacterWeaponAccessary Parms{};

	Parms.Character = Character;
	Parms.NewHidden = NewHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetHiddenPlayerWeapon
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetHiddenPlayerWeapon(bool NewHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetHiddenPlayerWeapon");

	Params::BP_FLIB_Gameplay_C_SetHiddenPlayerWeapon Parms{};

	Parms.NewHidden = NewHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetHiddenPlayerWeaponAccessary
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetHiddenPlayerWeaponAccessary(bool NewHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetHiddenPlayerWeaponAccessary");

	Params::BP_FLIB_Gameplay_C_SetHiddenPlayerWeaponAccessary Parms{};

	Parms.NewHidden = NewHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Time Color Blend
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FLinearColor>             FineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FLinearColor>             CloudyColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   CloudyRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     BlendedColor                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Get_Time_Color_Blend(TArray<struct FLinearColor>& FineColor, TArray<struct FLinearColor>& CloudyColor, float CloudyRate, int32 Time, class UObject* WorldContext, class UObject* __WorldContext, struct FLinearColor* BlendedColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Time Color Blend");

	Params::BP_FLIB_Gameplay_C_Get_Time_Color_Blend Parms{};

	Parms.FineColor = std::move(FineColor);
	Parms.CloudyColor = std::move(CloudyColor);
	Parms.CloudyRate = CloudyRate;
	Parms.Time = Time;
	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	FineColor = std::move(Parms.FineColor);
	CloudyColor = std::move(Parms.CloudyColor);

	if (BlendedColor != nullptr)
		*BlendedColor = std::move(Parms.BlendedColor);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Time Float Blend
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<float>                           Fine                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<float>                           Cloudy                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                                   ClodyRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendedColor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Get_Time_Float_Blend(TArray<float>& Fine, TArray<float>& Cloudy, float ClodyRate, int32 Time, class UObject* WorldContext, class UObject* __WorldContext, float* BlendedColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Time Float Blend");

	Params::BP_FLIB_Gameplay_C_Get_Time_Float_Blend Parms{};

	Parms.Fine = std::move(Fine);
	Parms.Cloudy = std::move(Cloudy);
	Parms.ClodyRate = ClodyRate;
	Parms.Time = Time;
	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Fine = std::move(Parms.Fine);
	Cloudy = std::move(Parms.Cloudy);

	if (BlendedColor != nullptr)
		*BlendedColor = Parms.BlendedColor;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Day Night
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Day_Night(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Day Night");

	Params::BP_FLIB_Gameplay_C_Set_Day_Night Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Is Can Interrupt
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanInterrupt                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::Is_Can_Interrupt(class UObject* __WorldContext, bool* CanInterrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Is Can Interrupt");

	Params::BP_FLIB_Gameplay_C_Is_Can_Interrupt Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CanInterrupt != nullptr)
		*CanInterrupt = Parms.CanInterrupt;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.All Door Close
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::All_Door_Close(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "All Door Close");

	Params::BP_FLIB_Gameplay_C_All_Door_Close Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartDayNightPlayerSettings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartDayNightPlayerSettings(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartDayNightPlayerSettings");

	Params::BP_FLIB_Gameplay_C_StartDayNightPlayerSettings Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.EndDayNightPlayerSettings
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::EndDayNightPlayerSettings(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "EndDayNightPlayerSettings");

	Params::BP_FLIB_Gameplay_C_EndDayNightPlayerSettings Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GatPlayerCoordinate
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Coordinate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GatPlayerCoordinate(class UObject* __WorldContext, class FName* Coordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GatPlayerCoordinate");

	Params::BP_FLIB_Gameplay_C_GatPlayerCoordinate Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Coordinate != nullptr)
		*Coordinate = Parms.Coordinate;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Npc From Unique ID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_NPCList                 UniqueID                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AJackScheduledNPC*                NPC                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Get_Npc_From_Unique_ID(const struct FJackLDT_NPCList& UniqueID, class UObject* __WorldContext, class AJackScheduledNPC** NPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Npc From Unique ID");

	Params::BP_FLIB_Gameplay_C_Get_Npc_From_Unique_ID Parms{};

	Parms.UniqueID = std::move(UniqueID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NPC != nullptr)
		*NPC = Parms.NPC;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Fog Visible
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AtmosphericFog                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HeightFog                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Fog_Visible(class FName LevelName, bool AtmosphericFog, bool HeightFog, bool Visible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Fog Visible");

	Params::BP_FLIB_Gameplay_C_Set_Fog_Visible Parms{};

	Parms.LevelName = LevelName;
	Parms.AtmosphericFog = AtmosphericFog;
	Parms.HeightFog = HeightFog;
	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Is Player Riding on Vehicle
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player_Riding                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::Is_Player_Riding_on_Vehicle(class UObject* __WorldContext, bool* Player_Riding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Is Player Riding on Vehicle");

	Params::BP_FLIB_Gameplay_C_Is_Player_Riding_on_Vehicle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Player_Riding != nullptr)
		*Player_Riding = Parms.Player_Riding;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.EndEventPlayerSettingCore
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EventWrapper                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bKeepPossessPlayerControl                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::EndEventPlayerSettingCore(bool EventWrapper, bool bKeepPossessPlayerControl, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "EndEventPlayerSettingCore");

	Params::BP_FLIB_Gameplay_C_EndEventPlayerSettingCore Parms{};

	Parms.EventWrapper = EventWrapper;
	Parms.bKeepPossessPlayerControl = bKeepPossessPlayerControl;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartTalkToEventPlayerSetting
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartTalkToEventPlayerSetting(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartTalkToEventPlayerSetting");

	Params::BP_FLIB_Gameplay_C_StartTalkToEventPlayerSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.PlayerPartyFullRecover
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ClearOddEffect_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::PlayerPartyFullRecover(bool ClearOddEffect_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "PlayerPartyFullRecover");

	Params::BP_FLIB_Gameplay_C_PlayerPartyFullRecover Parms{};

	Parms.ClearOddEffect_0 = ClearOddEffect_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.AllDeadFullRecover
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::AllDeadFullRecover(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "AllDeadFullRecover");

	Params::BP_FLIB_Gameplay_C_AllDeadFullRecover Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Actor In CS Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Actor                                                  (Parm, OutParm, ZeroConstructor)

void UBP_FLIB_Gameplay_C::Get_Actor_In_CS_Level(class UObject* __WorldContext, TArray<class AActor*>* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Actor In CS Level");

	Params::BP_FLIB_Gameplay_C_Get_Actor_In_CS_Level Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = std::move(Parms.Actor);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsCurrentMapRemainOrb
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRemain                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsCurrentMapRemainOrb(class UObject* __WorldContext, bool* bRemain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsCurrentMapRemainOrb");

	Params::BP_FLIB_Gameplay_C_IsCurrentMapRemainOrb Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bRemain != nullptr)
		*bRemain = Parms.bRemain;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.All Door Set Auto Close Enable that is Opened By Player
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoCloseEnable                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::All_Door_Set_Auto_Close_Enable_that_is_Opened_By_Player(bool AutoCloseEnable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "All Door Set Auto Close Enable that is Opened By Player");

	Params::BP_FLIB_Gameplay_C_All_Door_Set_Auto_Close_Enable_that_is_Opened_By_Player Parms{};

	Parms.AutoCloseEnable = AutoCloseEnable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Hidden Renkei Character Setting
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MartinaDevilMode                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::Set_Hidden_Renkei_Character_Setting(class UObject* __WorldContext, bool* MartinaDevilMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Hidden Renkei Character Setting");

	Params::BP_FLIB_Gameplay_C_Set_Hidden_Renkei_Character_Setting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MartinaDevilMode != nullptr)
		*MartinaDevilMode = Parms.MartinaDevilMode;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CheckCurrentMapTown
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTown                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::CheckCurrentMapTown(class UObject* __WorldContext, bool* bTown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CheckCurrentMapTown");

	Params::BP_FLIB_Gameplay_C_CheckCurrentMapTown Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bTown != nullptr)
		*bTown = Parms.bTown;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.AllActorChangeScenarioFlag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_GameFlagDataScenario    ScenarioFlag                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::AllActorChangeScenarioFlag(const struct FJackLDT_GameFlagDataScenario& ScenarioFlag, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "AllActorChangeScenarioFlag");

	Params::BP_FLIB_Gameplay_C_AllActorChangeScenarioFlag Parms{};

	Parms.ScenarioFlag = std::move(ScenarioFlag);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.OpenTitle
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::OpenTitle(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "OpenTitle");

	Params::BP_FLIB_Gameplay_C_OpenTitle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Get Actor In Renkei Level
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Actor                                                  (Parm, OutParm, ZeroConstructor)

void UBP_FLIB_Gameplay_C::Get_Actor_In_Renkei_Level(class UObject* __WorldContext, TArray<class AActor*>* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Get Actor In Renkei Level");

	Params::BP_FLIB_Gameplay_C_Get_Actor_In_Renkei_Level Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = std::move(Parms.Actor);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.RemoteEventByLevel
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::RemoteEventByLevel(class FName EventName, class FName LevelName, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "RemoteEventByLevel");

	Params::BP_FLIB_Gameplay_C_RemoteEventByLevel Parms{};

	Parms.EventName = EventName;
	Parms.LevelName = LevelName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.RemoteEventByLevels
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     LevelNames                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::RemoteEventByLevels(class FName EventName, TArray<class FName>& LevelNames, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "RemoteEventByLevels");

	Params::BP_FLIB_Gameplay_C_RemoteEventByLevels Parms{};

	Parms.EventName = EventName;
	Parms.LevelNames = std::move(LevelNames);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LevelNames = std::move(Parms.LevelNames);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.ForceEquipmentFromDataTable
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Chara                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackEquipmentRegion                    Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_ItemTable               EquipID                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    EnableFixupCharacterLooks                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::ForceEquipmentFromDataTable(EJackCharacter Chara, EJackEquipmentRegion Region, const struct FJackLDT_ItemTable& EquipID, bool EnableFixupCharacterLooks, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "ForceEquipmentFromDataTable");

	Params::BP_FLIB_Gameplay_C_ForceEquipmentFromDataTable Parms{};

	Parms.Chara = Chara;
	Parms.Region = Region;
	Parms.EquipID = std::move(EquipID);
	Parms.EnableFixupCharacterLooks = EnableFixupCharacterLooks;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetNowWorldTime
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Hour                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minute                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Second                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetNowWorldTime(class UObject* __WorldContext, int32* Hour, int32* Minute, int32* Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetNowWorldTime");

	Params::BP_FLIB_Gameplay_C_GetNowWorldTime Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Hour != nullptr)
		*Hour = Parms.Hour;

	if (Minute != nullptr)
		*Minute = Parms.Minute;

	if (Second != nullptr)
		*Second = Parms.Second;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set LOD By Tag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_LOD_By_Tag(class FName Tag, int32 LOD, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set LOD By Tag");

	Params::BP_FLIB_Gameplay_C_Set_LOD_By_Tag Parms{};

	Parms.Tag = Tag;
	Parms.LOD = LOD;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetPartyTalkData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PriorityTalk                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackPartyTalkDescription        Description                                            (Parm, OutParm)

void UBP_FLIB_Gameplay_C::GetPartyTalkData(EJackCharacter CharacterID, bool PriorityTalk, class UObject* __WorldContext, struct FJackPartyTalkDescription* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetPartyTalkData");

	Params::BP_FLIB_Gameplay_C_GetPartyTalkData Parms{};

	Parms.CharacterID = CharacterID;
	Parms.PriorityTalk = PriorityTalk;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsMapRemainOrb
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRemain                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsMapRemainOrb(class FName MapId, class UObject* __WorldContext, bool* IsRemain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsMapRemainOrb");

	Params::BP_FLIB_Gameplay_C_IsMapRemainOrb Parms{};

	Parms.MapId = MapId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsRemain != nullptr)
		*IsRemain = Parms.IsRemain;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetMapOrbFlagName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             FlagName                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetMapOrbFlagName(class FName MapId, class UObject* __WorldContext, class FName* FlagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetMapOrbFlagName");

	Params::BP_FLIB_Gameplay_C_GetMapOrbFlagName Parms{};

	Parms.MapId = MapId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FlagName != nullptr)
		*FlagName = Parms.FlagName;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetPlayerYumeNoNaka
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetPlayerYumeNoNaka(bool On, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetPlayerYumeNoNaka");

	Params::BP_FLIB_Gameplay_C_SetPlayerYumeNoNaka Parms{};

	Parms.On = On;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CalcPlayerMovePosSceneComponentAway
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::CalcPlayerMovePosSceneComponentAway(class USceneComponent* NewParam, float ReturnDistance, class UObject* __WorldContext, struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CalcPlayerMovePosSceneComponentAway");

	Params::BP_FLIB_Gameplay_C_CalcPlayerMovePosSceneComponentAway Parms{};

	Parms.NewParam = NewParam;
	Parms.ReturnDistance = ReturnDistance;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CheckMedalExchangeFirstContact
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackMedal_Shop                         MedalShopType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_MedalExchangeFirstContact          NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::CheckMedalExchangeFirstContact(EJackMedal_Shop MedalShopType, class UObject* __WorldContext, ENUM_MedalExchangeFirstContact* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CheckMedalExchangeFirstContact");

	Params::BP_FLIB_Gameplay_C_CheckMedalExchangeFirstContact Parms{};

	Parms.MedalShopType = MedalShopType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.OnFlagMedalExchangeFirstContact
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackMedal_Shop                         MedalShopType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::OnFlagMedalExchangeFirstContact(EJackMedal_Shop MedalShopType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "OnFlagMedalExchangeFirstContact");

	Params::BP_FLIB_Gameplay_C_OnFlagMedalExchangeFirstContact Parms{};

	Parms.MedalShopType = MedalShopType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetLevelVisible
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     LevelNames                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RetVisible                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::SetLevelVisible(TArray<class FName>& LevelNames, bool Visible, class UObject* __WorldContext, bool* RetVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetLevelVisible");

	Params::BP_FLIB_Gameplay_C_SetLevelVisible Parms{};

	Parms.LevelNames = std::move(LevelNames);
	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LevelNames = std::move(Parms.LevelNames);

	if (RetVisible != nullptr)
		*RetVisible = Parms.RetVisible;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetItemCount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_ItemTable               ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    IgnoreEquip                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetItemCount(const struct FJackLDT_ItemTable& ItemID, bool IgnoreEquip, class UObject* __WorldContext, int32* ItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetItemCount");

	Params::BP_FLIB_Gameplay_C_GetItemCount Parms{};

	Parms.ItemID = std::move(ItemID);
	Parms.IgnoreEquip = IgnoreEquip;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemCount != nullptr)
		*ItemCount = Parms.ItemCount;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsEquippedItem
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          CharaType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_ItemTable               ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsEquippedItem(EJackCharacter CharaType, const struct FJackLDT_ItemTable& ItemID, class UObject* __WorldContext, bool* Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsEquippedItem");

	Params::BP_FLIB_Gameplay_C_IsEquippedItem Parms{};

	Parms.CharaType = CharaType;
	Parms.ItemID = std::move(ItemID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Equipped != nullptr)
		*Equipped = Parms.Equipped;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetRuraCondition
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetRuraCondition(bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetRuraCondition");

	Params::BP_FLIB_Gameplay_C_SetRuraCondition Parms{};

	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsAcquiredActiveTokugis
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     Tokugis                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    AndCheck                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Acquired                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsAcquiredActiveTokugis(EJackCharacter Character, TArray<class FName>& Tokugis, bool AndCheck, class UObject* __WorldContext, bool* Acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsAcquiredActiveTokugis");

	Params::BP_FLIB_Gameplay_C_IsAcquiredActiveTokugis Parms{};

	Parms.Character = Character;
	Parms.Tokugis = std::move(Tokugis);
	Parms.AndCheck = AndCheck;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Tokugis = std::move(Parms.Tokugis);

	if (Acquired != nullptr)
		*Acquired = Parms.Acquired;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CheckCurrentMapRoom
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RoomMap                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::CheckCurrentMapRoom(class UObject* __WorldContext, bool* RoomMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CheckCurrentMapRoom");

	Params::BP_FLIB_Gameplay_C_CheckCurrentMapRoom Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RoomMap != nullptr)
		*RoomMap = Parms.RoomMap;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CheckCurrentMapConditionID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ConditionID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::CheckCurrentMapConditionID(class FName ConditionID, class UObject* __WorldContext, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CheckCurrentMapConditionID");

	Params::BP_FLIB_Gameplay_C_CheckCurrentMapConditionID Parms{};

	Parms.ConditionID = ConditionID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetCullingDistanceVolumeByTag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetCullingDistanceVolumeByTag(class FName Tag, bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetCullingDistanceVolumeByTag");

	Params::BP_FLIB_Gameplay_C_SetCullingDistanceVolumeByTag Parms{};

	Parms.Tag = Tag;
	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetFogVisibleByTag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetFogVisibleByTag(class FName Tag, bool Visible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetFogVisibleByTag");

	Params::BP_FLIB_Gameplay_C_SetFogVisibleByTag Parms{};

	Parms.Tag = Tag;
	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.ForceEquipmentDetachFromDataTable
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Chara                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_ItemTable               EquipID                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::ForceEquipmentDetachFromDataTable(EJackCharacter Chara, const struct FJackLDT_ItemTable& EquipID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "ForceEquipmentDetachFromDataTable");

	Params::BP_FLIB_Gameplay_C_ForceEquipmentDetachFromDataTable Parms{};

	Parms.Chara = Chara;
	Parms.EquipID = std::move(EquipID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.MakeItemGetMessageTag
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackItem_Bag                           BagType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FJackMessageArgumentData> Tags                                                   (Parm, OutParm, ZeroConstructor)

void UBP_FLIB_Gameplay_C::MakeItemGetMessageTag(class FName ItemID, int32 ItemCount, EJackItem_Bag BagType, class UObject* __WorldContext, TArray<struct FJackMessageArgumentData>* Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "MakeItemGetMessageTag");

	Params::BP_FLIB_Gameplay_C_MakeItemGetMessageTag Parms{};

	Parms.ItemID = ItemID;
	Parms.ItemCount = ItemCount;
	Parms.BagType = BagType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Tags != nullptr)
		*Tags = std::move(Parms.Tags);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetCullingDistanceVolumeForActorByTag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetCullingDistanceVolumeForActorByTag(class FName Tag, bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetCullingDistanceVolumeForActorByTag");

	Params::BP_FLIB_Gameplay_C_SetCullingDistanceVolumeForActorByTag Parms{};

	Parms.Tag = Tag;
	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetFriendCoordinate
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_Coordinate              Coordinate                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    QueryFilterAll                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetFriendCoordinate(EJackCharacter Friend, const struct FJackLDT_Coordinate& Coordinate, bool Reset, bool QueryFilterAll, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetFriendCoordinate");

	Params::BP_FLIB_Gameplay_C_SetFriendCoordinate Parms{};

	Parms.Friend = Friend;
	Parms.Coordinate = std::move(Coordinate);
	Parms.Reset = Reset;
	Parms.QueryFilterAll = QueryFilterAll;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IncreaseSeedCorrectMiryoku
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InIncrease                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::IncreaseSeedCorrectMiryoku(EJackCharacter Character, int32 InIncrease, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IncreaseSeedCorrectMiryoku");

	Params::BP_FLIB_Gameplay_C_IncreaseSeedCorrectMiryoku Parms{};

	Parms.Character = Character;
	Parms.InIncrease = InIncrease;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetCharaTypeFromBagType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackItem_Bag                           InBagType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackCharacter                          CharaType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetCharaTypeFromBagType(EJackItem_Bag InBagType, class UObject* __WorldContext, EJackCharacter* CharaType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetCharaTypeFromBagType");

	Params::BP_FLIB_Gameplay_C_GetCharaTypeFromBagType Parms{};

	Parms.InBagType = InBagType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CharaType != nullptr)
		*CharaType = Parms.CharaType;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetCharaDisplayNameFromCharaType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          CharaType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           DisplayName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetCharaDisplayNameFromCharaType(EJackCharacter CharaType, class UObject* __WorldContext, class FString* DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetCharaDisplayNameFromCharaType");

	Params::BP_FLIB_Gameplay_C_GetCharaDisplayNameFromCharaType Parms{};

	Parms.CharaType = CharaType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DisplayName != nullptr)
		*DisplayName = std::move(Parms.DisplayName);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetPlayerWeaponHiddenForCamp
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetPlayerWeaponHiddenForCamp(bool NewHidden, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetPlayerWeaponHiddenForCamp");

	Params::BP_FLIB_Gameplay_C_SetPlayerWeaponHiddenForCamp Parms{};

	Parms.NewHidden = NewHidden;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetCutsceneHidden
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NPCVisible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetCutsceneHidden(bool NewHidden, bool NPCVisible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetCutsceneHidden");

	Params::BP_FLIB_Gameplay_C_SetCutsceneHidden Parms{};

	Parms.NewHidden = NewHidden;
	Parms.NPCVisible = NPCVisible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CutsceneAfterHiddenOffForEventBattle
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventBattleID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::CutsceneAfterHiddenOffForEventBattle(class FName EventBattleID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CutsceneAfterHiddenOffForEventBattle");

	Params::BP_FLIB_Gameplay_C_CutsceneAfterHiddenOffForEventBattle Parms{};

	Parms.EventBattleID = EventBattleID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartEventPlayerSettingIECustom
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EventWrapper                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartEventPlayerSettingIECustom(bool EventWrapper, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartEventPlayerSettingIECustom");

	Params::BP_FLIB_Gameplay_C_StartEventPlayerSettingIECustom Parms{};

	Parms.EventWrapper = EventWrapper;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CheckStartEventPlayerSettingPossess
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::CheckStartEventPlayerSettingPossess(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CheckStartEventPlayerSettingPossess");

	Params::BP_FLIB_Gameplay_C_CheckStartEventPlayerSettingPossess Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CallIFStartCutScene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::CallIFStartCutScene(class FName CSID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CallIFStartCutScene");

	Params::BP_FLIB_Gameplay_C_CallIFStartCutScene Parms{};

	Parms.CSID = CSID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.CallIFEndCutScene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::CallIFEndCutScene(class FName CSID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "CallIFEndCutScene");

	Params::BP_FLIB_Gameplay_C_CallIFEndCutScene Parms{};

	Parms.CSID = CSID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.AllActorChangeSystemFlag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::AllActorChangeSystemFlag(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "AllActorChangeSystemFlag");

	Params::BP_FLIB_Gameplay_C_AllActorChangeSystemFlag Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetVisibleLightByTag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetVisibleLightByTag(class FName Tag, bool Visible, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetVisibleLightByTag");

	Params::BP_FLIB_Gameplay_C_SetVisibleLightByTag Parms{};

	Parms.Tag = Tag;
	Parms.Visible = Visible;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.TalkResurrectionFriend
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TextID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::TalkResurrectionFriend(class FName TextID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "TalkResurrectionFriend");

	Params::BP_FLIB_Gameplay_C_TalkResurrectionFriend Parms{};

	Parms.TextID = TextID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SetCutsceneTextureSetting
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HighQualityTextureTag                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LoadWaitTextureTag                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   AddActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SetCutsceneTextureSetting(class FName HighQualityTextureTag, class FName LoadWaitTextureTag, TArray<class AActor*>& AddActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SetCutsceneTextureSetting");

	Params::BP_FLIB_Gameplay_C_SetCutsceneTextureSetting Parms{};

	Parms.HighQualityTextureTag = HighQualityTextureTag;
	Parms.LoadWaitTextureTag = LoadWaitTextureTag;
	Parms.AddActor = std::move(AddActor);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	AddActor = std::move(Parms.AddActor);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartEventPlayerSettingIECustom_FromMapJump
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EventWrapper                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartEventPlayerSettingIECustom_FromMapJump(bool EventWrapper, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartEventPlayerSettingIECustom_FromMapJump");

	Params::BP_FLIB_Gameplay_C_StartEventPlayerSettingIECustom_FromMapJump Parms{};

	Parms.EventWrapper = EventWrapper;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.ClearOddEffect
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::ClearOddEffect(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "ClearOddEffect");

	Params::BP_FLIB_Gameplay_C_ClearOddEffect Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetEquippedItemCount
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          CharaType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_ItemTable               ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetEquippedItemCount(EJackCharacter CharaType, const struct FJackLDT_ItemTable& ItemID, class UObject* __WorldContext, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetEquippedItemCount");

	Params::BP_FLIB_Gameplay_C_GetEquippedItemCount Parms{};

	Parms.CharaType = CharaType;
	Parms.ItemID = std::move(ItemID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.ResetCharacterPhysics
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   TargetChara                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::ResetCharacterPhysics(class AJackCharacter* TargetChara, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "ResetCharacterPhysics");

	Params::BP_FLIB_Gameplay_C_ResetCharacterPhysics Parms{};

	Parms.TargetChara = TargetChara;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SafeDestroyActor
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SafeDestroyActor(class AActor* InActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SafeDestroyActor");

	Params::BP_FLIB_Gameplay_C_SafeDestroyActor Parms{};

	Parms.InActor = InActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.SafeDestroyActors
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   InActors                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::SafeDestroyActors(TArray<class AActor*>& InActors, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "SafeDestroyActors");

	Params::BP_FLIB_Gameplay_C_SafeDestroyActors Parms{};

	Parms.InActors = std::move(InActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InActors = std::move(Parms.InActors);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.Set Visible By Tag
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Collision_Enable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::Set_Visible_By_Tag(class FName Tag, bool Visible, bool Collision_Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "Set Visible By Tag");

	Params::BP_FLIB_Gameplay_C_Set_Visible_By_Tag Parms{};

	Parms.Tag = Tag;
	Parms.Visible = Visible;
	Parms.Collision_Enable = Collision_Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.GetJackPlayerCharacterType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackCharacter                          Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::GetJackPlayerCharacterType(class UObject* __WorldContext, EJackCharacter* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "GetJackPlayerCharacterType");

	Params::BP_FLIB_Gameplay_C_GetJackPlayerCharacterType Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsEqualJackPlayerCharacterType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsEqualJackPlayerCharacterType(EJackCharacter Type, class UObject* __WorldContext, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsEqualJackPlayerCharacterType");

	Params::BP_FLIB_Gameplay_C_IsEqualJackPlayerCharacterType Parms{};

	Parms.Type = Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.StartNpcTalkPlayerSetting
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::StartNpcTalkPlayerSetting(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "StartNpcTalkPlayerSetting");

	Params::BP_FLIB_Gameplay_C_StartNpcTalkPlayerSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.EndNpcTalkPlayerSetting
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::EndNpcTalkPlayerSetting(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "EndNpcTalkPlayerSetting");

	Params::BP_FLIB_Gameplay_C_EndNpcTalkPlayerSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.IsAcquiredJumons
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     Jumons                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                                    AndCheck                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Acquired                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Gameplay_C::IsAcquiredJumons(EJackCharacter Character, TArray<class FName>& Jumons, bool AndCheck, class UObject* __WorldContext, bool* Acquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "IsAcquiredJumons");

	Params::BP_FLIB_Gameplay_C_IsAcquiredJumons Parms{};

	Parms.Character = Character;
	Parms.Jumons = std::move(Jumons);
	Parms.AndCheck = AndCheck;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Jumons = std::move(Parms.Jumons);

	if (Acquired != nullptr)
		*Acquired = Parms.Acquired;
}


// Function BP_FLIB_Gameplay.BP_FLIB_Gameplay_C.OpenTitleTensei
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Tensei2D                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Gameplay_C::OpenTitleTensei(bool Tensei2D, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Gameplay_C", "OpenTitleTensei");

	Params::BP_FLIB_Gameplay_C_OpenTitleTensei Parms{};

	Parms.Tensei2D = Tensei2D;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}


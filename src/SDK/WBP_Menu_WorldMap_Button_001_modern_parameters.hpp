#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_Button_001_modern

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern
// 0x0058 (0x0058 - 0x0000)
struct WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestsWorldMapState_ReturnValue2;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasSekaitizu_Result;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoukenGuideVisible_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern) == 0x000058, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_GetUMGManager_ReturnValue) == 0x000048, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_TestsWorldMapState_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_TestsWorldMapState_ReturnValue2) == 0x000051, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_TestsWorldMapState_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_HasSekaitizu_Result) == 0x000053, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_HasSekaitizu_Result' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern, CallFunc_GetBoukenGuideVisible_ReturnValue) == 0x000054, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_Button_001_modern::CallFunc_GetBoukenGuideVisible_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_Button_001_modern_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_Tick");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_Tick) == 0x000040, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_Tick");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.UpdateZoomModeCaption
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption final
{
public:
	bool                                          CallFunc_TestsWorldMapState_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption) == 0x000001, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption, CallFunc_TestsWorldMapState_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_UpdateZoomModeCaption::CallFunc_TestsWorldMapState_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.BindHandler
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_Button_001_modern_C_BindHandler final
{
public:
	bool                                          bUnbind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Sender, bool bValue, class UObject* Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Sender, bool bValue, class UObject* Payload)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_BindHandler) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_BindHandler");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_BindHandler) == 0x000028, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_BindHandler");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BindHandler, bUnbind) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BindHandler::bUnbind' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BindHandler, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BindHandler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BindHandler, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BindHandler::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.MapSymbolVisibleChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged final
{
public:
	class UObject*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Payload;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapDelegateButtonPayload*       K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged) == 0x000028, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged, Sender) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged::Sender' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged, bVisible) == 0x000008, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged, Payload) == 0x000010, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged::Payload' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged, K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload) == 0x000018, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged::K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_MapSymbolVisibleChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Menu_WorldMap_Button_001_modern.WBP_Menu_WorldMap_Button_001_modern_C.BoukenGuideVisibleChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged final
{
public:
	class UObject*                                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Payload;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGMapDelegateButtonPayload*       K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged");
static_assert(sizeof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged) == 0x000028, "Wrong size on WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged, Sender) == 0x000000, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged::Sender' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged, bVisible) == 0x000008, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged::bVisible' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged, Payload) == 0x000010, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged::Payload' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged, K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload) == 0x000018, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged::K2Node_DynamicCast_AsJack_UMGMap_Delegate_Button_Payload' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_Menu_WorldMap_Button_001_modern_C_BoukenGuideVisibleChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


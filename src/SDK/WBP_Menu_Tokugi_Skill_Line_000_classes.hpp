#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tokugi_Skill_Line_000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_Tokugi_Skill_Line_000.WBP_Menu_Tokugi_Skill_Line_000_C
// 0x0060 (0x0230 - 0x01D0)
class UWBP_Menu_Tokugi_Skill_Line_000_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       In_Out_Low;                                        // 0x01D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x01E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_Out;                                            // 0x01E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle;                                            // 0x01F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           FocusRoot;                                         // 0x01F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x0200(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0208(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayOut;                                          // 0x0214(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timer;                                             // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Facter;                                            // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayIn;                                           // 0x0224(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimerMax;                                          // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSealed;                                           // 0x022C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_Menu_Tokugi_Skill_Line_000(int32 EntryPoint);
	void PlayOutAnim();
	void PlayInAnim(bool bSealed_0);
	void UpdateDisplay();
	void SetScale(float Scale_0);
	void SetPosition(const struct FVector2D& Position_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_Tokugi_Skill_Line_000_C">();
	}
	static class UWBP_Menu_Tokugi_Skill_Line_000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_Tokugi_Skill_Line_000_C>();
	}
};
static_assert(alignof(UWBP_Menu_Tokugi_Skill_Line_000_C) == 0x000008, "Wrong alignment on UWBP_Menu_Tokugi_Skill_Line_000_C");
static_assert(sizeof(UWBP_Menu_Tokugi_Skill_Line_000_C) == 0x000230, "Wrong size on UWBP_Menu_Tokugi_Skill_Line_000_C");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, UberGraphFrame) == 0x0001D0, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, In_Out_Low) == 0x0001D8, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::In_Out_Low' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Default) == 0x0001E0, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Default' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, In_Out) == 0x0001E8, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::In_Out' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Circle) == 0x0001F0, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Circle' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, FocusRoot) == 0x0001F8, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::FocusRoot' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, RootPanel) == 0x000200, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Position) == 0x000208, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Position' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Scale) == 0x000210, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Scale' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, bPlayOut) == 0x000214, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::bPlayOut' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Timer) == 0x000218, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Timer' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Facter) == 0x00021C, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Facter' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, Alpha) == 0x000220, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::Alpha' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, bPlayIn) == 0x000224, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::bPlayIn' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, TimerMax) == 0x000228, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::TimerMax' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Skill_Line_000_C, bSealed) == 0x00022C, "Member 'UWBP_Menu_Tokugi_Skill_Line_000_C::bSealed' has a wrong offset!");

}


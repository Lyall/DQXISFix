#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_UI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_UI.BP_FLIB_UI_C.IntToMultiByteText
// 0x00F0 (0x00F0 - 0x0000)
struct BP_FLIB_UI_C_IntToMultiByteText final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSign;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIgnoreZero;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   MultByteText;                                      // 0x0010(0x0018)(Parm, OutParm)
	bool                                          _isIgnoreZero;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _useSign;                                          // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Res;                                               // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         N;                                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MultiByteNumStrings;                               // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	class FString                                 CallFunc_GetSubstring_ReturnValue2;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_IntToMultiByteText) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_IntToMultiByteText");
static_assert(sizeof(BP_FLIB_UI_C_IntToMultiByteText) == 0x0000F0, "Wrong size on BP_FLIB_UI_C_IntToMultiByteText");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, Num) == 0x000000, "Member 'BP_FLIB_UI_C_IntToMultiByteText::Num' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, UseSign) == 0x000004, "Member 'BP_FLIB_UI_C_IntToMultiByteText::UseSign' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, IsIgnoreZero) == 0x000005, "Member 'BP_FLIB_UI_C_IntToMultiByteText::IsIgnoreZero' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, __WorldContext) == 0x000008, "Member 'BP_FLIB_UI_C_IntToMultiByteText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, MultByteText) == 0x000010, "Member 'BP_FLIB_UI_C_IntToMultiByteText::MultByteText' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, _isIgnoreZero) == 0x000028, "Member 'BP_FLIB_UI_C_IntToMultiByteText::_isIgnoreZero' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, _useSign) == 0x000029, "Member 'BP_FLIB_UI_C_IntToMultiByteText::_useSign' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, Res) == 0x000030, "Member 'BP_FLIB_UI_C_IntToMultiByteText::Res' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, N) == 0x000040, "Member 'BP_FLIB_UI_C_IntToMultiByteText::N' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, MultiByteNumStrings) == 0x000048, "Member 'BP_FLIB_UI_C_IntToMultiByteText::MultiByteNumStrings' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_GetSubstring_ReturnValue) == 0x000060, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Concat_StrStr_ReturnValue2) == 0x000088, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Concat_StrStr_ReturnValue3) == 0x000098, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Divide_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Percent_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_GetSubstring_ReturnValue2) == 0x0000D0, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_GetSubstring_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_IntToMultiByteText, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000E0, "Member 'BP_FLIB_UI_C_IntToMultiByteText::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.GetEnableTextColor
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_UI_C_GetEnableTextColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_GetEnableTextColor) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_GetEnableTextColor");
static_assert(sizeof(BP_FLIB_UI_C_GetEnableTextColor) == 0x000028, "Wrong size on BP_FLIB_UI_C_GetEnableTextColor");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextColor, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_GetEnableTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextColor, NewParam) == 0x000008, "Member 'BP_FLIB_UI_C_GetEnableTextColor::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_FLIB_UI_C_GetEnableTextColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.GetDisableTextColor
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_UI_C_GetDisableTextColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_GetDisableTextColor) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_GetDisableTextColor");
static_assert(sizeof(BP_FLIB_UI_C_GetDisableTextColor) == 0x000028, "Wrong size on BP_FLIB_UI_C_GetDisableTextColor");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableTextColor, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_GetDisableTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableTextColor, NewParam) == 0x000008, "Member 'BP_FLIB_UI_C_GetDisableTextColor::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableTextColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_FLIB_UI_C_GetDisableTextColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.GetEnableTextShadowColor
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_UI_C_GetEnableTextShadowColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_GetEnableTextShadowColor) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_GetEnableTextShadowColor");
static_assert(sizeof(BP_FLIB_UI_C_GetEnableTextShadowColor) == 0x000028, "Wrong size on BP_FLIB_UI_C_GetEnableTextShadowColor");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextShadowColor, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_GetEnableTextShadowColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextShadowColor, NewParam) == 0x000008, "Member 'BP_FLIB_UI_C_GetEnableTextShadowColor::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetEnableTextShadowColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_FLIB_UI_C_GetEnableTextShadowColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.GetDisableShadowTextColor
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_UI_C_GetDisableShadowTextColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewParam;                                          // 0x0008(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_GetDisableShadowTextColor) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_GetDisableShadowTextColor");
static_assert(sizeof(BP_FLIB_UI_C_GetDisableShadowTextColor) == 0x000028, "Wrong size on BP_FLIB_UI_C_GetDisableShadowTextColor");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableShadowTextColor, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_GetDisableShadowTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableShadowTextColor, NewParam) == 0x000008, "Member 'BP_FLIB_UI_C_GetDisableShadowTextColor::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_GetDisableShadowTextColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_FLIB_UI_C_GetDisableShadowTextColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.OpenGoldWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_UI_C_OpenGoldWindow final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_OpenGoldWindow) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_OpenGoldWindow");
static_assert(sizeof(BP_FLIB_UI_C_OpenGoldWindow) == 0x000010, "Wrong size on BP_FLIB_UI_C_OpenGoldWindow");
static_assert(offsetof(BP_FLIB_UI_C_OpenGoldWindow, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_OpenGoldWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_OpenGoldWindow, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_FLIB_UI_C_OpenGoldWindow::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.UpdateGoldWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_UI_C_UpdateGoldWindow final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_UpdateGoldWindow) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_UpdateGoldWindow");
static_assert(sizeof(BP_FLIB_UI_C_UpdateGoldWindow) == 0x000010, "Wrong size on BP_FLIB_UI_C_UpdateGoldWindow");
static_assert(offsetof(BP_FLIB_UI_C_UpdateGoldWindow, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_UpdateGoldWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_UpdateGoldWindow, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_FLIB_UI_C_UpdateGoldWindow::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.CloseGoldWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_UI_C_CloseGoldWindow final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_CloseGoldWindow) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_CloseGoldWindow");
static_assert(sizeof(BP_FLIB_UI_C_CloseGoldWindow) == 0x000010, "Wrong size on BP_FLIB_UI_C_CloseGoldWindow");
static_assert(offsetof(BP_FLIB_UI_C_CloseGoldWindow, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_CloseGoldWindow::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_CloseGoldWindow, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_FLIB_UI_C_CloseGoldWindow::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.CloseHudStatus
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_UI_C_CloseHudStatus final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_UI_C_CloseHudStatus) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_CloseHudStatus");
static_assert(sizeof(BP_FLIB_UI_C_CloseHudStatus) == 0x000010, "Wrong size on BP_FLIB_UI_C_CloseHudStatus");
static_assert(offsetof(BP_FLIB_UI_C_CloseHudStatus, __WorldContext) == 0x000000, "Member 'BP_FLIB_UI_C_CloseHudStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_CloseHudStatus, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_FLIB_UI_C_CloseHudStatus::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_UI.BP_FLIB_UI_C.AdjustMenuWindowWidth
// 0x0250 (0x0250 - 0x0000)
struct BP_FLIB_UI_C_AdjustMenuWindowWidth final
{
public:
	TArray<class UJackUMGItemBase*>               InLeftMenuItemList;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UJackUMGItemBase*>               InRightMenuItemList;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UWidget*                                InRootWidget;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                InBackground;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                InBarImage;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftMargin;                                        // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CenterSpace;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightMargin;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludeLeftMarginToMenuPos;                       // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightMenuItemTextMaxSize;                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftMenuItemTextMaxSize;                           // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             SampleTextBlock;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackUMGItemBase*>               RightMenuItemList;                                 // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UJackUMGItemBase*>               LeftMenuItemList;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue3;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x00AC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue2;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue3;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue2;                     // 0x00D0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue3;                     // 0x00D8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CallFunc_FindChildTextBlock_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue4;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_Array_Get_Item2;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue4;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0144(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       CallFunc_Array_Get_Item3;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTextId_ReturnValue;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMenuTextId_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MeasureText_ReturnValue;                  // 0x01A0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X5;                         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue4;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue5;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue6;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       CallFunc_Array_Get_Item4;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01D0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue2;                   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTextId_ReturnValue2;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue7;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetMenuTextId_ReturnValue2;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue8;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetText_ReturnValue2;                     // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue9;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MeasureText_ReturnValue2;                 // 0x0214(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue10;             // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X6;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y6;                         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue3;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue2;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0230(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x0238(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue4;                // 0x0240(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_UI_C_AdjustMenuWindowWidth) == 0x000008, "Wrong alignment on BP_FLIB_UI_C_AdjustMenuWindowWidth");
static_assert(sizeof(BP_FLIB_UI_C_AdjustMenuWindowWidth) == 0x000250, "Wrong size on BP_FLIB_UI_C_AdjustMenuWindowWidth");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, InLeftMenuItemList) == 0x000000, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::InLeftMenuItemList' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, InRightMenuItemList) == 0x000010, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::InRightMenuItemList' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, InRootWidget) == 0x000020, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::InRootWidget' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, InBackground) == 0x000028, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::InBackground' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, InBarImage) == 0x000030, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::InBarImage' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, LeftMargin) == 0x000038, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::LeftMargin' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CenterSpace) == 0x00003C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CenterSpace' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, RightMargin) == 0x000040, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::RightMargin' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, bIncludeLeftMarginToMenuPos) == 0x000044, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::bIncludeLeftMarginToMenuPos' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, __WorldContext) == 0x000048, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, RightMenuItemTextMaxSize) == 0x000050, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::RightMenuItemTextMaxSize' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, LeftMenuItemTextMaxSize) == 0x000054, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::LeftMenuItemTextMaxSize' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, SampleTextBlock) == 0x000058, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::SampleTextBlock' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, RightMenuItemList) == 0x000060, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::RightMenuItemList' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, LeftMenuItemList) == 0x000070, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::LeftMenuItemList' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetUMGManager_ReturnValue) == 0x000080, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000088, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeLiteralFloat_ReturnValue2) == 0x00008C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeLiteralFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeLiteralFloat_ReturnValue3) == 0x000090, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeLiteralFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SelectFloat_ReturnValue2) == 0x00009C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SelectFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_IsValid_ReturnValue2) == 0x0000A8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetSize_ReturnValue) == 0x0000AC, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X) == 0x0000B4, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y) == 0x0000B8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SlotAsCanvasSlot_ReturnValue2) == 0x0000C0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SlotAsCanvasSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SlotAsCanvasSlot_ReturnValue3) == 0x0000C8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SlotAsCanvasSlot_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetSize_ReturnValue2) == 0x0000D0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetSize_ReturnValue3) == 0x0000D8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetSize_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X2) == 0x0000E0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y2) == 0x0000E4, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X3) == 0x0000E8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y3) == 0x0000EC, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_FindChildTextBlock_ReturnValue) == 0x0000F8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_FindChildTextBlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Array_Index_Variable) == 0x000108, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Array_Index_Variable2) == 0x00010C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Loop_Counter_Variable2) == 0x000110, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_IntInt_ReturnValue2) == 0x000114, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Array_Index_Variable3) == 0x000118, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, Temp_int_Loop_Counter_Variable3) == 0x00011C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_IntInt_ReturnValue3) == 0x000120, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeLiteralFloat_ReturnValue4) == 0x000124, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeLiteralFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Get_Item2) == 0x000128, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SlotAsCanvasSlot_ReturnValue4) == 0x000138, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SlotAsCanvasSlot_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetPosition_ReturnValue) == 0x000144, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X4) == 0x00014C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y4) == 0x000150, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue) == 0x000154, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Get_Item3) == 0x000158, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000160, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_IsVisible_ReturnValue) == 0x000164, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue3) == 0x000168, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetTextId_ReturnValue) == 0x000170, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetTextId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Length_ReturnValue2) == 0x000178, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetMenuTextId_ReturnValue) == 0x000180, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetMenuTextId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Less_IntInt_ReturnValue2) == 0x000188, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetText_ReturnValue) == 0x000190, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MeasureText_ReturnValue) == 0x0001A0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MeasureText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Length_ReturnValue3) == 0x0001A8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X5) == 0x0001AC, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y5) == 0x0001B0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B4, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_FMax_ReturnValue) == 0x0001B8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue4) == 0x0001BC, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue5) == 0x0001C0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue6) == 0x0001C4, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Get_Item4) == 0x0001C8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeVector2D_ReturnValue) == 0x0001D0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_IsVisible_ReturnValue2) == 0x0001D8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_IsVisible_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetTextId_ReturnValue2) == 0x0001E0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetTextId_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue7) == 0x0001E8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetMenuTextId_ReturnValue2) == 0x0001F0, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetMenuTextId_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue8) == 0x0001F8, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_GetText_ReturnValue2) == 0x000200, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_GetText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue9) == 0x000210, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MeasureText_ReturnValue2) == 0x000214, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MeasureText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Add_FloatFloat_ReturnValue10) == 0x00021C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Add_FloatFloat_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_X6) == 0x000220, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_X6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_BreakVector2D_Y6) == 0x000224, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_BreakVector2D_Y6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_SelectFloat_ReturnValue3) == 0x000228, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_SelectFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_FMax_ReturnValue2) == 0x00022C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_FMax_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeVector2D_ReturnValue2) == 0x000230, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeVector2D_ReturnValue3) == 0x000238, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_MakeVector2D_ReturnValue4) == 0x000240, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_MakeVector2D_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Array_Length_ReturnValue4) == 0x000248, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_UI_C_AdjustMenuWindowWidth, CallFunc_Less_IntInt_ReturnValue3) == 0x00024C, "Member 'BP_FLIB_UI_C_AdjustMenuWindowWidth::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ClosetBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_ItemSet_structs.hpp"
#include "BP_ItemGettableObjectBase_classes.hpp"


namespace SDK
{

// DynamicClass BP_ClosetBase.BP_ClosetBase_C
// 0x05E0 (0x09F8 - 0x0418)
class ABP_ClosetBase_C final : public ABP_ItemGettableObjectBase_C
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          TriggerBox;                                        // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Closet_Animation_On_Open;                          // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Closet_Animation_On_Open_Empty_;                   // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Closet_Animation_On_Close;                         // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterAnimMontageNameOnCheck;                   // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterAnimMontageNameOnClose;                   // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJackCharacter*                         Jack_Character;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Item_Gotten;                                       // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemGetEventName;                                  // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AccessEndEventName;                                // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClosetID;                                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGetItemSequenceEnd;                               // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EJackCharacter, class UAnimSequenceBase*> Closet_Animations_On_Open;                         // 0x0498(0x0050)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<EJackCharacter, class UAnimSequenceBase*> Closet_Animations_On_Open_Empty_;                  // 0x04E8(0x0050)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<EJackCharacter, class UAnimSequenceBase*> Closet_Animations_On_Close;                        // 0x0538(0x0050)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x0588(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable;                                // 0x0598(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x05A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable2;                             // 0x05B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable3;                             // 0x05C0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable4;                             // 0x05D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable2;                             // 0x05E0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable5;                             // 0x05E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable3;                             // 0x05F8(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable4;                             // 0x05FD(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable5;                             // 0x0602(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_607[0x1];                                      // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable6;                             // 0x0608(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable6;                             // 0x0618(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable7;                             // 0x0620(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable8;                             // 0x0630(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable9;                             // 0x0635(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_63A[0x6];                                      // 0x063A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_ItemSet>                CallFunc_GetRemainItem_OutRemainItem;              // 0x0640(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	int32                                         CallFunc_GetRemainItem_OutRemainGold;              // 0x0650(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_GetRemainItem_Empty;                      // 0x0654(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable10;                            // 0x0655(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_65A[0x2];                                      // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x065C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable11;                            // 0x0660(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable7;                             // 0x0668(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array;                            // 0x0678(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable12;                            // 0x0688(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable13;                            // 0x0690(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable8;                             // 0x06A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable9;                             // 0x06B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable14;                            // 0x06C0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable15;                            // 0x06C5(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable16;                            // 0x06D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable17;                            // 0x06E0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable2;                               // 0x06E5(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable18;                            // 0x06E6(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6EB[0x5];                                      // 0x06EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable19;                            // 0x06F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable20;                            // 0x0700(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable21;                            // 0x0705(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable22;                            // 0x070A(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable23;                            // 0x070F(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable24;                            // 0x0718(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable25;                            // 0x0728(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_72D[0x3];                                      // 0x072D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0730(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x0738(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0740(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0748(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x074C(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0750(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x07D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x07E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x07E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x07F0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x07F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJackCharacter*                         K2Node_DynamicCast_AsJack_Character;               // 0x0800(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0808(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable10;                            // 0x0810(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable26;                            // 0x0820(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_825[0x3];                                      // 0x0825(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable11;                            // 0x0828(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsItemGotten_ItemGotten;                  // 0x0838(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetClosetAnimationOnOpen_Animation;       // 0x0840(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      CallFunc_GetClosetAnimationOnOpen_Empty__Animation; // 0x0848(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      CallFunc_GetClosetAnimationOnClose_Animation;      // 0x0850(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable12;                            // 0x0860(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable3;                               // 0x0870(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable4;                               // 0x0871(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_872[0x6];                                      // 0x0872(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetForsakeMessageID_FosakeMessageID;      // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_StoreItemSequence_Empty;                  // 0x0880(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item;                           // 0x0881(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_882[0x6];                                      // 0x0882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGoldGetMessageTag_ReturnValue;        // 0x0888(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class FString                                 K2Node_Select2_Default;                            // 0x0898(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item2;                          // 0x08A8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item3;                          // 0x08A9(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8AA[0x6];                                      // 0x08AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select3_Default;                            // 0x08B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 K2Node_Select4_Default;                            // 0x08C0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item4;                          // 0x08D0(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue;        // 0x08E0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue; // 0x08F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2; // 0x0900(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList; // 0x0910(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList2; // 0x0920(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item5;                          // 0x0930(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item6;                          // 0x0940(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue2;       // 0x0950(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue3;       // 0x0960(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList3; // 0x0970(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3; // 0x0980(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList4; // 0x0990(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4; // 0x09A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList5; // 0x09B0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5; // 0x09C0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList6; // 0x09D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6; // 0x09E0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsItemGotten_ItemGotten2;                 // 0x09F0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void ExecuteUbergraph_BP_ClosetBase_0(int32 bpp__EntryPoint__pf);
	void GetClosetAnimation(class UAnimSequenceBase* bpp__DefaultAnimation__pf, TMap<EJackCharacter, class UAnimSequenceBase*>* bpp__AnimationMap__pf, class UAnimSequenceBase** bpp__Animation__pf);
	void GetClosetAnimationOnClose(class UAnimSequenceBase** bpp__Animation__pf);
	void GetClosetAnimationOnOpen(class UAnimSequenceBase** bpp__Animation__pf);
	void GetClosetAnimationOnOpen_Empty_(class UAnimSequenceBase** bpp__Animation__pf);
	class FString OnGenerateDebugInfoString();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_ClosetBase_C">();
	}
	static class ABP_ClosetBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ClosetBase_C>();
	}
};
static_assert(alignof(ABP_ClosetBase_C) == 0x000008, "Wrong alignment on ABP_ClosetBase_C");
static_assert(sizeof(ABP_ClosetBase_C) == 0x0009F8, "Wrong size on ABP_ClosetBase_C");
static_assert(offsetof(ABP_ClosetBase_C, Arrow) == 0x000418, "Member 'ABP_ClosetBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Mesh) == 0x000420, "Member 'ABP_ClosetBase_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, TriggerBox) == 0x000428, "Member 'ABP_ClosetBase_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Billboard) == 0x000430, "Member 'ABP_ClosetBase_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, JackInteractiveActor) == 0x000438, "Member 'ABP_ClosetBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animation_On_Open) == 0x000440, "Member 'ABP_ClosetBase_C::Closet_Animation_On_Open' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animation_On_Open_Empty_) == 0x000448, "Member 'ABP_ClosetBase_C::Closet_Animation_On_Open_Empty_' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animation_On_Close) == 0x000450, "Member 'ABP_ClosetBase_C::Closet_Animation_On_Close' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CharacterAnimMontageNameOnCheck) == 0x000458, "Member 'ABP_ClosetBase_C::CharacterAnimMontageNameOnCheck' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CharacterAnimMontageNameOnClose) == 0x000460, "Member 'ABP_ClosetBase_C::CharacterAnimMontageNameOnClose' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Jack_Character) == 0x000468, "Member 'ABP_ClosetBase_C::Jack_Character' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Item_Gotten) == 0x000470, "Member 'ABP_ClosetBase_C::Item_Gotten' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, ItemGetEventName) == 0x000478, "Member 'ABP_ClosetBase_C::ItemGetEventName' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, AccessEndEventName) == 0x000480, "Member 'ABP_ClosetBase_C::AccessEndEventName' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, ClosetID) == 0x000488, "Member 'ABP_ClosetBase_C::ClosetID' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, bGetItemSequenceEnd) == 0x000490, "Member 'ABP_ClosetBase_C::bGetItemSequenceEnd' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animations_On_Open) == 0x000498, "Member 'ABP_ClosetBase_C::Closet_Animations_On_Open' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animations_On_Open_Empty_) == 0x0004E8, "Member 'ABP_ClosetBase_C::Closet_Animations_On_Open_Empty_' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Closet_Animations_On_Close) == 0x000538, "Member 'ABP_ClosetBase_C::Closet_Animations_On_Close' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable) == 0x000588, "Member 'ABP_ClosetBase_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_bool_Variable) == 0x000598, "Member 'ABP_ClosetBase_C::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable) == 0x0005A0, "Member 'ABP_ClosetBase_C::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable2) == 0x0005B0, "Member 'ABP_ClosetBase_C::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable3) == 0x0005C0, "Member 'ABP_ClosetBase_C::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable4) == 0x0005D0, "Member 'ABP_ClosetBase_C::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable2) == 0x0005E0, "Member 'ABP_ClosetBase_C::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable5) == 0x0005E8, "Member 'ABP_ClosetBase_C::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable3) == 0x0005F8, "Member 'ABP_ClosetBase_C::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable4) == 0x0005FD, "Member 'ABP_ClosetBase_C::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable5) == 0x000602, "Member 'ABP_ClosetBase_C::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable6) == 0x000608, "Member 'ABP_ClosetBase_C::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable6) == 0x000618, "Member 'ABP_ClosetBase_C::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable7) == 0x000620, "Member 'ABP_ClosetBase_C::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable8) == 0x000630, "Member 'ABP_ClosetBase_C::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable9) == 0x000635, "Member 'ABP_ClosetBase_C::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetRemainItem_OutRemainItem) == 0x000640, "Member 'ABP_ClosetBase_C::CallFunc_GetRemainItem_OutRemainItem' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetRemainItem_OutRemainGold) == 0x000650, "Member 'ABP_ClosetBase_C::CallFunc_GetRemainItem_OutRemainGold' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetRemainItem_Empty) == 0x000654, "Member 'ABP_ClosetBase_C::CallFunc_GetRemainItem_Empty' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable10) == 0x000655, "Member 'ABP_ClosetBase_C::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_float_Variable) == 0x00065C, "Member 'ABP_ClosetBase_C::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable11) == 0x000660, "Member 'ABP_ClosetBase_C::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable7) == 0x000668, "Member 'ABP_ClosetBase_C::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_MakeArray_Array) == 0x000678, "Member 'ABP_ClosetBase_C::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable12) == 0x000688, "Member 'ABP_ClosetBase_C::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable13) == 0x000690, "Member 'ABP_ClosetBase_C::Temp_struct_Variable13' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable8) == 0x0006A0, "Member 'ABP_ClosetBase_C::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable9) == 0x0006B0, "Member 'ABP_ClosetBase_C::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable14) == 0x0006C0, "Member 'ABP_ClosetBase_C::Temp_struct_Variable14' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable15) == 0x0006C5, "Member 'ABP_ClosetBase_C::Temp_struct_Variable15' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable16) == 0x0006D0, "Member 'ABP_ClosetBase_C::Temp_struct_Variable16' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable17) == 0x0006E0, "Member 'ABP_ClosetBase_C::Temp_struct_Variable17' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_bool_Variable2) == 0x0006E5, "Member 'ABP_ClosetBase_C::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable18) == 0x0006E6, "Member 'ABP_ClosetBase_C::Temp_struct_Variable18' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable19) == 0x0006F0, "Member 'ABP_ClosetBase_C::Temp_struct_Variable19' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable20) == 0x000700, "Member 'ABP_ClosetBase_C::Temp_struct_Variable20' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable21) == 0x000705, "Member 'ABP_ClosetBase_C::Temp_struct_Variable21' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable22) == 0x00070A, "Member 'ABP_ClosetBase_C::Temp_struct_Variable22' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable23) == 0x00070F, "Member 'ABP_ClosetBase_C::Temp_struct_Variable23' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable24) == 0x000718, "Member 'ABP_ClosetBase_C::Temp_struct_Variable24' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable25) == 0x000728, "Member 'ABP_ClosetBase_C::Temp_struct_Variable25' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000730, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherActor3) == 0x000738, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x000740, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000748, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x00074C, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_SweepResult) == 0x000750, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0007D8, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x0007E0, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherComp) == 0x0007E8, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0007F0, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x0007F8, "Member 'ABP_ClosetBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_DynamicCast_AsJack_Character) == 0x000800, "Member 'ABP_ClosetBase_C::K2Node_DynamicCast_AsJack_Character' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_DynamicCast_bSuccess) == 0x000808, "Member 'ABP_ClosetBase_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable10) == 0x000810, "Member 'ABP_ClosetBase_C::Temp_string_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_struct_Variable26) == 0x000820, "Member 'ABP_ClosetBase_C::Temp_struct_Variable26' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable11) == 0x000828, "Member 'ABP_ClosetBase_C::Temp_string_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_IsItemGotten_ItemGotten) == 0x000838, "Member 'ABP_ClosetBase_C::CallFunc_IsItemGotten_ItemGotten' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetClosetAnimationOnOpen_Animation) == 0x000840, "Member 'ABP_ClosetBase_C::CallFunc_GetClosetAnimationOnOpen_Animation' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetClosetAnimationOnOpen_Empty__Animation) == 0x000848, "Member 'ABP_ClosetBase_C::CallFunc_GetClosetAnimationOnOpen_Empty__Animation' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetClosetAnimationOnClose_Animation) == 0x000850, "Member 'ABP_ClosetBase_C::CallFunc_GetClosetAnimationOnClose_Animation' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_Select_Default) == 0x000858, "Member 'ABP_ClosetBase_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_string_Variable12) == 0x000860, "Member 'ABP_ClosetBase_C::Temp_string_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_bool_Variable3) == 0x000870, "Member 'ABP_ClosetBase_C::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, Temp_bool_Variable4) == 0x000871, "Member 'ABP_ClosetBase_C::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_GetForsakeMessageID_FosakeMessageID) == 0x000878, "Member 'ABP_ClosetBase_C::CallFunc_GetForsakeMessageID_FosakeMessageID' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_StoreItemSequence_Empty) == 0x000880, "Member 'ABP_ClosetBase_C::CallFunc_StoreItemSequence_Empty' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item) == 0x000881, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGoldGetMessageTag_ReturnValue) == 0x000888, "Member 'ABP_ClosetBase_C::CallFunc_MakeGoldGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_Select2_Default) == 0x000898, "Member 'ABP_ClosetBase_C::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item2) == 0x0008A8, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item3) == 0x0008A9, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_Select3_Default) == 0x0008B0, "Member 'ABP_ClosetBase_C::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, K2Node_Select4_Default) == 0x0008C0, "Member 'ABP_ClosetBase_C::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item4) == 0x0008D0, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue) == 0x0008E0, "Member 'ABP_ClosetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue) == 0x0008F0, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2) == 0x000900, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList) == 0x000910, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList2) == 0x000920, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item5) == 0x000930, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_Array_Get_Item6) == 0x000940, "Member 'ABP_ClosetBase_C::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue2) == 0x000950, "Member 'ABP_ClosetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue3) == 0x000960, "Member 'ABP_ClosetBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList3) == 0x000970, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3) == 0x000980, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList4) == 0x000990, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4) == 0x0009A0, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList5) == 0x0009B0, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList5' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5) == 0x0009C0, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList6) == 0x0009D0, "Member 'ABP_ClosetBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList6' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6) == 0x0009E0, "Member 'ABP_ClosetBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ABP_ClosetBase_C, CallFunc_IsItemGotten_ItemGotten2) == 0x0009F0, "Member 'ABP_ClosetBase_C::CallFunc_IsItemGotten_ItemGotten2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattlePlayer_P001

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_BattlePlayer_P001.BP_BattlePlayer_P001_C.ExecuteUbergraph_BP_BattlePlayer_P001
// 0x0008 (0x0008 - 0x0000)
struct BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackPlayableMovementDefault                  K2Node_Event_Prev_0;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackPlayableMovementDefault                  K2Node_Event_Next_0;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001) == 0x000004, "Wrong alignment on BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001");
static_assert(sizeof(BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001) == 0x000008, "Wrong size on BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001");
static_assert(offsetof(BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001, EntryPoint) == 0x000000, "Member 'BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001, K2Node_Event_Prev_0) == 0x000004, "Member 'BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001::K2Node_Event_Prev_0' has a wrong offset!");
static_assert(offsetof(BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001, K2Node_Event_Next_0) == 0x000005, "Member 'BP_BattlePlayer_P001_C_ExecuteUbergraph_BP_BattlePlayer_P001::K2Node_Event_Next_0' has a wrong offset!");

// Function BP_BattlePlayer_P001.BP_BattlePlayer_P001_C.OnChangePlayableMovementDefault
// 0x0002 (0x0002 - 0x0000)
struct BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault final
{
public:
	EJackPlayableMovementDefault                  Prev;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackPlayableMovementDefault                  Next;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault) == 0x000001, "Wrong alignment on BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault");
static_assert(sizeof(BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault) == 0x000002, "Wrong size on BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault");
static_assert(offsetof(BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault, Prev) == 0x000000, "Member 'BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault::Prev' has a wrong offset!");
static_assert(offsetof(BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault, Next) == 0x000001, "Member 'BP_BattlePlayer_P001_C_OnChangePlayableMovementDefault::Next' has a wrong offset!");

}


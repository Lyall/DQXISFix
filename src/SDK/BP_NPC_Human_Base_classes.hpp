#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Human_Base

#include "Basic.hpp"

#include "STRUCT_NpcAttachDisc_structs.hpp"
#include "ENUM_Schedule_Pattern_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_CoordinateMeshSlot_structs.hpp"
#include "BP_NPC_TalkBase_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// DynamicClass BP_NPC_Human_Base.BP_NPC_Human_Base_C
// 0x0160 (0x4910 - 0x47B0)
class ABP_NPC_Human_Base_C : public ABP_NPC_TalkBase_C
{
public:
	uint8                                         Pad_47B0[0x8];                                     // 0x47B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_COMP_RigidBodyManager_C*            BP_COMP_RigidBodyManager;                          // 0x47B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackPropsComponent*                    JackProps;                                         // 0x47C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth3;                                            // 0x47C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth2;                                            // 0x47D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth1;                                            // 0x47D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_EyeLookAtManager_C*            BP_COMP_EyeLookAtManager;                          // 0x47E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_FacialAnimManager_C*           BP_COMP_FacialAnimManager;                         // 0x47E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackFootIKComponent*                   JackFootIK;                                        // 0x47F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Accessory;                                         // 0x47F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Beard;                                             // 0x4800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Hair;                                              // 0x4808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Face;                                              // 0x4810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 LowerBody;                                         // 0x4818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 UpperBody;                                         // 0x4820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSTRUCT_NpcAttachDisc>          AttachDisc;                                        // 0x4828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IgnoreNpcListAttach;                               // 0x4838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EquipmentHidden;                                   // 0x4839(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ForceRejectAttachment;                             // 0x483A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_483B[0x5];                                     // 0x483B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           AttachmentID;                                      // 0x4840(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bVariantForm;                                      // 0x4850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BP_Attach_Enable;                                  // 0x4851(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENUM_Schedule_Pattern                         NextAttachSchedulePtn;                             // 0x4852(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4853[0x1];                                     // 0x4853(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x4854(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x4858(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x485C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x4860(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x4864(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x4868(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x486C(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_486D[0x3];                                     // 0x486D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NpcAttachDisc                  CallFunc_Array_Get_Item;                           // 0x4870(0x0018)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           K2Node_CustomEvent_PropName2;                      // 0x4888(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           K2Node_CustomEvent_PropName;                       // 0x4898(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FSTRUCT_NpcAttachDisc                  CallFunc_Array_Get_Item2;                          // 0x48A8(0x0018)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable4;                   // 0x48C0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48C4[0x4];                                     // 0x48C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_CustomEvent_PropID;                         // 0x48C8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_Hidden;                         // 0x48D8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48D9[0x7];                                     // 0x48D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x48E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable4;                    // 0x48E8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48EC[0x4];                                     // 0x48EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NpcAttachDisc                  CallFunc_Array_Get_Item4;                          // 0x48F0(0x0018)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_AttachProc_Result;                        // 0x4908(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsOverlapPropID_Result;                   // 0x4909(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_490A[0x6];                                     // 0x490A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddAttachDisc(class FName bpp__AttachmentID__pf, EJackNPCAttachmentType bpp__Type__pf);
	void AttachGadget(class UStaticMeshComponent* bpp__AttachBase__pf, class UStaticMesh* bpp__AttachMesh__pf, class FName bpp__AttachSocket__pf, bool bpp__Visible__pf);
	void AttachmentVisibleCtrlFromTimeZone(ENUM_Schedule_Pattern bpp__SchedulePtn__pf);
	void AttachmentVisibleCtrl_FromTimeZoneSimple(const struct FSTRUCT_NpcAttachDisc& bpp__AttachDisc__pf, ENUM_Schedule_Pattern bpp__SchedulePtn__pf);
	void AttachProc(const struct FSTRUCT_NpcAttachDisc& bpp__AttachDisc__pf, bool* bpp__Result__pf);
	void CallHiddenAttachmentNpc();
	void CallHiddenAttachmentNpcOptional(TArray<class FName>* bpp__PropName__pf);
	void CallShowAttachmentNpc();
	void CallShowAttachmentNpcOptional(TArray<class FName>* bpp__PropName__pf);
	void CompleteChangeSchedulePtnForProp();
	void DetachProc(const struct FSTRUCT_NpcAttachDisc& bpp__AttachDisc__pf);
	void Event_NPC_Human_HiddenAttachment(const TArray<class FName>& bpp__PropName__pf__const);
	void Event_NPC_Human_ShowAttachment(const TArray<class FName>& bpp__PropName__pf__const);
	void Event_NpcAttachmentPropHiddenDirectCall(const TArray<class FName>& bpp__PropID__pf__const, bool bpp__Hidden__pf);
	void ExecuteUbergraph_BP_NPC_Human_Base_2(int32 bpp__EntryPoint__pf);
	void GetFacialAnimManager(class UJackFacialControlComponent** bpp__JackFacialControlComponent__pf);
	void GetMeshByCoordinateSlotType(ENUM_CoordinateMeshSlot bpp__SlotType__pf, class USkeletalMeshComponent** bpp__SkeletalMeshComponent__pf);
	void Hidden_Attachment_Simple(class FName bpp__AttachmentName__pf);
	void IsOverlapPropID(class FName bpp__PropID__pf, bool* bpp__Result__pf);
	void OnFixupLooks();
	void OnInitialized();
	void OnInitializeProps();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason bpp__EndPlayReason__pf);
	void SetHiddenEquipment(class UJackEquipmentControlComponent* bpp__EquipmentComponent__pf);
	void SetUpAttachmentDisc();
	void ShowAttachmentEnableFromID(const struct FJackLDT_AttachedProps_NPC& bpp__ID__pf, bool bpp__Enable__pf);
	void ShowAttachment_Simple(class FName bpp__AttachmentName__pf);
	void Show_Attachment_Day(const struct FSTRUCT_NpcAttachDisc& bpp__AttachDisc__pf);
	void Show_Attachment_Night(const struct FSTRUCT_NpcAttachDisc& bpp__AttachDisc__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_NPC_Human_Base_C">();
	}
	static class ABP_NPC_Human_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_Human_Base_C>();
	}
};
static_assert(alignof(ABP_NPC_Human_Base_C) == 0x000010, "Wrong alignment on ABP_NPC_Human_Base_C");
static_assert(sizeof(ABP_NPC_Human_Base_C) == 0x004910, "Wrong size on ABP_NPC_Human_Base_C");
static_assert(offsetof(ABP_NPC_Human_Base_C, BP_COMP_RigidBodyManager) == 0x0047B8, "Member 'ABP_NPC_Human_Base_C::BP_COMP_RigidBodyManager' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, JackProps) == 0x0047C0, "Member 'ABP_NPC_Human_Base_C::JackProps' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Cloth3) == 0x0047C8, "Member 'ABP_NPC_Human_Base_C::Cloth3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Cloth2) == 0x0047D0, "Member 'ABP_NPC_Human_Base_C::Cloth2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Cloth1) == 0x0047D8, "Member 'ABP_NPC_Human_Base_C::Cloth1' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, BP_COMP_EyeLookAtManager) == 0x0047E0, "Member 'ABP_NPC_Human_Base_C::BP_COMP_EyeLookAtManager' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, BP_COMP_FacialAnimManager) == 0x0047E8, "Member 'ABP_NPC_Human_Base_C::BP_COMP_FacialAnimManager' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, JackFootIK) == 0x0047F0, "Member 'ABP_NPC_Human_Base_C::JackFootIK' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Accessory) == 0x0047F8, "Member 'ABP_NPC_Human_Base_C::Accessory' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Beard) == 0x004800, "Member 'ABP_NPC_Human_Base_C::Beard' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Hair) == 0x004808, "Member 'ABP_NPC_Human_Base_C::Hair' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Face) == 0x004810, "Member 'ABP_NPC_Human_Base_C::Face' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, LowerBody) == 0x004818, "Member 'ABP_NPC_Human_Base_C::LowerBody' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, UpperBody) == 0x004820, "Member 'ABP_NPC_Human_Base_C::UpperBody' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, AttachDisc) == 0x004828, "Member 'ABP_NPC_Human_Base_C::AttachDisc' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, IgnoreNpcListAttach) == 0x004838, "Member 'ABP_NPC_Human_Base_C::IgnoreNpcListAttach' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, EquipmentHidden) == 0x004839, "Member 'ABP_NPC_Human_Base_C::EquipmentHidden' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, ForceRejectAttachment) == 0x00483A, "Member 'ABP_NPC_Human_Base_C::ForceRejectAttachment' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, AttachmentID) == 0x004840, "Member 'ABP_NPC_Human_Base_C::AttachmentID' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, bVariantForm) == 0x004850, "Member 'ABP_NPC_Human_Base_C::bVariantForm' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, BP_Attach_Enable) == 0x004851, "Member 'ABP_NPC_Human_Base_C::BP_Attach_Enable' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, NextAttachSchedulePtn) == 0x004852, "Member 'ABP_NPC_Human_Base_C::NextAttachSchedulePtn' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Array_Index_Variable) == 0x004854, "Member 'ABP_NPC_Human_Base_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Loop_Counter_Variable) == 0x004858, "Member 'ABP_NPC_Human_Base_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Loop_Counter_Variable2) == 0x00485C, "Member 'ABP_NPC_Human_Base_C::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Array_Index_Variable2) == 0x004860, "Member 'ABP_NPC_Human_Base_C::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Loop_Counter_Variable3) == 0x004864, "Member 'ABP_NPC_Human_Base_C::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Array_Index_Variable3) == 0x004868, "Member 'ABP_NPC_Human_Base_C::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, K2Node_Event_EndPlayReason) == 0x00486C, "Member 'ABP_NPC_Human_Base_C::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_Array_Get_Item) == 0x004870, "Member 'ABP_NPC_Human_Base_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, K2Node_CustomEvent_PropName2) == 0x004888, "Member 'ABP_NPC_Human_Base_C::K2Node_CustomEvent_PropName2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, K2Node_CustomEvent_PropName) == 0x004898, "Member 'ABP_NPC_Human_Base_C::K2Node_CustomEvent_PropName' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_Array_Get_Item2) == 0x0048A8, "Member 'ABP_NPC_Human_Base_C::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Loop_Counter_Variable4) == 0x0048C0, "Member 'ABP_NPC_Human_Base_C::Temp_int_Loop_Counter_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, K2Node_CustomEvent_PropID) == 0x0048C8, "Member 'ABP_NPC_Human_Base_C::K2Node_CustomEvent_PropID' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, K2Node_CustomEvent_Hidden) == 0x0048D8, "Member 'ABP_NPC_Human_Base_C::K2Node_CustomEvent_Hidden' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_Array_Get_Item3) == 0x0048E0, "Member 'ABP_NPC_Human_Base_C::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, Temp_int_Array_Index_Variable4) == 0x0048E8, "Member 'ABP_NPC_Human_Base_C::Temp_int_Array_Index_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_Array_Get_Item4) == 0x0048F0, "Member 'ABP_NPC_Human_Base_C::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_AttachProc_Result) == 0x004908, "Member 'ABP_NPC_Human_Base_C::CallFunc_AttachProc_Result' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Human_Base_C, CallFunc_IsOverlapPropID_Result) == 0x004909, "Member 'ABP_NPC_Human_Base_C::CallFunc_IsOverlapPropID_Result' has a wrong offset!");

}


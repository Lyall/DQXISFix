#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayersTriggerVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C.OnPossessPlayerControlAtBeginOverlap__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayersTriggerVolume_C*             VolumeActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackPlayerControlPossessor                   Possessor_0;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature");
static_assert(sizeof(BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature) == 0x000018, "Wrong size on BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature");
static_assert(offsetof(BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature, OtherActor) == 0x000000, "Member 'BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature, VolumeActor) == 0x000008, "Member 'BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature::VolumeActor' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature, Possessor_0) == 0x000010, "Member 'BP_PlayersTriggerVolume_C_OnPossessPlayerControlAtBeginOverlap__DelegateSignature::Possessor_0' has a wrong offset!");

// Function BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C.ExecuteUbergraph_BP_PlayersTriggerVolume
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_Enable;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapJumping_Result;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsActorPlayerMarker_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume) == 0x000008, "Wrong alignment on BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume");
static_assert(sizeof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume) == 0x0000B8, "Wrong size on BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, EntryPoint) == 0x000000, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, CallFunc_IsEnable_Enable) == 0x000005, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::CallFunc_IsEnable_Enable' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, CallFunc_IsMapJumping_Result) == 0x000006, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::CallFunc_IsMapJumping_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, CallFunc_Not_PreBool_ReturnValue2) == 0x000007, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume, CallFunc_IsActorPlayerMarker_ReturnValue) == 0x0000B0, "Member 'BP_PlayersTriggerVolume_C_ExecuteUbergraph_BP_PlayersTriggerVolume::CallFunc_IsActorPlayerMarker_ReturnValue' has a wrong offset!");

// Function BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C.BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_PlayersTriggerVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_87_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C.IsEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayersTriggerVolume_C_IsEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayersTriggerVolume_C_IsEnable) == 0x000001, "Wrong alignment on BP_PlayersTriggerVolume_C_IsEnable");
static_assert(sizeof(BP_PlayersTriggerVolume_C_IsEnable) == 0x000001, "Wrong size on BP_PlayersTriggerVolume_C_IsEnable");
static_assert(offsetof(BP_PlayersTriggerVolume_C_IsEnable, Enable) == 0x000000, "Member 'BP_PlayersTriggerVolume_C_IsEnable::Enable' has a wrong offset!");

// Function BP_PlayersTriggerVolume.BP_PlayersTriggerVolume_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayersTriggerVolume_C_SetEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayersTriggerVolume_C_SetEnable) == 0x000001, "Wrong alignment on BP_PlayersTriggerVolume_C_SetEnable");
static_assert(sizeof(BP_PlayersTriggerVolume_C_SetEnable) == 0x000001, "Wrong size on BP_PlayersTriggerVolume_C_SetEnable");
static_assert(offsetof(BP_PlayersTriggerVolume_C_SetEnable, Enable) == 0x000000, "Member 'BP_PlayersTriggerVolume_C_SetEnable::Enable' has a wrong offset!");

}


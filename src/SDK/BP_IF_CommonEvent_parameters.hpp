#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IF_CommonEvent

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.CsPlayerWeaponSetting
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_CommonEvent_C_CsPlayerWeaponSetting final
{
public:
	class AJackCharacter*                         bpp__CsPlayer__pf;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_CsPlayerWeaponSetting) == 0x000008, "Wrong alignment on BP_IF_CommonEvent_C_CsPlayerWeaponSetting");
static_assert(sizeof(BP_IF_CommonEvent_C_CsPlayerWeaponSetting) == 0x000008, "Wrong size on BP_IF_CommonEvent_C_CsPlayerWeaponSetting");
static_assert(offsetof(BP_IF_CommonEvent_C_CsPlayerWeaponSetting, bpp__CsPlayer__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_CsPlayerWeaponSetting::bpp__CsPlayer__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.ForceAutoSaveAfterCS
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_ForceAutoSaveAfterCS final
{
public:
	bool                                          bpp__Result__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_ForceAutoSaveAfterCS) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_ForceAutoSaveAfterCS");
static_assert(sizeof(BP_IF_CommonEvent_C_ForceAutoSaveAfterCS) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_ForceAutoSaveAfterCS");
static_assert(offsetof(BP_IF_CommonEvent_C_ForceAutoSaveAfterCS, bpp__Result__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_ForceAutoSaveAfterCS::bpp__Result__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.GetShowLocationTitle
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_GetShowLocationTitle final
{
public:
	bool                                          bpp__IsDrawLocationTitle__pf;                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_GetShowLocationTitle) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_GetShowLocationTitle");
static_assert(sizeof(BP_IF_CommonEvent_C_GetShowLocationTitle) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_GetShowLocationTitle");
static_assert(offsetof(BP_IF_CommonEvent_C_GetShowLocationTitle, bpp__IsDrawLocationTitle__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_GetShowLocationTitle::bpp__IsDrawLocationTitle__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.InnSystem
// 0x0020 (0x0020 - 0x0000)
struct BP_IF_CommonEvent_C_InnSystem final
{
public:
	class AJackScheduledNPC*                      bpp__NPC__pf;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackYadoyaMorningCallTimezone                bpp__TimeZone__pf;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   bpp__InnEndEventName__pf;                          // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bForceDontResumeBGM__pf;                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__PlayJingle__pf;                               // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__AllDoorClose__pf;                             // 0x001A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__CameraReset__pf;                              // 0x001B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__DontPlayBGM__pf;                              // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_IF_CommonEvent_C_InnSystem) == 0x000008, "Wrong alignment on BP_IF_CommonEvent_C_InnSystem");
static_assert(sizeof(BP_IF_CommonEvent_C_InnSystem) == 0x000020, "Wrong size on BP_IF_CommonEvent_C_InnSystem");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__NPC__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__NPC__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__TimeZone__pf) == 0x000008, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__TimeZone__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__InnEndEventName__pf) == 0x000010, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__InnEndEventName__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__bForceDontResumeBGM__pf) == 0x000018, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__bForceDontResumeBGM__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__PlayJingle__pf) == 0x000019, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__PlayJingle__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__AllDoorClose__pf) == 0x00001A, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__AllDoorClose__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__CameraReset__pf) == 0x00001B, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__CameraReset__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_CommonEvent_C_InnSystem, bpp__DontPlayBGM__pf) == 0x00001C, "Member 'BP_IF_CommonEvent_C_InnSystem::bpp__DontPlayBGM__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.IsAutoSave
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_IsAutoSave final
{
public:
	bool                                          bpp__NoSave__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_IsAutoSave) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_IsAutoSave");
static_assert(sizeof(BP_IF_CommonEvent_C_IsAutoSave) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_IsAutoSave");
static_assert(offsetof(BP_IF_CommonEvent_C_IsAutoSave, bpp__NoSave__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_IsAutoSave::bpp__NoSave__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.PlayableStart
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_PlayableStart final
{
public:
	bool                                          bpp__IsDrawLocationTitle__pf;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_PlayableStart) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_PlayableStart");
static_assert(sizeof(BP_IF_CommonEvent_C_PlayableStart) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_PlayableStart");
static_assert(offsetof(BP_IF_CommonEvent_C_PlayableStart, bpp__IsDrawLocationTitle__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_PlayableStart::bpp__IsDrawLocationTitle__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.ScheduleChangeDisableDitherForNPC
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC final
{
public:
	class AJackScheduledNPC*                      bpp__TargetNpc__pf;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC) == 0x000008, "Wrong alignment on BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC");
static_assert(sizeof(BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC) == 0x000008, "Wrong size on BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC");
static_assert(offsetof(BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC, bpp__TargetNpc__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_ScheduleChangeDisableDitherForNPC::bpp__TargetNpc__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.SetAutoSaveCompleted
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_SetAutoSaveCompleted final
{
public:
	bool                                          bpp__Result__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_SetAutoSaveCompleted) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_SetAutoSaveCompleted");
static_assert(sizeof(BP_IF_CommonEvent_C_SetAutoSaveCompleted) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_SetAutoSaveCompleted");
static_assert(offsetof(BP_IF_CommonEvent_C_SetAutoSaveCompleted, bpp__Result__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_SetAutoSaveCompleted::bpp__Result__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.SetForceNoAutoSave
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_SetForceNoAutoSave final
{
public:
	bool                                          bpp__Result__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_SetForceNoAutoSave) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_SetForceNoAutoSave");
static_assert(sizeof(BP_IF_CommonEvent_C_SetForceNoAutoSave) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_SetForceNoAutoSave");
static_assert(offsetof(BP_IF_CommonEvent_C_SetForceNoAutoSave, bpp__Result__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_SetForceNoAutoSave::bpp__Result__pf' has a wrong offset!");

// Function BP_IF_CommonEvent.BP_IF_CommonEvent_C.Set Day Night Proc
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_CommonEvent_C_Set_Day_Night_Proc final
{
public:
	bool                                          bpp__Night__pf;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_CommonEvent_C_Set_Day_Night_Proc) == 0x000001, "Wrong alignment on BP_IF_CommonEvent_C_Set_Day_Night_Proc");
static_assert(sizeof(BP_IF_CommonEvent_C_Set_Day_Night_Proc) == 0x000001, "Wrong size on BP_IF_CommonEvent_C_Set_Day_Night_Proc");
static_assert(offsetof(BP_IF_CommonEvent_C_Set_Day_Night_Proc, bpp__Night__pf) == 0x000000, "Member 'BP_IF_CommonEvent_C_Set_Day_Night_Proc::bpp__Night__pf' has a wrong offset!");

}


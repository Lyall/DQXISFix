#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UMGAccessorCommon

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_UMGAccessorCommon.BP_UMGAccessorCommon_C.ExecuteUbergraph_BP_UMGAccessorCommon
// 0x0050 (0x0050 - 0x0000)
struct BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_Menu_Tutorial_C> K2Node_Event_EventListener;                        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_Key2;                                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                K2Node_Event_CharacterType;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Key;                                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_OpenMenu_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_OpenMenu_ReturnValue2;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon) == 0x000008, "Wrong alignment on BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon");
static_assert(sizeof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon) == 0x000050, "Wrong size on BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, EntryPoint) == 0x000000, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, K2Node_Event_EventListener) == 0x000010, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::K2Node_Event_EventListener' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, K2Node_Event_Key2) == 0x000020, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::K2Node_Event_Key2' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, K2Node_Event_CharacterType) == 0x000028, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::K2Node_Event_CharacterType' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, K2Node_Event_Key) == 0x000030, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::K2Node_Event_Key' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, CallFunc_GetUMGManager_ReturnValue2) == 0x000038, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, CallFunc_OpenMenu_ReturnValue) == 0x000040, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::CallFunc_OpenMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon, CallFunc_OpenMenu_ReturnValue2) == 0x000048, "Member 'BP_UMGAccessorCommon_C_ExecuteUbergraph_BP_UMGAccessorCommon::CallFunc_OpenMenu_ReturnValue2' has a wrong offset!");

// Function BP_UMGAccessorCommon.BP_UMGAccessorCommon_C.OnDisplayTabiNoKokoroe
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe) == 0x000008, "Wrong alignment on BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe");
static_assert(sizeof(BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe) == 0x000008, "Wrong size on BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe");
static_assert(offsetof(BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe, Key) == 0x000000, "Member 'BP_UMGAccessorCommon_C_OnDisplayTabiNoKokoroe::Key' has a wrong offset!");

// Function BP_UMGAccessorCommon.BP_UMGAccessorCommon_C.OnOpenTokugiPanelAtBattleResult
// 0x0001 (0x0001 - 0x0000)
struct BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult final
{
public:
	EJackCharacter                                CharacterType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult) == 0x000001, "Wrong alignment on BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult");
static_assert(sizeof(BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult) == 0x000001, "Wrong size on BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult");
static_assert(offsetof(BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult, CharacterType) == 0x000000, "Member 'BP_UMGAccessorCommon_C_OnOpenTokugiPanelAtBattleResult::CharacterType' has a wrong offset!");

// Function BP_UMGAccessorCommon.BP_UMGAccessorCommon_C.SetCloseEventListener
// 0x0010 (0x0010 - 0x0000)
struct BP_UMGAccessorCommon_C_SetCloseEventListener final
{
public:
	TScriptInterface<class IBP_IF_Menu_Tutorial_C> EventListener;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UMGAccessorCommon_C_SetCloseEventListener) == 0x000008, "Wrong alignment on BP_UMGAccessorCommon_C_SetCloseEventListener");
static_assert(sizeof(BP_UMGAccessorCommon_C_SetCloseEventListener) == 0x000010, "Wrong size on BP_UMGAccessorCommon_C_SetCloseEventListener");
static_assert(offsetof(BP_UMGAccessorCommon_C_SetCloseEventListener, EventListener) == 0x000000, "Member 'BP_UMGAccessorCommon_C_SetCloseEventListener::EventListener' has a wrong offset!");

// Function BP_UMGAccessorCommon.BP_UMGAccessorCommon_C.SetMainData
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_UMGAccessorCommon_C_SetMainData final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UMGAccessorCommon_C_SetMainData) == 0x000008, "Wrong alignment on BP_UMGAccessorCommon_C_SetMainData");
static_assert(sizeof(BP_UMGAccessorCommon_C_SetMainData) == 0x000008, "Wrong size on BP_UMGAccessorCommon_C_SetMainData");
static_assert(offsetof(BP_UMGAccessorCommon_C_SetMainData, Key) == 0x000000, "Member 'BP_UMGAccessorCommon_C_SetMainData::Key' has a wrong offset!");

}


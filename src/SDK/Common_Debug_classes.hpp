#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Common_Debug

#include "Basic.hpp"

#include "STRUCT_DebugArrow_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Common_Debug.Common_Debug_C
// 0x0278 (0x0618 - 0x03A0)
class ACommon_Debug_C final : public ALevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(Transient, DuplicateTransient)
	bool                                          DebugDispTime;                                     // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugDispHelp;                                     // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LongPushFlag;                                      // 0x03AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB[0x1];                                      // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StatesDispCounter;                                 // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_in_ViewPort_SecurityCamera;                     // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputEvent                            Input;                                             // 0x03B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           Message_Color;                                     // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackScheduledNPC*>              ScheduleNPC;                                       // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FSTRUCT_DebugArrow>             DebugArrow;                                        // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FString                                 DisplayID;                                         // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           DebugLoadLevels;                                   // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FTransform>                     AllNpcTransform;                                   // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          MapJumpEnable;                                     // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DisableDebugMapjumpForPerformanceTest;             // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43A[0x2];                                      // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MapStartDistance;                                  // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackMapStart*                          NearMapStart;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         MacroCommandArray;                                 // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FName>                           DbgLevelArray;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TSoftClassPtr<class UClass>                   LightingCheck;                                     // 0x0468(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   CSLevelname;                                       // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugTimeSkipSuperMode;                            // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FindStaticMesh;                                    // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Index;                                           // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         L_Array;                                           // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         TempArray;                                         // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         ErrorStaticMeshCollision;                          // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FName>                           IgnoreCollisionPreset;                             // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         AllStaticMeshCollision;                            // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                         PerformanceMapJump;                                // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class FString                                 TempScenarioNum;                                   // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          FindCsLevelName;                                   // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TempCSID;                                          // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class ABP_DebugActorClassList_C*              DebugActorClassListInst;                           // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CSEndFlag;                                         // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PafuPafuRandom;                                    // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          DebugDispAdvance;                                  // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CancelDispAdvance;                                 // 0x0539(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53A[0x6];                                      // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         TempPafuPafu;                                      // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSTRUCT_DebugArrow>             KesinDebugArrow;                                   // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSTRUCT_DebugArrow>             AllDebugArrow;                                     // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         DebugLvdLogLine;                                   // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMatineeActor*                          TitleCutscene;                                     // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugCutsceneControl_C*             BP_DebugCutsceneControl_C_1_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StreamingEdit_C*                    BP_StreamingEdit_132_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutSceneMenu_Debug_C*               BP_CutSceneMenu_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugMapSelect_C*                   BP_DebugMapSelect_C_1_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Flag_Debug_C*                       BP_Flag_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugPlayerCoord_C*                 BP_DebugPlayerCoord_C_0_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugPlayerCoord_C*                 BP_DebugPlayerCoord_C_2_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugNpcSpawnAtPlayerPos_C*         BP_DebugNpcSpawnAtPlayerPos_C_2_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugScale_C*                       BP_DebugScale_C_1_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcChecker_C*                       BP_NpcChecker_36_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugNpcMenu_C*                     BP_DebugNpcMenu_70_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugMenuWeather_C*                 BP_DebugMenuWeather_C_2_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugMenuLoadingPerformance_C*      BP_DebugMenuLoadingPerformance_76_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugMenuEventBattle_C*             BP_DebugMenuEventBattle_82_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugMenuCoordinate_C*              BP_DebugMenuCoordinate_32_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugLightingCheckAssets_C*         BP_DebugLightingCheckAssets_54_ExecuteUbergraph_Common_Debug_RefProperty; // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugCutsceneSkipCut_C*             BP_DebugCutsceneSkipCut_C_1_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DebugAutoPlayer_C*                  BP_DebugAutoPlayer_14_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutsceneChecker_C*                  BP_CutsceneChecker_76_ExecuteUbergraph_Common_Debug_RefProperty; // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Common_Debug(int32 EntryPoint);
	void CustomEvent_0();
	void CustomEvent_1();
	void CustomEvent_2();
	void CustomEvent_3();
	void DisplayStates(const class FString& String, const struct FLinearColor& Color);
	void PlayMe();
	void HiddenMapStartIcon();
	void KesinArrow(bool Visible);
	void AddDebugMenuDeployChange();
	void MapJumpBeginPlay();
	void TextRenderVisible(bool Visible);
	void SetDebugWeather(EJackWorldWeather SetWeather);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetForcePLJump();
	void Skip2ndSetTimeProc();
	void SetMurabitoCoordinate();
	void DebugStabilizePose();
	void DebugMapJumpMenuFromPL_DebugStart();
	void DebugUso();
	void DebugSetControlledPlayer(EJackCharacter InType, const class FString& NoMapJump);
	void SetPafuPafuRandom(const class FString& Random);
	void S020AllMissionClear(const class FString& Flag);
	void DebugActorClassList(const class FString& Value1, const class FString& Value2);
	void DebugActorDestroyClass(class UClass* ActorClass);
	void DebugPrintActorDisplayName(class UClass* ActorClass);
	void DebugActorDestroy(const class FString& DisplayName);
	void ClearTimePauseMax();
	void DebugGetAchievement();
	void ForceReturnTitle();
	void SetStreamingCheckStatus();
	void CheckVisibleOff();
	void CheckStreamingOff();
	void DispClearedName();
	void SetClearedName();
	void DebugDebugOff(bool CommonDebugOff);
	void DispSkyBaseInfo();
	void DebugSibari();
	void DebugWeatherCompEnable();
	void DebugAllDoorClose();
	void StartCutsceneBeforeLoad(class FName CSID);
	void SetAutoCameraCollision();
	void ForceAutoSave();
	void RenkeiTestSettings();
	void RunProcessFriendJoinC010();
	void RunProcessBackingToThePast();
	void SetEnvQuality(int32 LOD);
	void ResetPlayerCoordinateEvent();
	void DebugPlayerCoordinateEvent(int32 CostumeID);
	void HoukaiToClearSky();
	void DebugFadeReset();
	void StreamingEditFullLoad();
	void NpcJump(class FName UNID);
	void DebugSenaShortHair();
	void TalkEscape();
	void StreamingEdit();
	void CsFriendCheck(const class FString& Scenario);
	void OnFinishLoadAsync_Event_0(int32 SlotIndex, EJackSaveLoadResult SaveLoadResult);
	void ReturnToAutoSave();
	void StaticMeshCollisionAutoCheck();
	void LightBuildLevelAutoCheck();
	void BatchCsStart();
	void BatchCsStartURL(const class FString& TextURL);
	void BatchCsPlay(const class FString& CSID);
	void BatchCsFirst();
	void BatchCsEndLoop();
	void DebugRescureJump();
	void DebugCSPlay(class FName CutsceneLevelName);
	void DebugMapJumpNear();
	void DebugRescue();
	void DebugFullReload(class FName MapStartTag);
	void DebugFullLoad(class FName MapStartTag);
	void DebugScenarioSettingForPerformanceTest();
	void DebugMapJump(class FName MapStartTag);
	void DebugSetRestartPoint(class FName RestartPointID);
	void AddDebugMenuCutViewer();
	void DebugCSViewer();
	void DebugMapJumpMenu();
	void DebugCSMenu_Old();
	void DebugCSMenu();
	void DebugDestoryMonsterPop();
	void AddDebugArrow(class UClass* ActorClass, const struct FLinearColor& Color);
	void DebugDispItemBox();
	void DebugTimeSkip();
	void DebugTimeSkipSuper(bool Enable);
	void DebugAddTime(int32 Time);
	void DebugCSSkip();
	void DebugMapJumpEnable();
	void DebugCSHiddenOff(const class FString& Param);
	void DebugCSHiddenOn(const class FString& Param);
	void DebugPartyHiddenControl(const class FString& Param, bool Hidden);
	void DebugCSCoordinate(const class FString& Param);
	void DebugCSWeapon(const class FString& Param);
	void DebugEncount();
	void DebugUnvisible(const class FString& NewParam);
	void DebugVisible(const class FString& NewParam);
	void DebugNpcAllSetCoordinate(class FName Coordinate);
	void DebugNpcAllRespawnByClasss(class UClass* Class_0);
	void DebugUnload(const class FString& NewParam);
	void DebugLoad(const class FString& NewParam);
	void SetMapJumpIgnorePL_DebugStart();
	void StopMapJumpPerformanceTest();
	void SetMapJumpLogWait(int32 MapJumpLogWait);
	void MapJumpPerformanceTestRenzokuNCC(const class FString& MapStartName);
	void MapJumpPerformanceTestRenzoku(const class FString& MapStartName);
	void DebugAutoPlayBattle();
	void MapChangeFinishDelegate_Event(class FName CurrentMapStart, class FName CurrentMapID, class FName PrevMapID);
	void SetMapJumpSS();
	void MapJumpPerformanceTestInitialize();
	void MapJumpPerformanceTestScenario(const class FString& MapStartName);
	void SetScenarioProgress();
	void SetPreloadWait(int32 WaitTime);
	void MapJumpPerformanceTestCore();
	void MapJumpPerformanceTest(const class FString& MapStartName);
	void CutsceneTextureTestOmoideSection(const class FString& Section);
	void SetCutscenePerformanceDispPosition(const class FString& DispPosition);
	void CutscenePerformanceTestSection(const class FString& Section);
	void SetCutscenePerformanceLoopCSID(const class FString& CSID);
	void CutsceneTextureTestOmoide(const class FString& CutSceneID);
	void CutscenePerformanceTestOmoide(const class FString& CutSceneID);
	void CutscenePerformanceTest(const class FString& Start, const class FString& End);
	void SetForceSkipTimeForCSPerformanceTest(int32 ForceSkipTime);
	void ForceOmoideClose();
	void CutscenePerformanceTestCore();
	void MapJumpEndPlay();
	void StartCutSceneCharacterSettingAfter(class FName CSID);
	void EndCutSceneFadInBefore(class FName CSID);
	void StartCutSceneFadeOutAfter(class FName CSID);
	void EndCutSceneBeforeUnload(class FName CSID);
	void EndCutScene(class FName CSID);
	void StartCutScene(class FName CSID);
	void InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_59(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_60(const struct FKey& Key);
	void InpActEvt_Ctrl_PageUp_K2Node_InputKeyEvent_61(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Multiply_K2Node_InputKeyEvent_62(const struct FKey& Key);
	void InpActEvt_CtrlPlusAltPlusShift_NumPadNine_K2Node_InputKeyEvent_63(const struct FKey& Key);
	void InpActEvt_CtrlPlusAltPlusShift_Nine_K2Node_InputKeyEvent_64(const struct FKey& Key);
	void InpActEvt_Ctrl_Decimal_K2Node_InputKeyEvent_65(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadTwo_K2Node_InputKeyEvent_66(const struct FKey& Key);
	void InpActEvt_Ctrl_Two_K2Node_InputKeyEvent_67(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadNine_K2Node_InputKeyEvent_68(const struct FKey& Key);
	void InpActEvt_Ctrl_Nine_K2Node_InputKeyEvent_69(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_NumPadZero_K2Node_InputKeyEvent_70(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_Zero_K2Node_InputKeyEvent_71(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_NumPadNine_K2Node_InputKeyEvent_72(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_NumPadEight_K2Node_InputKeyEvent_73(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_Nine_K2Node_InputKeyEvent_74(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_Eight_K2Node_InputKeyEvent_75(const struct FKey& Key);
	void InpActEvt_Ctrl_Multiply_K2Node_InputKeyEvent_76(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_77(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_78(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_NumPadTwo_K2Node_InputKeyEvent_79(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Two_K2Node_InputKeyEvent_80(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Slash_K2Node_InputKeyEvent_81(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Divide_K2Node_InputKeyEvent_82(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_NumPadOne_K2Node_InputKeyEvent_83(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_One_K2Node_InputKeyEvent_84(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_Seven_K2Node_InputKeyEvent_85(const struct FKey& Key);
	void InpActEvt_CtrlPlusAlt_NumPadSeven_K2Node_InputKeyEvent_86(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Eight_K2Node_InputKeyEvent_87(const struct FKey& Key);
	void InpActEvt_Ctrl_Seven_K2Node_InputKeyEvent_88(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadSeven_K2Node_InputKeyEvent_89(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadOne_K2Node_InputKeyEvent_90(const struct FKey& Key);
	void InpActEvt_Ctrl_One_K2Node_InputKeyEvent_91(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadThree_K2Node_InputKeyEvent_92(const struct FKey& Key);
	void InpActEvt_Ctrl_Three_K2Node_InputKeyEvent_93(const struct FKey& Key);
	void InpActEvt_Ctrl_Four_K2Node_InputKeyEvent_94(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadFour_K2Node_InputKeyEvent_95(const struct FKey& Key);
	void InpActEvt_Ctrl_Five_K2Node_InputKeyEvent_96(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadFive_K2Node_InputKeyEvent_97(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadSix_K2Node_InputKeyEvent_98(const struct FKey& Key);
	void InpActEvt_Ctrl_Six_K2Node_InputKeyEvent_99(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Seven_K2Node_InputKeyEvent_100(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_NumPadSeven_K2Node_InputKeyEvent_101(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadEight_K2Node_InputKeyEvent_102(const struct FKey& Key);
	void InpActEvt_Ctrl_Eight_K2Node_InputKeyEvent_103(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Period_K2Node_InputKeyEvent_104(const struct FKey& Key);
	void InpActEvt_CtrlPlusShift_Add_K2Node_InputKeyEvent_105(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_106(const struct FKey& Key);
	void InpActEvt_Ctrl_Zero_K2Node_InputKeyEvent_107(const struct FKey& Key);
	void InpActEvt_Ctrl_H_K2Node_InputKeyEvent_108(const struct FKey& Key);
	void InpActEvt_Ctrl_Slash_K2Node_InputKeyEvent_109(const struct FKey& Key);
	void InpActEvt_Ctrl_Divide_K2Node_InputKeyEvent_110(const struct FKey& Key);
	void InpActEvt_Ctrl_Period_K2Node_InputKeyEvent_111(const struct FKey& Key);
	void InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_112(const struct FKey& Key);
	void InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_113(const struct FKey& Key);
	void InpActEvt_Ctrl_Add_K2Node_InputKeyEvent_114(const struct FKey& Key);
	void InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_115(const struct FKey& Key);
	void InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_116(const struct FKey& Key);
	void InpActEvt_Ctrl_B_K2Node_InputKeyEvent_117(const struct FKey& Key);
	void MakeStreamingData(const class FString& InData, TArray<class FName>* NewParam);
	void PartyID_to_CharacterEnum(const class FString& ID, EJackCharacter* Character, int32* CharacterInt);
	void GetCanEquipTable(class FName WeaponID, TArray<bool>* CanEquip);
	void GetNearMapStart();
	void SearchNextMapstartByCategory(const class FString& MapIDCategory, class FString* NextMapStart, class FString* BeforeMapStart);
	void GetUniueMapStartByStreamingStatus(TArray<class FString>* UniqueMapStart);
	void SearchNextMapStart(const class FString& SearchMapStart, class FString* NextMapStart);
	void SetAllCsFlag();
	void SetAllGuideFlag();
	void DispNpcName();
	void SetDebugTimeZone(bool Pattern);
	void GetPrevCSID(const class FString& CSID, class FString* PrevCSID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Common_Debug_C">();
	}
	static class ACommon_Debug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACommon_Debug_C>();
	}
};
static_assert(alignof(ACommon_Debug_C) == 0x000008, "Wrong alignment on ACommon_Debug_C");
static_assert(sizeof(ACommon_Debug_C) == 0x000618, "Wrong size on ACommon_Debug_C");
static_assert(offsetof(ACommon_Debug_C, UberGraphFrame) == 0x0003A0, "Member 'ACommon_Debug_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugDispTime) == 0x0003A8, "Member 'ACommon_Debug_C::DebugDispTime' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugDispHelp) == 0x0003A9, "Member 'ACommon_Debug_C::DebugDispHelp' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, LongPushFlag) == 0x0003AA, "Member 'ACommon_Debug_C::LongPushFlag' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, StatesDispCounter) == 0x0003AC, "Member 'ACommon_Debug_C::StatesDispCounter' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, Is_in_ViewPort_SecurityCamera) == 0x0003B0, "Member 'ACommon_Debug_C::Is_in_ViewPort_SecurityCamera' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, Input) == 0x0003B8, "Member 'ACommon_Debug_C::Input' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, Message_Color) == 0x0003D8, "Member 'ACommon_Debug_C::Message_Color' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, ScheduleNPC) == 0x0003E8, "Member 'ACommon_Debug_C::ScheduleNPC' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugArrow) == 0x0003F8, "Member 'ACommon_Debug_C::DebugArrow' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DisplayID) == 0x000408, "Member 'ACommon_Debug_C::DisplayID' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugLoadLevels) == 0x000418, "Member 'ACommon_Debug_C::DebugLoadLevels' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, AllNpcTransform) == 0x000428, "Member 'ACommon_Debug_C::AllNpcTransform' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, MapJumpEnable) == 0x000438, "Member 'ACommon_Debug_C::MapJumpEnable' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DisableDebugMapjumpForPerformanceTest) == 0x000439, "Member 'ACommon_Debug_C::DisableDebugMapjumpForPerformanceTest' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, MapStartDistance) == 0x00043C, "Member 'ACommon_Debug_C::MapStartDistance' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, NearMapStart) == 0x000440, "Member 'ACommon_Debug_C::NearMapStart' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, MacroCommandArray) == 0x000448, "Member 'ACommon_Debug_C::MacroCommandArray' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DbgLevelArray) == 0x000458, "Member 'ACommon_Debug_C::DbgLevelArray' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, LightingCheck) == 0x000468, "Member 'ACommon_Debug_C::LightingCheck' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, CSLevelname) == 0x000480, "Member 'ACommon_Debug_C::CSLevelname' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugTimeSkipSuperMode) == 0x000488, "Member 'ACommon_Debug_C::DebugTimeSkipSuperMode' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, FindStaticMesh) == 0x000489, "Member 'ACommon_Debug_C::FindStaticMesh' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, L_Index) == 0x00048C, "Member 'ACommon_Debug_C::L_Index' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, L_Array) == 0x000490, "Member 'ACommon_Debug_C::L_Array' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, TempArray) == 0x0004A0, "Member 'ACommon_Debug_C::TempArray' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, ErrorStaticMeshCollision) == 0x0004B0, "Member 'ACommon_Debug_C::ErrorStaticMeshCollision' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, IgnoreCollisionPreset) == 0x0004C0, "Member 'ACommon_Debug_C::IgnoreCollisionPreset' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, AllStaticMeshCollision) == 0x0004D0, "Member 'ACommon_Debug_C::AllStaticMeshCollision' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, PerformanceMapJump) == 0x0004E0, "Member 'ACommon_Debug_C::PerformanceMapJump' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, TempScenarioNum) == 0x0004F0, "Member 'ACommon_Debug_C::TempScenarioNum' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, FindCsLevelName) == 0x000500, "Member 'ACommon_Debug_C::FindCsLevelName' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, TempCSID) == 0x000508, "Member 'ACommon_Debug_C::TempCSID' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugActorClassListInst) == 0x000518, "Member 'ACommon_Debug_C::DebugActorClassListInst' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, CSEndFlag) == 0x000520, "Member 'ACommon_Debug_C::CSEndFlag' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, PafuPafuRandom) == 0x000528, "Member 'ACommon_Debug_C::PafuPafuRandom' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugDispAdvance) == 0x000538, "Member 'ACommon_Debug_C::DebugDispAdvance' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, CancelDispAdvance) == 0x000539, "Member 'ACommon_Debug_C::CancelDispAdvance' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, TempPafuPafu) == 0x000540, "Member 'ACommon_Debug_C::TempPafuPafu' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, KesinDebugArrow) == 0x000550, "Member 'ACommon_Debug_C::KesinDebugArrow' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, AllDebugArrow) == 0x000560, "Member 'ACommon_Debug_C::AllDebugArrow' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, DebugLvdLogLine) == 0x000570, "Member 'ACommon_Debug_C::DebugLvdLogLine' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, TitleCutscene) == 0x000578, "Member 'ACommon_Debug_C::TitleCutscene' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugCutsceneControl_C_1_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000580, "Member 'ACommon_Debug_C::BP_DebugCutsceneControl_C_1_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_StreamingEdit_132_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000588, "Member 'ACommon_Debug_C::BP_StreamingEdit_132_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_CutSceneMenu_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000590, "Member 'ACommon_Debug_C::BP_CutSceneMenu_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugMapSelect_C_1_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000598, "Member 'ACommon_Debug_C::BP_DebugMapSelect_C_1_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_Flag_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005A0, "Member 'ACommon_Debug_C::BP_Flag_Debug_C_0_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugPlayerCoord_C_0_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005A8, "Member 'ACommon_Debug_C::BP_DebugPlayerCoord_C_0_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugPlayerCoord_C_2_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005B0, "Member 'ACommon_Debug_C::BP_DebugPlayerCoord_C_2_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugNpcSpawnAtPlayerPos_C_2_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005B8, "Member 'ACommon_Debug_C::BP_DebugNpcSpawnAtPlayerPos_C_2_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugScale_C_1_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005C0, "Member 'ACommon_Debug_C::BP_DebugScale_C_1_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_NpcChecker_36_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005C8, "Member 'ACommon_Debug_C::BP_NpcChecker_36_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugNpcMenu_70_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005D0, "Member 'ACommon_Debug_C::BP_DebugNpcMenu_70_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugMenuWeather_C_2_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005D8, "Member 'ACommon_Debug_C::BP_DebugMenuWeather_C_2_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugMenuLoadingPerformance_76_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005E0, "Member 'ACommon_Debug_C::BP_DebugMenuLoadingPerformance_76_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugMenuEventBattle_82_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005E8, "Member 'ACommon_Debug_C::BP_DebugMenuEventBattle_82_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugMenuCoordinate_32_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005F0, "Member 'ACommon_Debug_C::BP_DebugMenuCoordinate_32_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugLightingCheckAssets_54_ExecuteUbergraph_Common_Debug_RefProperty) == 0x0005F8, "Member 'ACommon_Debug_C::BP_DebugLightingCheckAssets_54_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugCutsceneSkipCut_C_1_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000600, "Member 'ACommon_Debug_C::BP_DebugCutsceneSkipCut_C_1_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_DebugAutoPlayer_14_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000608, "Member 'ACommon_Debug_C::BP_DebugAutoPlayer_14_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");
static_assert(offsetof(ACommon_Debug_C, BP_CutsceneChecker_76_ExecuteUbergraph_Common_Debug_RefProperty) == 0x000610, "Member 'ACommon_Debug_C::BP_CutsceneChecker_76_ExecuteUbergraph_Common_Debug_RefProperty' has a wrong offset!");

}


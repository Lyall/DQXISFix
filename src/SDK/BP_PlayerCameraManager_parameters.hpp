#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCameraManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCameraManager.BP_PlayerCameraManager_C.ExecuteUbergraph_BP_PlayerCameraManager
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisable;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager) == 0x000004, "Wrong alignment on BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager");
static_assert(sizeof(BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager) == 0x000008, "Wrong size on BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager");
static_assert(offsetof(BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager, EntryPoint) == 0x000000, "Member 'BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager, K2Node_Event_bDisable) == 0x000004, "Member 'BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager::K2Node_Event_bDisable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_PlayerCameraManager_C_ExecuteUbergraph_BP_PlayerCameraManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCameraManager.BP_PlayerCameraManager_C.OnCameraLightDisableChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCameraManager_C_OnCameraLightDisableChanged final
{
public:
	bool                                          bDisable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCameraManager_C_OnCameraLightDisableChanged) == 0x000001, "Wrong alignment on BP_PlayerCameraManager_C_OnCameraLightDisableChanged");
static_assert(sizeof(BP_PlayerCameraManager_C_OnCameraLightDisableChanged) == 0x000001, "Wrong size on BP_PlayerCameraManager_C_OnCameraLightDisableChanged");
static_assert(offsetof(BP_PlayerCameraManager_C_OnCameraLightDisableChanged, bDisable) == 0x000000, "Member 'BP_PlayerCameraManager_C_OnCameraLightDisableChanged::bDisable' has a wrong offset!");

// Function BP_PlayerCameraManager.BP_PlayerCameraManager_C.BlueprintUpdateCamera
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCameraManager_C_BlueprintUpdateCamera final
{
public:
	class AActor*                                 CameraTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewCameraLocation;                                 // 0x0008(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewCameraRotation;                                 // 0x0014(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                         NewCameraFOV;                                      // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCameraManager_C_BlueprintUpdateCamera) == 0x000008, "Wrong alignment on BP_PlayerCameraManager_C_BlueprintUpdateCamera");
static_assert(sizeof(BP_PlayerCameraManager_C_BlueprintUpdateCamera) == 0x000028, "Wrong size on BP_PlayerCameraManager_C_BlueprintUpdateCamera");
static_assert(offsetof(BP_PlayerCameraManager_C_BlueprintUpdateCamera, CameraTarget) == 0x000000, "Member 'BP_PlayerCameraManager_C_BlueprintUpdateCamera::CameraTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_BlueprintUpdateCamera, NewCameraLocation) == 0x000008, "Member 'BP_PlayerCameraManager_C_BlueprintUpdateCamera::NewCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_BlueprintUpdateCamera, NewCameraRotation) == 0x000014, "Member 'BP_PlayerCameraManager_C_BlueprintUpdateCamera::NewCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_BlueprintUpdateCamera, NewCameraFOV) == 0x000020, "Member 'BP_PlayerCameraManager_C_BlueprintUpdateCamera::NewCameraFOV' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_BlueprintUpdateCamera, ReturnValue) == 0x000024, "Member 'BP_PlayerCameraManager_C_BlueprintUpdateCamera::ReturnValue' has a wrong offset!");

}


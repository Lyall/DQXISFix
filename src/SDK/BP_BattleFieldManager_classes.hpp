#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleFieldManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleFieldManager.BP_BattleFieldManager_C
// 0x0020 (0x03F8 - 0x03D8)
class ABP_BattleFieldManager_C final : public AJackBattleFieldManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleFieldCollision_C*             DebugBattleFieldCollision;                         // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugBattleFieldCollisionRadius;                   // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BattleFieldManager(int32 EntryPoint);
	void DisplayDebugInfoByBlueprint();
	void FinalizeDebugBattleFieldCollisionByBlueprint();
	void UserConstructionScript();
	void DebugDraw();
	void DebugBattleFieldCollisionInitialize(const struct FVector& BattleFieldLocation, float BattleFieldRadius);
	void DebugBattleFieldCollisionFinalize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleFieldManager_C">();
	}
	static class ABP_BattleFieldManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BattleFieldManager_C>();
	}
};
static_assert(alignof(ABP_BattleFieldManager_C) == 0x000008, "Wrong alignment on ABP_BattleFieldManager_C");
static_assert(sizeof(ABP_BattleFieldManager_C) == 0x0003F8, "Wrong size on ABP_BattleFieldManager_C");
static_assert(offsetof(ABP_BattleFieldManager_C, UberGraphFrame) == 0x0003D8, "Member 'ABP_BattleFieldManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BattleFieldManager_C, DefaultSceneRoot) == 0x0003E0, "Member 'ABP_BattleFieldManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BattleFieldManager_C, DebugBattleFieldCollision) == 0x0003E8, "Member 'ABP_BattleFieldManager_C::DebugBattleFieldCollision' has a wrong offset!");
static_assert(offsetof(ABP_BattleFieldManager_C, DebugBattleFieldCollisionRadius) == 0x0003F0, "Member 'ABP_BattleFieldManager_C::DebugBattleFieldCollisionRadius' has a wrong offset!");

}


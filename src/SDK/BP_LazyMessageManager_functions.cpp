#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LazyMessageManager

#include "Basic.hpp"

#include "BP_LazyMessageManager_classes.hpp"
#include "BP_LazyMessageManager_parameters.hpp"


namespace SDK
{

// Function BP_LazyMessageManager.BP_LazyMessageManager_C.VeiwAllEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_LazyMessageManager_C::VeiwAllEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "VeiwAllEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.ExecuteUbergraph_BP_LazyMessageManager
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LazyMessageManager_C::ExecuteUbergraph_BP_LazyMessageManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "ExecuteUbergraph_BP_LazyMessageManager");

	Params::BP_LazyMessageManager_C_ExecuteUbergraph_BP_LazyMessageManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.OnViewAllEnd
// (Event, Public, BlueprintEvent)

void ABP_LazyMessageManager_C::OnViewAllEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "OnViewAllEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.OnViewTabiNoKokoroe
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LazyMessageManager_C::OnViewTabiNoKokoroe(class FName RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "OnViewTabiNoKokoroe");

	Params::BP_LazyMessageManager_C_OnViewTabiNoKokoroe Parms{};

	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.OnViewStartMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             TextID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FJackMessageArgumentData> Args                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_LazyMessageManager_C::OnViewStartMessage(class FName TextID, const TArray<struct FJackMessageArgumentData>& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "OnViewStartMessage");

	Params::BP_LazyMessageManager_C_OnViewStartMessage Parms{};

	Parms.TextID = TextID;
	Parms.Args = std::move(Args);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.OnTryPossessControll
// (Event, Public, BlueprintEvent)

void ABP_LazyMessageManager_C::OnTryPossessControll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "OnTryPossessControll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LazyMessageManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "ReceiveTick");

	Params::BP_LazyMessageManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.OnViewStartAchievement
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             AchieveId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LazyMessageManager_C::OnViewStartAchievement(class FName AchieveId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "OnViewStartAchievement");

	Params::BP_LazyMessageManager_C_OnViewStartAchievement Parms{};

	Parms.AchieveId = AchieveId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LazyMessageManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.SetGameCondition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOn                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LazyMessageManager_C::SetGameCondition(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "SetGameCondition");

	Params::BP_LazyMessageManager_C_SetGameCondition Parms{};

	Parms.bOn = bOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.SetPlayerMoveCondition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_LazyMessageManager_C::SetPlayerMoveCondition(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "SetPlayerMoveCondition");

	Params::BP_LazyMessageManager_C_SetPlayerMoveCondition Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LazyMessageManager.BP_LazyMessageManager_C.IsNoFallWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_LazyMessageManager_C::IsNoFallWait() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LazyMessageManager_C", "IsNoFallWait");

	Params::BP_LazyMessageManager_C_IsNoFallWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


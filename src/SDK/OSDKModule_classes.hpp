#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OSDKModule

#include "Basic.hpp"

#include "OSDKModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class OSDKModule.OSDKFutureObject
// 0x0008 (0x0040 - 0x0038)
class UOSDKFutureObject : public UObject
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Await(class UObject* WorldContextObject, EOSDKFutureFinishResult* FinishResult, const struct FLatentActionInfo& LatentInfo);

	EOSDKFutureStatus GetStatus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKFutureObject">();
	}
	static class UOSDKFutureObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKFutureObject>();
	}
};
static_assert(alignof(UOSDKFutureObject) == 0x000008, "Wrong alignment on UOSDKFutureObject");
static_assert(sizeof(UOSDKFutureObject) == 0x000040, "Wrong size on UOSDKFutureObject");

// Class OSDKModule.OSDKWebServiceClient
// 0x0008 (0x0048 - 0x0040)
class UOSDKWebServiceClient final : public UOSDKFutureObject
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UOSDKFutureObject* BPRefreshAuthentication();
	class UOSDKStatsInfo* GetAndResetStatsInfo();
	void GetFeatureNames(const class FString& FeatureName, TSet<class FString>* OutFeatureNames);
	class FString GetFeatureSetting(const class FString& FeatureName, const class FString& SettingName);
	void GetFeatureSettings(const class FString& FeatureName, TMap<class FString, class FString>* OutSettings);
	struct FOSDKHTTPClient GetHTTPClient();
	struct FOSDKProfileId GetPrimaryProfileId();
	struct FOSDKProfileId GetSecondaryProfileId(const class FString& Name_0);
	bool GetUserConsentsToSendingMetrics();
	void ResetAllLocalStorages();
	void ResetClient();
	void SetDefaultHeader(const class FString& HeaderName, const class FString& HeaderValue);
	void SetUserConsentsToSendingMetrics(bool OptIn, bool EmitConsentMetric);
	void SetUserLanguage(const class FString& LanguageCode);

	struct FOSDKClientInfo GetClientInfo() const;
	struct FOSDKServerInfo GetServerInfo() const;
	class UOSDKStatsInfo* GetStatsInfo() const;
	struct FOSDKUserInfo GetUserInfo() const;
	bool IsAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKWebServiceClient">();
	}
	static class UOSDKWebServiceClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKWebServiceClient>();
	}
};
static_assert(alignof(UOSDKWebServiceClient) == 0x000008, "Wrong alignment on UOSDKWebServiceClient");
static_assert(sizeof(UOSDKWebServiceClient) == 0x000048, "Wrong size on UOSDKWebServiceClient");

// Class OSDKModule.OSDKSettings
// 0x0060 (0x0098 - 0x0038)
class UOSDKSettings : public UObject
{
public:
	bool                                          bCreateOSDKOnInit;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSteam;                                      // 0x0039(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoSteamInEditorMode;                              // 0x003A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseProvidedLibcurl;                               // 0x003B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultProjectName;                                // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultLoginURL;                                   // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSignUpURL;                                  // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultConfigSandbox;                              // 0x0070(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultUserSandbox;                                // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSHTTPClientLoggingFlags                     OSHTTPClientLoggingFlags;                          // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKSettings">();
	}
	static class UOSDKSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKSettings>();
	}
};
static_assert(alignof(UOSDKSettings) == 0x000008, "Wrong alignment on UOSDKSettings");
static_assert(sizeof(UOSDKSettings) == 0x000098, "Wrong size on UOSDKSettings");
static_assert(offsetof(UOSDKSettings, bCreateOSDKOnInit) == 0x000038, "Member 'UOSDKSettings::bCreateOSDKOnInit' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bEnableSteam) == 0x000039, "Member 'UOSDKSettings::bEnableSteam' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bNoSteamInEditorMode) == 0x00003A, "Member 'UOSDKSettings::bNoSteamInEditorMode' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bUseProvidedLibcurl) == 0x00003B, "Member 'UOSDKSettings::bUseProvidedLibcurl' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultProjectName) == 0x000040, "Member 'UOSDKSettings::DefaultProjectName' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultLoginURL) == 0x000050, "Member 'UOSDKSettings::DefaultLoginURL' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultSignUpURL) == 0x000060, "Member 'UOSDKSettings::DefaultSignUpURL' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultConfigSandbox) == 0x000070, "Member 'UOSDKSettings::DefaultConfigSandbox' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultUserSandbox) == 0x000080, "Member 'UOSDKSettings::DefaultUserSandbox' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, OSHTTPClientLoggingFlags) == 0x000090, "Member 'UOSDKSettings::OSHTTPClientLoggingFlags' has a wrong offset!");

// Class OSDKModule.OSDK
// 0x0008 (0x0048 - 0x0040)
class UOSDK final : public UOSDKFutureObject
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginNewGameSession(bool bSimulationRunning);
	class UOSDKWebServiceClient* CreateWebServiceClientWithUserId(const struct FOSDKUserId& UserId, const struct FOSDKClientConfig& ClientConfig);
	class UOSDKWebServiceClient* CreateWebServiceClientWithUserInfo(const struct FOSDKUserInfo& UserInfo, const struct FOSDKClientConfig& ClientConfig);
	class FString GetHardwareName();
	class FString GetSessionId();
	bool IsNetworkAvailable();
	void PauseGameSimulation();
	void StartGameSimulation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDK">();
	}
	static class UOSDK* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDK>();
	}
};
static_assert(alignof(UOSDK) == 0x000008, "Wrong alignment on UOSDK");
static_assert(sizeof(UOSDK) == 0x000048, "Wrong size on UOSDK");

// Class OSDKModule.OSDKMembershipAccountClient
// 0x0000 (0x0038 - 0x0038)
class UOSDKMembershipAccountClient final : public UObject
{
public:
	class UOSDKMembershipAccountClient* SetWebServiceClient(class UOSDKWebServiceClient* WebServiceClient);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKMembershipAccountClient">();
	}
	static class UOSDKMembershipAccountClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKMembershipAccountClient>();
	}
};
static_assert(alignof(UOSDKMembershipAccountClient) == 0x000008, "Wrong alignment on UOSDKMembershipAccountClient");
static_assert(sizeof(UOSDKMembershipAccountClient) == 0x000038, "Wrong size on UOSDKMembershipAccountClient");

// Class OSDKModule.OSDKMetricsClient
// 0x0000 (0x0038 - 0x0038)
class UOSDKMetricsClient final : public UObject
{
public:
	class UOSDKMetricsClient* SetWebServiceClient(class UOSDKWebServiceClient* WebServiceClient);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKMetricsClient">();
	}
	static class UOSDKMetricsClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKMetricsClient>();
	}
};
static_assert(alignof(UOSDKMetricsClient) == 0x000008, "Wrong alignment on UOSDKMetricsClient");
static_assert(sizeof(UOSDKMetricsClient) == 0x000038, "Wrong size on UOSDKMetricsClient");

// Class OSDKModule.OSDKPlayerItemsClient
// 0x0000 (0x0038 - 0x0038)
class UOSDKPlayerItemsClient final : public UObject
{
public:
	class UOSDKPlayerItemsClient* SetWebServiceClient(class UOSDKWebServiceClient* WebServiceClient);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKPlayerItemsClient">();
	}
	static class UOSDKPlayerItemsClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKPlayerItemsClient>();
	}
};
static_assert(alignof(UOSDKPlayerItemsClient) == 0x000008, "Wrong alignment on UOSDKPlayerItemsClient");
static_assert(sizeof(UOSDKPlayerItemsClient) == 0x000038, "Wrong size on UOSDKPlayerItemsClient");

// Class OSDKModule.OSDKPlayerStatsClient
// 0x0000 (0x0038 - 0x0038)
class UOSDKPlayerStatsClient final : public UObject
{
public:
	class UOSDKPlayerStatsClient* SetWebServiceClient(class UOSDKWebServiceClient* WebServiceClient);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKPlayerStatsClient">();
	}
	static class UOSDKPlayerStatsClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKPlayerStatsClient>();
	}
};
static_assert(alignof(UOSDKPlayerStatsClient) == 0x000008, "Wrong alignment on UOSDKPlayerStatsClient");
static_assert(sizeof(UOSDKPlayerStatsClient) == 0x000038, "Wrong size on UOSDKPlayerStatsClient");

// Class OSDKModule.OSDKStatsInfo
// 0x0048 (0x0080 - 0x0038)
class UOSDKStatsInfo final : public UObject
{
public:
	int32                                         CurrentCountOfQueuedOfRequests;                    // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentCountOfActiveRequests;                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfRequests;                                   // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfResponseSuccesses;                          // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfResponseFailures;                           // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfSerializationMilliseconds;                    // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfRequestMilliseconds;                          // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfResponseMilliseconds;                         // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfDeserializationMilliseconds;                  // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfSentBytes;                                    // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumOfReceivedBytes;                                // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentCountOfQueuedMetrics;                       // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfMetrics;                                    // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfDroppedMetrics;                             // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountOfMetricFlushes;                              // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastMetricFlushTime;                               // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKStatsInfo">();
	}
	static class UOSDKStatsInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKStatsInfo>();
	}
};
static_assert(alignof(UOSDKStatsInfo) == 0x000008, "Wrong alignment on UOSDKStatsInfo");
static_assert(sizeof(UOSDKStatsInfo) == 0x000080, "Wrong size on UOSDKStatsInfo");
static_assert(offsetof(UOSDKStatsInfo, CurrentCountOfQueuedOfRequests) == 0x000038, "Member 'UOSDKStatsInfo::CurrentCountOfQueuedOfRequests' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CurrentCountOfActiveRequests) == 0x00003C, "Member 'UOSDKStatsInfo::CurrentCountOfActiveRequests' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfRequests) == 0x000040, "Member 'UOSDKStatsInfo::CountOfRequests' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfResponseSuccesses) == 0x000044, "Member 'UOSDKStatsInfo::CountOfResponseSuccesses' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfResponseFailures) == 0x000048, "Member 'UOSDKStatsInfo::CountOfResponseFailures' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfSerializationMilliseconds) == 0x00004C, "Member 'UOSDKStatsInfo::SumOfSerializationMilliseconds' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfRequestMilliseconds) == 0x000050, "Member 'UOSDKStatsInfo::SumOfRequestMilliseconds' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfResponseMilliseconds) == 0x000054, "Member 'UOSDKStatsInfo::SumOfResponseMilliseconds' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfDeserializationMilliseconds) == 0x000058, "Member 'UOSDKStatsInfo::SumOfDeserializationMilliseconds' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfSentBytes) == 0x00005C, "Member 'UOSDKStatsInfo::SumOfSentBytes' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, SumOfReceivedBytes) == 0x000060, "Member 'UOSDKStatsInfo::SumOfReceivedBytes' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CurrentCountOfQueuedMetrics) == 0x000064, "Member 'UOSDKStatsInfo::CurrentCountOfQueuedMetrics' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfMetrics) == 0x000068, "Member 'UOSDKStatsInfo::CountOfMetrics' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfDroppedMetrics) == 0x00006C, "Member 'UOSDKStatsInfo::CountOfDroppedMetrics' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, CountOfMetricFlushes) == 0x000070, "Member 'UOSDKStatsInfo::CountOfMetricFlushes' has a wrong offset!");
static_assert(offsetof(UOSDKStatsInfo, LastMetricFlushTime) == 0x000078, "Member 'UOSDKStatsInfo::LastMetricFlushTime' has a wrong offset!");

}


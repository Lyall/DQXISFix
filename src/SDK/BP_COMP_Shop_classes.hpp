#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_COMP_Shop

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "BP_COMP_FacilityBase_classes.hpp"


namespace SDK
{

// DynamicClass BP_COMP_Shop.BP_COMP_Shop_C
// 0x0050 (0x01B8 - 0x0168)
class UBP_COMP_Shop_C final : public UBP_COMP_FacilityBase_C
{
public:
	struct FJackLDT_ShopTable                     NameId;                                            // 0x0168(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackLDT_ShopTable                     Onest_BrokenAfter_ID;                              // 0x0178(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackLDT_ShopTable                     Twond_ID;                                          // 0x0188(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   ShopTalkEndEventDispatcher;                        // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FJackLDT_ShopTable                     SScenario_ID;                                      // 0x01A8(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	void GetNowShopID(class FName* bpp__ShopID__pf);
	void ShopTalkEnd();
	void UniqueMenuOpen(class UJackUMGWidgetBase** bpp__Result__pf);
	void ShopTalkEndEventDispatcher__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_COMP_Shop_C">();
	}
	static class UBP_COMP_Shop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_COMP_Shop_C>();
	}
};
static_assert(alignof(UBP_COMP_Shop_C) == 0x000008, "Wrong alignment on UBP_COMP_Shop_C");
static_assert(sizeof(UBP_COMP_Shop_C) == 0x0001B8, "Wrong size on UBP_COMP_Shop_C");
static_assert(offsetof(UBP_COMP_Shop_C, NameId) == 0x000168, "Member 'UBP_COMP_Shop_C::NameId' has a wrong offset!");
static_assert(offsetof(UBP_COMP_Shop_C, Onest_BrokenAfter_ID) == 0x000178, "Member 'UBP_COMP_Shop_C::Onest_BrokenAfter_ID' has a wrong offset!");
static_assert(offsetof(UBP_COMP_Shop_C, Twond_ID) == 0x000188, "Member 'UBP_COMP_Shop_C::Twond_ID' has a wrong offset!");
static_assert(offsetof(UBP_COMP_Shop_C, ShopTalkEndEventDispatcher) == 0x000198, "Member 'UBP_COMP_Shop_C::ShopTalkEndEventDispatcher' has a wrong offset!");
static_assert(offsetof(UBP_COMP_Shop_C, SScenario_ID) == 0x0001A8, "Member 'UBP_COMP_Shop_C::SScenario_ID' has a wrong offset!");

}


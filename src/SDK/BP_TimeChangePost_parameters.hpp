#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeChangePost

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_TimeChangePost.BP_TimeChangePost_C.CopyNormalParamForH
// 0x0008 (0x0008 - 0x0000)
struct BP_TimeChangePost_C_CopyNormalParamForH final
{
public:
	class UClass*                                 bpp__BaseClass__pf;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_CopyNormalParamForH) == 0x000008, "Wrong alignment on BP_TimeChangePost_C_CopyNormalParamForH");
static_assert(sizeof(BP_TimeChangePost_C_CopyNormalParamForH) == 0x000008, "Wrong size on BP_TimeChangePost_C_CopyNormalParamForH");
static_assert(offsetof(BP_TimeChangePost_C_CopyNormalParamForH, bpp__BaseClass__pf) == 0x000000, "Member 'BP_TimeChangePost_C_CopyNormalParamForH::bpp__BaseClass__pf' has a wrong offset!");

// Function BP_TimeChangePost.BP_TimeChangePost_C.ExecuteUbergraph_BP_TimeChangePost_1
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1) == 0x000004, "Wrong alignment on BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1");
static_assert(sizeof(BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1) == 0x000004, "Wrong size on BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1");
static_assert(offsetof(BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_TimeChangePost_C_ExecuteUbergraph_BP_TimeChangePost_1::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_TimeChangePost.BP_TimeChangePost_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TimeChangePost_C_ReceiveTick final
{
public:
	float                                         bpp__DeltaSeconds__pf;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TimeChangePost_C_ReceiveTick");
static_assert(sizeof(BP_TimeChangePost_C_ReceiveTick) == 0x000004, "Wrong size on BP_TimeChangePost_C_ReceiveTick");
static_assert(offsetof(BP_TimeChangePost_C_ReceiveTick, bpp__DeltaSeconds__pf) == 0x000000, "Member 'BP_TimeChangePost_C_ReceiveTick::bpp__DeltaSeconds__pf' has a wrong offset!");

// Function BP_TimeChangePost.BP_TimeChangePost_C.SetWeather
// 0x0001 (0x0001 - 0x0000)
struct BP_TimeChangePost_C_SetWeather final
{
public:
	EJackWorldWeather                             bpp__Weather__pf;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_SetWeather) == 0x000001, "Wrong alignment on BP_TimeChangePost_C_SetWeather");
static_assert(sizeof(BP_TimeChangePost_C_SetWeather) == 0x000001, "Wrong size on BP_TimeChangePost_C_SetWeather");
static_assert(offsetof(BP_TimeChangePost_C_SetWeather, bpp__Weather__pf) == 0x000000, "Member 'BP_TimeChangePost_C_SetWeather::bpp__Weather__pf' has a wrong offset!");

// Function BP_TimeChangePost.BP_TimeChangePost_C.WeatherChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_TimeChangePost_C_WeatherChanged final
{
public:
	EJackWorldWeather                             bpp__NewWeather__pf;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_WeatherChanged) == 0x000001, "Wrong alignment on BP_TimeChangePost_C_WeatherChanged");
static_assert(sizeof(BP_TimeChangePost_C_WeatherChanged) == 0x000001, "Wrong size on BP_TimeChangePost_C_WeatherChanged");
static_assert(offsetof(BP_TimeChangePost_C_WeatherChanged, bpp__NewWeather__pf) == 0x000000, "Member 'BP_TimeChangePost_C_WeatherChanged::bpp__NewWeather__pf' has a wrong offset!");

// DelegateFunction BP_TimeChangePost.BP_TimeChangePost_C.CallWeatherChangeForTimeChangePost__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature final
{
public:
	EJackWorldWeather                             bpp__NewWeather__pf;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature) == 0x000001, "Wrong alignment on BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature");
static_assert(sizeof(BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature) == 0x000001, "Wrong size on BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature");
static_assert(offsetof(BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature, bpp__NewWeather__pf) == 0x000000, "Member 'BP_TimeChangePost_C_CallWeatherChangeForTimeChangePost__DelegateSignature::bpp__NewWeather__pf' has a wrong offset!");

}


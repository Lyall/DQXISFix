#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_DataTable

#include "Basic.hpp"

#include "BP_FLIB_DataTable_classes.hpp"
#include "BP_FLIB_DataTable_parameters.hpp"


namespace SDK
{

// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableEventItem
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_ItemTable_EventGet      In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableItem_EventGet      Out                                                    (Parm, OutParm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableEventItem(const struct FJackLDT_ItemTable_EventGet& In, class UObject* __WorldContext, struct FJackDataTableItem_EventGet* Out, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableEventItem");

	Params::BP_FLIB_DataTable_C_GetDataTableEventItem Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableMap
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Row_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableMap                Out                                                    (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableMap(class FName Row_Name, class UObject* __WorldContext, struct FJackDataTableMap* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableMap");

	Params::BP_FLIB_DataTable_C_GetDataTableMap Parms{};

	Parms.Row_Name = Row_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableCutSceneInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             In_Name                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableCutSceneInfo       Out                                                    (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableCutSceneInfo(class FName In_Name, class UObject* __WorldContext, struct FJackDataTableCutSceneInfo* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableCutSceneInfo");

	Params::BP_FLIB_DataTable_C_GetDataTableCutSceneInfo Parms{};

	Parms.In_Name = In_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableRestart
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             In_Name                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableRestart            Out                                                    (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableRestart(class FName In_Name, class UObject* __WorldContext, struct FJackDataTableRestart* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableRestart");

	Params::BP_FLIB_DataTable_C_GetDataTableRestart Parms{};

	Parms.In_Name = In_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableBGM
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             In_Name                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableBGM                Out                                                    (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableBGM(class FName In_Name, class UObject* __WorldContext, struct FJackDataTableBGM* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableBGM");

	Params::BP_FLIB_DataTable_C_GetDataTableBGM Parms{};

	Parms.In_Name = In_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableAction
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_Action                  In_Name                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableAction             Out                                                    (Parm, OutParm)
// class FName                             RowName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableAction(const struct FJackLDT_Action& In_Name, class UObject* __WorldContext, struct FJackDataTableAction* Out, class FName* RowName, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableAction");

	Params::BP_FLIB_DataTable_C_GetDataTableAction Parms{};

	Parms.In_Name = std::move(In_Name);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (RowName != nullptr)
		*RowName = Parms.RowName;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableEventItemGold
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_ItemTable_EventGet      In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_DataTable_C::GetDataTableEventItemGold(const struct FJackLDT_ItemTable_EventGet& In, class UObject* __WorldContext, int32* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableEventItemGold");

	Params::BP_FLIB_DataTable_C_GetDataTableEventItemGold Parms{};

	Parms.In = std::move(In);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetDataTableCSAddLevel
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Row_Name                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackDataTableCutSceneLevelLoadInfoOut                                                    (Parm, OutParm)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_DataTable_C::GetDataTableCSAddLevel(class FName Row_Name, class UObject* __WorldContext, struct FJackDataTableCutSceneLevelLoadInfo* Out, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetDataTableCSAddLevel");

	Params::BP_FLIB_DataTable_C_GetDataTableCSAddLevel Parms{};

	Parms.Row_Name = Row_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_FLIB_DataTable.BP_FLIB_DataTable_C.GetCutSceneInfoInBGM_ID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CS_ID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BGM_ID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_DataTable_C::GetCutSceneInfoInBGM_ID(class FName CS_ID, class UObject* __WorldContext, class FName* BGM_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_DataTable_C", "GetCutSceneInfoInBGM_ID");

	Params::BP_FLIB_DataTable_C_GetCutSceneInfoInBGM_ID Parms{};

	Parms.CS_ID = CS_ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BGM_ID != nullptr)
		*BGM_ID = Parms.BGM_ID;
}

}


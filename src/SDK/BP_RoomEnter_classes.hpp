#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoomEnter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// DynamicClass BP_RoomEnter.BP_RoomEnter_C
// 0x00C0 (0x0458 - 0x0398)
class ABP_RoomEnter_C final : public AActor
{
public:
	class UBoxComponent*                          Inroom;                                            // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextRenderComponent*                   TextRender1;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABP_RoomControl_C*                      RoomControl;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x03B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x03C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x03C8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x03CC(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x03D0(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	void BndEvt__InRoom_K2Node_ComponentBoundEvent_131_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_RoomEnter_C">();
	}
	static class ABP_RoomEnter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoomEnter_C>();
	}
};
static_assert(alignof(ABP_RoomEnter_C) == 0x000008, "Wrong alignment on ABP_RoomEnter_C");
static_assert(sizeof(ABP_RoomEnter_C) == 0x000458, "Wrong size on ABP_RoomEnter_C");
static_assert(offsetof(ABP_RoomEnter_C, Inroom) == 0x000398, "Member 'ABP_RoomEnter_C::Inroom' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, TextRender1) == 0x0003A0, "Member 'ABP_RoomEnter_C::TextRender1' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, RoomControl) == 0x0003A8, "Member 'ABP_RoomEnter_C::RoomControl' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0003B0, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_OtherActor) == 0x0003B8, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_OtherComp) == 0x0003C0, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0003C8, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x0003CC, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_RoomEnter_C, K2Node_ComponentBoundEvent_SweepResult) == 0x0003D0, "Member 'ABP_RoomEnter_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

}


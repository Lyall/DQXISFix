#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player_P001

#include "Basic.hpp"

#include "ENUM_CharacterBodyType_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"
#include "ENUM_CoordinateMeshSlot_structs.hpp"


namespace SDK
{

// DynamicClass BP_Player_P001.BP_Player_P001_C
// 0x0240 (0x16E0 - 0x14A0)
class ABP_Player_P001_C : public AJackPlayerCharacter
{
public:
	uint8                                         Pad_14A0[0x8];                                     // 0x14A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USQEXSEADAutoSeComponent*               SQEXSEADAutoSe;                                    // 0x14A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackCharacterUIComponent*              JackCharacterUI;                                   // 0x14B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x14B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackAnimMontageWaiterComponent*        JackAnimMontageWaiter;                             // 0x14C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                      PhysicsCollideCapsule;                             // 0x14C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth3;                                            // 0x14D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth2;                                            // 0x14D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Cloth1;                                            // 0x14E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_EyeLookAtManager_C*            BP_COMP_EyeLookAtManager;                          // 0x14E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackGroundAffectComponent*             JackGroundAffect;                                  // 0x14F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_RigidBodyManager_C*            BP_COMP_RigidBodyManager;                          // 0x14F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_FacialAnimManager_C*           BP_COMP_FacialAnimManagerer;                       // 0x1500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackPropsComponent*                    JackProps;                                         // 0x1508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackFootIKComponent*                   JackFootIK;                                        // 0x1510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackEncountTriggerCapsuleComponent*    JackEncountTriggerCapsule;                         // 0x1518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Accessory;                                         // 0x1520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Beard;                                             // 0x1528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Hair;                                              // 0x1530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 Face;                                              // 0x1538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 LowerBody;                                         // 0x1540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 UpperBody;                                         // 0x1548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 AnimArrayPoseWaitSec;                              // 0x1550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayPose;                                     // 0x1560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayPoseLower;                                // 0x1570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayShiver;                                   // 0x1580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayShiverLower;                              // 0x1590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayHeat;                                     // 0x15A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayHeatLower;                                // 0x15B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   AnimParadeStart;                                   // 0x15C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AnimParadeEnd;                                     // 0x15C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayWindBreakShiver;                          // 0x15D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           AnimArrayWindBreakShiverLower;                     // 0x15E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   AnimWindBreakStart;                                // 0x15F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AnimWindBreakEnd;                                  // 0x15F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrevPossesdPlayerControl;                          // 0x1600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENUM_CharacterBodyType                        BodyType;                                          // 0x1601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1602[0x6];                                     // 0x1602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundBase*>                     AnimNotifyExternSound;                             // 0x1608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          IsOverrideParadeChanged;                           // 0x1618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1619[0x7];                                     // 0x1619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackMaterialCoordinatorComponent*> TmpMaterialCood;                                   // 0x1620(0x0010)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bChangeParadeModeDisable;                          // 0x1630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackPlayableMovementDefault                  K2Node_Event_Prev;                                 // 0x1631(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackPlayableMovementDefault                  K2Node_Event_Next;                                 // 0x1632(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_CustomEvent_IsParadeCoordinate;             // 0x1633(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1634[0x4];                                     // 0x1634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_PlayerActor;                    // 0x1638(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_ControlActor;                   // 0x1640(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1648(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164C[0x4];                                     // 0x164C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_Player_P001_C*                     K2Node_DynamicCast_AsABP_Player_P001;              // 0x1650(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1658(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1659[0x7];                                     // 0x1659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_PropName;               // 0x1660(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_ComponentBoundEvent_PropName2;              // 0x1668(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_PropActor;              // 0x1670(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x1678(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_167C[0x4];                                     // 0x167C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x1680(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1690(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1694[0x4];                                     // 0x1694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackMaterialCoordinatorComponent*      CallFunc_Array_Get_Item;                           // 0x1698(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackPlayableMovementComponent*         K2Node_DynamicCast_AsJack_Playable_Movement_Component; // 0x16A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x16A8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16A9[0x7];                                     // 0x16A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* PlayerActor, class AActor* ControlActor)> K2Node_CreateDelegate_OutputDelegate2;             // 0x16B0(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UJackMaterialCoordinatorComponent*> CallFunc_GetComponentsByClass_ReturnValue;         // 0x16C0(0x0010)(ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FJackLDT_TemporaryMaterialCoordinate   K2Node_MakeStruct_JackLDT_TemporaryMaterialCoordinate; // 0x16D0(0x0010)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)

public:
	void BndEvt__JackProps_K2Node_ComponentBoundEvent_0_JackPropAttachSignature__DelegateSignature(class FName bpp__PropName__pf, class AActor* bpp__PropActor__pf);
	void BndEvt__JackProps_K2Node_ComponentBoundEvent_1_JackPropDetachSignature__DelegateSignature(class FName bpp__PropName__pf);
	void CallChangeParadeCoordinate(bool bpp__IsParadeCoordinate__pf);
	void ChangeMovementDefaultMovement(EJackPlayableMovementDefault bpp__InputPin__pf);
	void CustomEvent_0(class AActor* bpp__PlayerActor__pf, class AActor* bpp__ControlActor__pf);
	void CustomEvent_2();
	void ExecuteUbergraph_BP_Player_P001_2(int32 bpp__EntryPoint__pf);
	void ExecuteUbergraph_BP_Player_P001_4(int32 bpp__EntryPoint__pf);
	void GetCharacterBodyType(ENUM_CharacterBodyType* bpp__Result__pf);
	void GetDefaultMovement(EJackPlayableMovementDefault* bpp__Type__pf);
	void GetMeshByCoordinateSlotType(ENUM_CoordinateMeshSlot bpp__SlotType__pf, class USkeletalMeshComponent** bpp__SkeletalMeshComponent__pf);
	bool HasTaimatu();
	void IsMovementDefaultOverride(bool* bpp__IsOverride__pf);
	bool IsParadeCoordinate();
	void OnChangePlayableMovementDefault(EJackPlayableMovementDefault bpp__Prev__pf, EJackPlayableMovementDefault bpp__Next__pf);
	void OnFixupLooks();
	void OnPossesdPlayerNotControl();
	void PlayAnimWithName(class FName bpp__InName__pf);
	void PlayExternSoundWithAnimNotify(int32 bpp__PlayId__pf);
	void ReceiveBeginPlay();
	void ReceiveTick(float bpp__DeltaSeconds__pf);
	void SetAutoLookAtEnabledByParade(bool bpp__bEnable__pf);
	void SetDefaultMovementOverride(EJackPlayableMovementDefault bpp__NewMovementDefault__pf);
	void SetExternSoundWithAnimNotify(int32 bpp__PlayId__pf, class USoundBase* bpp__ExternSound__pf);
	void SetMovementMaxSeedWalk(bool bpp__ForceWalk__pf);
	void SetParadeMode();
	void SetParadeMovementDefault();
	void SetWaitAnims(TArray<class FName>* bpp__UpperAnim__pf, bool bpp__IsPoseAnim__pf, TArray<class FName>* bpp__LowerAnim__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_Player_P001_C">();
	}
	static class ABP_Player_P001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Player_P001_C>();
	}
};
static_assert(alignof(ABP_Player_P001_C) == 0x000010, "Wrong alignment on ABP_Player_P001_C");
static_assert(sizeof(ABP_Player_P001_C) == 0x0016E0, "Wrong size on ABP_Player_P001_C");
static_assert(offsetof(ABP_Player_P001_C, SQEXSEADAutoSe) == 0x0014A8, "Member 'ABP_Player_P001_C::SQEXSEADAutoSe' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackCharacterUI) == 0x0014B0, "Member 'ABP_Player_P001_C::JackCharacterUI' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackInteractiveActor) == 0x0014B8, "Member 'ABP_Player_P001_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackAnimMontageWaiter) == 0x0014C0, "Member 'ABP_Player_P001_C::JackAnimMontageWaiter' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, PhysicsCollideCapsule) == 0x0014C8, "Member 'ABP_Player_P001_C::PhysicsCollideCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Cloth3) == 0x0014D0, "Member 'ABP_Player_P001_C::Cloth3' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Cloth2) == 0x0014D8, "Member 'ABP_Player_P001_C::Cloth2' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Cloth1) == 0x0014E0, "Member 'ABP_Player_P001_C::Cloth1' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, BP_COMP_EyeLookAtManager) == 0x0014E8, "Member 'ABP_Player_P001_C::BP_COMP_EyeLookAtManager' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackGroundAffect) == 0x0014F0, "Member 'ABP_Player_P001_C::JackGroundAffect' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, BP_COMP_RigidBodyManager) == 0x0014F8, "Member 'ABP_Player_P001_C::BP_COMP_RigidBodyManager' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, BP_COMP_FacialAnimManagerer) == 0x001500, "Member 'ABP_Player_P001_C::BP_COMP_FacialAnimManagerer' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackProps) == 0x001508, "Member 'ABP_Player_P001_C::JackProps' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackFootIK) == 0x001510, "Member 'ABP_Player_P001_C::JackFootIK' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, JackEncountTriggerCapsule) == 0x001518, "Member 'ABP_Player_P001_C::JackEncountTriggerCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Accessory) == 0x001520, "Member 'ABP_Player_P001_C::Accessory' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Beard) == 0x001528, "Member 'ABP_Player_P001_C::Beard' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Hair) == 0x001530, "Member 'ABP_Player_P001_C::Hair' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Face) == 0x001538, "Member 'ABP_Player_P001_C::Face' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, LowerBody) == 0x001540, "Member 'ABP_Player_P001_C::LowerBody' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, UpperBody) == 0x001548, "Member 'ABP_Player_P001_C::UpperBody' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayPoseWaitSec) == 0x001550, "Member 'ABP_Player_P001_C::AnimArrayPoseWaitSec' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayPose) == 0x001560, "Member 'ABP_Player_P001_C::AnimArrayPose' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayPoseLower) == 0x001570, "Member 'ABP_Player_P001_C::AnimArrayPoseLower' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayShiver) == 0x001580, "Member 'ABP_Player_P001_C::AnimArrayShiver' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayShiverLower) == 0x001590, "Member 'ABP_Player_P001_C::AnimArrayShiverLower' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayHeat) == 0x0015A0, "Member 'ABP_Player_P001_C::AnimArrayHeat' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayHeatLower) == 0x0015B0, "Member 'ABP_Player_P001_C::AnimArrayHeatLower' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimParadeStart) == 0x0015C0, "Member 'ABP_Player_P001_C::AnimParadeStart' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimParadeEnd) == 0x0015C8, "Member 'ABP_Player_P001_C::AnimParadeEnd' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayWindBreakShiver) == 0x0015D0, "Member 'ABP_Player_P001_C::AnimArrayWindBreakShiver' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimArrayWindBreakShiverLower) == 0x0015E0, "Member 'ABP_Player_P001_C::AnimArrayWindBreakShiverLower' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimWindBreakStart) == 0x0015F0, "Member 'ABP_Player_P001_C::AnimWindBreakStart' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimWindBreakEnd) == 0x0015F8, "Member 'ABP_Player_P001_C::AnimWindBreakEnd' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, PrevPossesdPlayerControl) == 0x001600, "Member 'ABP_Player_P001_C::PrevPossesdPlayerControl' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, BodyType) == 0x001601, "Member 'ABP_Player_P001_C::BodyType' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, AnimNotifyExternSound) == 0x001608, "Member 'ABP_Player_P001_C::AnimNotifyExternSound' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, IsOverrideParadeChanged) == 0x001618, "Member 'ABP_Player_P001_C::IsOverrideParadeChanged' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, TmpMaterialCood) == 0x001620, "Member 'ABP_Player_P001_C::TmpMaterialCood' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, bChangeParadeModeDisable) == 0x001630, "Member 'ABP_Player_P001_C::bChangeParadeModeDisable' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_Event_Prev) == 0x001631, "Member 'ABP_Player_P001_C::K2Node_Event_Prev' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_Event_Next) == 0x001632, "Member 'ABP_Player_P001_C::K2Node_Event_Next' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_CustomEvent_IsParadeCoordinate) == 0x001633, "Member 'ABP_Player_P001_C::K2Node_CustomEvent_IsParadeCoordinate' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_CustomEvent_PlayerActor) == 0x001638, "Member 'ABP_Player_P001_C::K2Node_CustomEvent_PlayerActor' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_CustomEvent_ControlActor) == 0x001640, "Member 'ABP_Player_P001_C::K2Node_CustomEvent_ControlActor' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_Event_DeltaSeconds) == 0x001648, "Member 'ABP_Player_P001_C::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_DynamicCast_AsABP_Player_P001) == 0x001650, "Member 'ABP_Player_P001_C::K2Node_DynamicCast_AsABP_Player_P001' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_DynamicCast_bSuccess) == 0x001658, "Member 'ABP_Player_P001_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_ComponentBoundEvent_PropName) == 0x001660, "Member 'ABP_Player_P001_C::K2Node_ComponentBoundEvent_PropName' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_ComponentBoundEvent_PropName2) == 0x001668, "Member 'ABP_Player_P001_C::K2Node_ComponentBoundEvent_PropName2' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_ComponentBoundEvent_PropActor) == 0x001670, "Member 'ABP_Player_P001_C::K2Node_ComponentBoundEvent_PropActor' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Temp_int_Loop_Counter_Variable) == 0x001678, "Member 'ABP_Player_P001_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_CreateDelegate_OutputDelegate) == 0x001680, "Member 'ABP_Player_P001_C::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, Temp_int_Array_Index_Variable) == 0x001690, "Member 'ABP_Player_P001_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, CallFunc_Array_Get_Item) == 0x001698, "Member 'ABP_Player_P001_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_DynamicCast_AsJack_Playable_Movement_Component) == 0x0016A0, "Member 'ABP_Player_P001_C::K2Node_DynamicCast_AsJack_Playable_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_DynamicCast_bSuccess2) == 0x0016A8, "Member 'ABP_Player_P001_C::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_CreateDelegate_OutputDelegate2) == 0x0016B0, "Member 'ABP_Player_P001_C::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, CallFunc_GetComponentsByClass_ReturnValue) == 0x0016C0, "Member 'ABP_Player_P001_C::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_P001_C, K2Node_MakeStruct_JackLDT_TemporaryMaterialCoordinate) == 0x0016D0, "Member 'ABP_Player_P001_C::K2Node_MakeStruct_JackLDT_TemporaryMaterialCoordinate' has a wrong offset!");

}


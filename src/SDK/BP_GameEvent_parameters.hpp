#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameEvent

#include "Basic.hpp"

#include "JackGame_structs.hpp"


namespace SDK::Params
{

// Function BP_GameEvent.BP_GameEvent_C.ExecuteUbergraph_BP_GameEvent
// 0x0260 (0x0260 - 0x0000)
struct BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPossessPlayerControl_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPossessPlayerControl_ReturnValue2;     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_SaveDataCheck_C> K2Node_Event_Sender2;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGSaveDataCheckPoint                    K2Node_Event_CheckPoint4;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_SaveDataCheck_C> K2Node_Event_Sender;                               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGSaveDataCheckPoint                    K2Node_Event_CheckPoint3;                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackSaveLoadResult                           K2Node_Event_CheckRusult;                          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGSaveDataCheckPoint                    K2Node_Event_CheckPoint2;                          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopBGM_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRidingOnVehicle_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackVehicle*                           CallFunc_GetRidingOnVehicle_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableRestart                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0050)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGRestartMenuType                       CallFunc_GetRestartMenuResult_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     CallFunc_OpenMenu_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveRestartPointFlag_OutName;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSaveRestartPointFlag_IsInvalid;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveRestartPointFlag_OutName2;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSaveRestartPointFlag_IsInvalid2;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveRestartPointFlag_OutName3;         // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSaveRestartPointFlag_IsInvalid3;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x0130(0x0010)(ZeroConstructor, ReferenceParm)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable2;                             // 0x0140(0x0005)(NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable3;                             // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue2;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable4;                             // 0x0170(0x0005)(NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SlotIndex;                      // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackSaveLoadResult                           K2Node_CustomEvent_SaveLoadResult;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSoundManager*                      CallFunc_GetSoundManager_ReturnValue;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue2;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_LevelStreaming_C> K2Node_DynamicCast_AsBP_IF_Level_Streaming;        // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_CommonEvent_C>  K2Node_DynamicCast_AsBP_IF_Common_Event;           // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SlotIndex, EJackSaveLoadResult SaveLoadResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue2;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue3;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_LevelStreaming_C> K2Node_DynamicCast_AsBP_IF_Level_Streaming2;       // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue3;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_SaveDataCheck_C> K2Node_DynamicCast_AsBP_IF_Save_Data_Check;        // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGSaveDataCheckPoint                    K2Node_Event_CheckPoint;                           // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGSaveDataCheckResult                   K2Node_Event_Result;                               // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_SaveDataCheck_C> CallFunc_ExecuteSaveDataCheckResult_Sender_CastInput; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue4;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue3;         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackSibariManager*                     CallFunc_GetSibariManager_ReturnValue;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSScenario_SScenario;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSibariPlayFlag_ReturnValue;             // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent) == 0x000008, "Wrong alignment on BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent");
static_assert(sizeof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent) == 0x000260, "Wrong size on BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, EntryPoint) == 0x000000, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_CanPossessPlayerControl_ReturnValue) == 0x000004, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_CanPossessPlayerControl_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_CanPossessPlayerControl_ReturnValue2) == 0x000005, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_CanPossessPlayerControl_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_Sender2) == 0x000008, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_Sender2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_CheckPoint4) == 0x000018, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_CheckPoint4' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_Sender) == 0x000020, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_CheckPoint3) == 0x000030, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_CheckPoint3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_CheckRusult) == 0x000031, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_CheckRusult' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_CheckPoint2) == 0x000032, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_CheckPoint2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000038, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_StopBGM_ReturnValue) == 0x000040, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_StopBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_IsRidingOnVehicle_ReturnValue) == 0x000041, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_IsRidingOnVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetRidingOnVehicle_ReturnValue) == 0x000048, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetRidingOnVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetUMGManager_ReturnValue) == 0x0000C0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetAccessorSaveData_ReturnValue) == 0x0000C8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetRestartMenuResult_ReturnValue) == 0x0000D0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetRestartMenuResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_OpenMenu_ReturnValue) == 0x0000D8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_OpenMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_OutName) == 0x0000E8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_OutName' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_IsInvalid) == 0x0000F8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_IsInvalid' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_OutName2) == 0x000100, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_OutName2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_IsInvalid2) == 0x000110, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_IsInvalid2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_OutName3) == 0x000118, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_OutName3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSaveRestartPointFlag_IsInvalid3) == 0x000128, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSaveRestartPointFlag_IsInvalid3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, Temp_struct_Variable) == 0x000130, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, Temp_struct_Variable2) == 0x000140, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, Temp_struct_Variable3) == 0x000148, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetUMGManager_ReturnValue2) == 0x000158, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Not_PreBool_ReturnValue2) == 0x000160, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetAccessorSaveData_ReturnValue2) == 0x000168, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetAccessorSaveData_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, Temp_struct_Variable4) == 0x000170, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_CustomEvent_SlotIndex) == 0x000178, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_CustomEvent_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_CustomEvent_SaveLoadResult) == 0x00017C, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_CustomEvent_SaveLoadResult' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSoundManager_ReturnValue) == 0x000180, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSoundManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetStreamingLevel_ReturnValue) == 0x000188, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000190, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetLevelScriptActor_ReturnValue2) == 0x000198, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetLevelScriptActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_AsBP_IF_Level_Streaming) == 0x0001A0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_AsBP_IF_Level_Streaming' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_AsBP_IF_Common_Event) == 0x0001B8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_AsBP_IF_Common_Event' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_bSuccess2) == 0x0001C8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_CreateDelegate_OutputDelegate) == 0x0001D0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetStreamingLevel_ReturnValue2) == 0x0001E0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetStreamingLevel_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetLevelScriptActor_ReturnValue3) == 0x0001E8, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetLevelScriptActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_AsBP_IF_Level_Streaming2) == 0x0001F0, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_AsBP_IF_Level_Streaming2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_bSuccess3) == 0x000200, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetUMGManager_ReturnValue3) == 0x000208, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetUMGManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_AsBP_IF_Save_Data_Check) == 0x000210, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_AsBP_IF_Save_Data_Check' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_DynamicCast_bSuccess4) == 0x000220, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_CheckPoint) == 0x000221, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_CheckPoint' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_Event_Result) == 0x000222, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_Event_Result' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_ExecuteSaveDataCheckResult_Sender_CastInput) == 0x000228, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_ExecuteSaveDataCheckResult_Sender_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, K2Node_SwitchEnum2_CmpSuccess) == 0x000238, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetUMGManager_ReturnValue4) == 0x000240, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetUMGManager_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetAccessorSaveData_ReturnValue3) == 0x000248, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetAccessorSaveData_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_GetSibariManager_ReturnValue) == 0x000250, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_GetSibariManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_IsSScenario_SScenario) == 0x000258, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_IsSScenario_SScenario' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_IsSibariPlayFlag_ReturnValue) == 0x000259, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_IsSibariPlayFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Not_PreBool_ReturnValue3) == 0x00025A, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_BooleanAND_ReturnValue) == 0x00025B, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent, CallFunc_Not_PreBool_ReturnValue4) == 0x00025C, "Member 'BP_GameEvent_C_ExecuteUbergraph_BP_GameEvent::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.OnFinishSaveDataCheck
// 0x0002 (0x0002 - 0x0000)
struct BP_GameEvent_C_OnFinishSaveDataCheck final
{
public:
	EJackUMGSaveDataCheckPoint                    CheckPoint;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGSaveDataCheckResult                   Result;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_OnFinishSaveDataCheck) == 0x000001, "Wrong alignment on BP_GameEvent_C_OnFinishSaveDataCheck");
static_assert(sizeof(BP_GameEvent_C_OnFinishSaveDataCheck) == 0x000002, "Wrong size on BP_GameEvent_C_OnFinishSaveDataCheck");
static_assert(offsetof(BP_GameEvent_C_OnFinishSaveDataCheck, CheckPoint) == 0x000000, "Member 'BP_GameEvent_C_OnFinishSaveDataCheck::CheckPoint' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_OnFinishSaveDataCheck, Result) == 0x000001, "Member 'BP_GameEvent_C_OnFinishSaveDataCheck::Result' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.OnFinishLoadAsync_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_GameEvent_C_OnFinishLoadAsync_Event_0 final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackSaveLoadResult                           SaveLoadResult;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_OnFinishLoadAsync_Event_0) == 0x000004, "Wrong alignment on BP_GameEvent_C_OnFinishLoadAsync_Event_0");
static_assert(sizeof(BP_GameEvent_C_OnFinishLoadAsync_Event_0) == 0x000008, "Wrong size on BP_GameEvent_C_OnFinishLoadAsync_Event_0");
static_assert(offsetof(BP_GameEvent_C_OnFinishLoadAsync_Event_0, SlotIndex) == 0x000000, "Member 'BP_GameEvent_C_OnFinishLoadAsync_Event_0::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_OnFinishLoadAsync_Event_0, SaveLoadResult) == 0x000004, "Member 'BP_GameEvent_C_OnFinishLoadAsync_Event_0::SaveLoadResult' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.OnDisplayMessageFromSaveDataCheck
// 0x0001 (0x0001 - 0x0000)
struct BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck final
{
public:
	EJackUMGSaveDataCheckPoint                    CheckPoint;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck) == 0x000001, "Wrong alignment on BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck");
static_assert(sizeof(BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck) == 0x000001, "Wrong size on BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck");
static_assert(offsetof(BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck, CheckPoint) == 0x000000, "Member 'BP_GameEvent_C_OnDisplayMessageFromSaveDataCheck::CheckPoint' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.ExecuteSaveDataCheckResult
// 0x0018 (0x0018 - 0x0000)
struct BP_GameEvent_C_ExecuteSaveDataCheckResult final
{
public:
	TScriptInterface<class IBP_IF_SaveDataCheck_C> Sender;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGSaveDataCheckPoint                    CheckPoint;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackSaveLoadResult                           CheckRusult;                                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_ExecuteSaveDataCheckResult) == 0x000008, "Wrong alignment on BP_GameEvent_C_ExecuteSaveDataCheckResult");
static_assert(sizeof(BP_GameEvent_C_ExecuteSaveDataCheckResult) == 0x000018, "Wrong size on BP_GameEvent_C_ExecuteSaveDataCheckResult");
static_assert(offsetof(BP_GameEvent_C_ExecuteSaveDataCheckResult, Sender) == 0x000000, "Member 'BP_GameEvent_C_ExecuteSaveDataCheckResult::Sender' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteSaveDataCheckResult, CheckPoint) == 0x000010, "Member 'BP_GameEvent_C_ExecuteSaveDataCheckResult::CheckPoint' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteSaveDataCheckResult, CheckRusult) == 0x000011, "Member 'BP_GameEvent_C_ExecuteSaveDataCheckResult::CheckRusult' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.ExecuteSaveDataCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_GameEvent_C_ExecuteSaveDataCheck final
{
public:
	TScriptInterface<class IBP_IF_SaveDataCheck_C> Sender;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGSaveDataCheckPoint                    CheckPoint;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_ExecuteSaveDataCheck) == 0x000008, "Wrong alignment on BP_GameEvent_C_ExecuteSaveDataCheck");
static_assert(sizeof(BP_GameEvent_C_ExecuteSaveDataCheck) == 0x000018, "Wrong size on BP_GameEvent_C_ExecuteSaveDataCheck");
static_assert(offsetof(BP_GameEvent_C_ExecuteSaveDataCheck, Sender) == 0x000000, "Member 'BP_GameEvent_C_ExecuteSaveDataCheck::Sender' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ExecuteSaveDataCheck, CheckPoint) == 0x000010, "Member 'BP_GameEvent_C_ExecuteSaveDataCheck::CheckPoint' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.CheckUniqueRestartPoint
// 0x00A8 (0x00A8 - 0x0000)
struct BP_GameEvent_C_CheckUniqueRestartPoint final
{
public:
	class FString                                 TempTown;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TempPray;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene;    // 0x0028(0x0010)(NoDestructor)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCutSceneFlag_Flag;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart;                 // 0x0048(0x0010)(NoDestructor)
	bool                                          CallFunc_SaveRestartPoint_Result;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart2;                // 0x0060(0x0010)(NoDestructor)
	bool                                          CallFunc_SaveRestartPoint_Result2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveRestartPointFlag_OutName;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSaveRestartPointFlag_IsInvalid;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue3;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSaveRestartPointFlag_OutName2;         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSaveRestartPointFlag_IsInvalid2;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameEvent_C_CheckUniqueRestartPoint) == 0x000008, "Wrong alignment on BP_GameEvent_C_CheckUniqueRestartPoint");
static_assert(sizeof(BP_GameEvent_C_CheckUniqueRestartPoint) == 0x0000A8, "Wrong size on BP_GameEvent_C_CheckUniqueRestartPoint");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, TempTown) == 0x000000, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::TempTown' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, TempPray) == 0x000010, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::TempPray' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetSaveData_ReturnValue) == 0x000020, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene) == 0x000028, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetActiveMapID_ReturnValue) == 0x000038, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetCutSceneFlag_Flag) == 0x000040, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetCutSceneFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, K2Node_MakeStruct_JackLDT_Restart) == 0x000048, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::K2Node_MakeStruct_JackLDT_Restart' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_SaveRestartPoint_Result) == 0x000058, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_SaveRestartPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, K2Node_MakeStruct_JackLDT_Restart2) == 0x000060, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::K2Node_MakeStruct_JackLDT_Restart2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_SaveRestartPoint_Result2) == 0x000070, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_SaveRestartPoint_Result2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000071, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x000072, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_BooleanOR_ReturnValue) == 0x000073, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetSaveRestartPointFlag_OutName) == 0x000078, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetSaveRestartPointFlag_OutName' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetSaveRestartPointFlag_IsInvalid) == 0x000088, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetSaveRestartPointFlag_IsInvalid' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_EqualEqual_StrStr_ReturnValue3) == 0x000089, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_EqualEqual_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetSaveRestartPointFlag_OutName2) == 0x000090, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetSaveRestartPointFlag_OutName2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_CheckUniqueRestartPoint, CallFunc_GetSaveRestartPointFlag_IsInvalid2) == 0x0000A0, "Member 'BP_GameEvent_C_CheckUniqueRestartPoint::CallFunc_GetSaveRestartPointFlag_IsInvalid2' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.ReturnBackupRestartPoint
// 0x0048 (0x0048 - 0x0000)
struct BP_GameEvent_C_ReturnBackupRestartPoint final
{
public:
	bool                                          CallFunc_IsInvalidRestartPointName_OutResult;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvalidRestartPointName_OutResult2;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart;                 // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_SaveRestartPoint_Result;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart2;                // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_SaveRestartPoint_Result2;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameEvent_C_ReturnBackupRestartPoint) == 0x000008, "Wrong alignment on BP_GameEvent_C_ReturnBackupRestartPoint");
static_assert(sizeof(BP_GameEvent_C_ReturnBackupRestartPoint) == 0x000048, "Wrong size on BP_GameEvent_C_ReturnBackupRestartPoint");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_IsInvalidRestartPointName_OutResult) == 0x000000, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_IsInvalidRestartPointName_OutResult' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_IsInvalidRestartPointName_OutResult2) == 0x000002, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_IsInvalidRestartPointName_OutResult2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_Not_PreBool_ReturnValue2) == 0x000003, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_Conv_StringToName_ReturnValue) == 0x000008, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, K2Node_MakeStruct_JackLDT_Restart) == 0x000010, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::K2Node_MakeStruct_JackLDT_Restart' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_SaveRestartPoint_Result) == 0x000020, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_SaveRestartPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_Conv_StringToName_ReturnValue2) == 0x000028, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, K2Node_MakeStruct_JackLDT_Restart2) == 0x000030, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::K2Node_MakeStruct_JackLDT_Restart2' has a wrong offset!");
static_assert(offsetof(BP_GameEvent_C_ReturnBackupRestartPoint, CallFunc_SaveRestartPoint_Result2) == 0x000040, "Member 'BP_GameEvent_C_ReturnBackupRestartPoint::CallFunc_SaveRestartPoint_Result2' has a wrong offset!");

// Function BP_GameEvent.BP_GameEvent_C.StopSoundForAllDead
// 0x0008 (0x0008 - 0x0000)
struct BP_GameEvent_C_StopSoundForAllDead final
{
public:
	class UJackSoundManager*                      CallFunc_GetSoundManager_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameEvent_C_StopSoundForAllDead) == 0x000008, "Wrong alignment on BP_GameEvent_C_StopSoundForAllDead");
static_assert(sizeof(BP_GameEvent_C_StopSoundForAllDead) == 0x000008, "Wrong size on BP_GameEvent_C_StopSoundForAllDead");
static_assert(offsetof(BP_GameEvent_C_StopSoundForAllDead, CallFunc_GetSoundManager_ReturnValue) == 0x000000, "Member 'BP_GameEvent_C_StopSoundForAllDead::CallFunc_GetSoundManager_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_COMP_QuestTargetNPC

#include "Basic.hpp"

#include "ENUM_Schedule_Pattern_structs.hpp"
#include "STRUCT_QuestText_structs.hpp"


namespace SDK::Params
{

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.CalcProgressText
// 0x0028 (0x0028 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_CalcProgressText final
{
public:
	struct FSTRUCT_QuestText                      bpp__Ret__pf;                                      // 0x0000(0x0028)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_CalcProgressText) == 0x000008, "Wrong alignment on BP_COMP_QuestTargetNPC_C_CalcProgressText");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_CalcProgressText) == 0x000028, "Wrong size on BP_COMP_QuestTargetNPC_C_CalcProgressText");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_CalcProgressText, bpp__Ret__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_CalcProgressText::bpp__Ret__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.CheckSerifuAfterProc
// 0x0008 (0x0008 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc final
{
public:
	class FName                                   bpp__ProcName__pf;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc) == 0x000008, "Wrong size on BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc, bpp__ProcName__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_CheckSerifuAfterProc::bpp__ProcName__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.ExecuteUbergraph_BP_COMP_QuestTargetNPC_0
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0) == 0x000004, "Wrong size on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_0::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.ExecuteUbergraph_BP_COMP_QuestTargetNPC_1
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1) == 0x000004, "Wrong size on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_1::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.ExecuteUbergraph_BP_COMP_QuestTargetNPC_3
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3) == 0x000004, "Wrong size on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_3::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.ExecuteUbergraph_BP_COMP_QuestTargetNPC_4
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4) == 0x000004, "Wrong size on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_4::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.ExecuteUbergraph_BP_COMP_QuestTargetNPC_5
// 0x0004 (0x0004 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5) == 0x000004, "Wrong alignment on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5) == 0x000004, "Wrong size on BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_ExecuteUbergraph_BP_COMP_QuestTargetNPC_5::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.IsProgressReject
// 0x0030 (0x0030 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_IsProgressReject final
{
public:
	bool                                          bpp__Reject__pf;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_QuestText                      bpp__RejectText__pf;                               // 0x0008(0x0028)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_IsProgressReject) == 0x000008, "Wrong alignment on BP_COMP_QuestTargetNPC_C_IsProgressReject");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_IsProgressReject) == 0x000030, "Wrong size on BP_COMP_QuestTargetNPC_C_IsProgressReject");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_IsProgressReject, bpp__Reject__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_IsProgressReject::bpp__Reject__pf' has a wrong offset!");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_IsProgressReject, bpp__RejectText__pf) == 0x000008, "Member 'BP_COMP_QuestTargetNPC_C_IsProgressReject::bpp__RejectText__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.IsProgressTalkedAfter
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter final
{
public:
	bool                                          bpp__After__pf;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter) == 0x000001, "Wrong alignment on BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter) == 0x000001, "Wrong size on BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter, bpp__After__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_IsProgressTalkedAfter::bpp__After__pf' has a wrong offset!");

// Function BP_COMP_QuestTargetNPC.BP_COMP_QuestTargetNPC_C.SetSchedulePattern
// 0x0001 (0x0001 - 0x0000)
struct BP_COMP_QuestTargetNPC_C_SetSchedulePattern final
{
public:
	ENUM_Schedule_Pattern                         bpp__Next__pf;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_COMP_QuestTargetNPC_C_SetSchedulePattern) == 0x000001, "Wrong alignment on BP_COMP_QuestTargetNPC_C_SetSchedulePattern");
static_assert(sizeof(BP_COMP_QuestTargetNPC_C_SetSchedulePattern) == 0x000001, "Wrong size on BP_COMP_QuestTargetNPC_C_SetSchedulePattern");
static_assert(offsetof(BP_COMP_QuestTargetNPC_C_SetSchedulePattern, bpp__Next__pf) == 0x000000, "Member 'BP_COMP_QuestTargetNPC_C_SetSchedulePattern::bpp__Next__pf' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugCutsceneControl

#include "Basic.hpp"

#include "BP_DebugCutsceneControl_classes.hpp"
#include "BP_DebugCutsceneControl_parameters.hpp"


namespace SDK
{

// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.ExecuteUbergraph_BP_DebugCutsceneControl
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::ExecuteUbergraph_BP_DebugCutsceneControl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "ExecuteUbergraph_BP_DebugCutsceneControl");

	Params::BP_DebugCutsceneControl_C_ExecuteUbergraph_BP_DebugCutsceneControl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.CoordChange
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::CoordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "CoordChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::CustomEvent_1(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "CustomEvent_1");

	Params::BP_DebugCutsceneControl_C_CustomEvent_1 Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.StartCutsceneControl
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::StartCutsceneControl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "StartCutsceneControl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.AutoSendCaption
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::AutoSendCaption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "AutoSendCaption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.VisibleAllFriend
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::VisibleAllFriend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "VisibleAllFriend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.ShowDebugMaxWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::ShowDebugMaxWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "ShowDebugMaxWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.SetPlayRate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::SetPlayRate(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "SetPlayRate");

	Params::BP_DebugCutsceneControl_C_SetPlayRate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.MenuDispChange
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::MenuDispChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "MenuDispChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.SetMatineeLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::SetMatineeLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "SetMatineeLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.NextPrevCut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Next                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DebugCutsceneControl_C::NextPrevCut(bool Next)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "NextPrevCut");

	Params::BP_DebugCutsceneControl_C_NextPrevCut Parms{};

	Parms.Next = Next;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.ResetPlayRate
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::ResetPlayRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "ResetPlayRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.AddPlayRate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::AddPlayRate(float AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "AddPlayRate");

	Params::BP_DebugCutsceneControl_C_AddPlayRate Parms{};

	Parms.AddValue = AddValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "ReceiveTick");

	Params::BP_DebugCutsceneControl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Shift_W_K2Node_InputKeyEvent_26
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Shift_W_K2Node_InputKeyEvent_26(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Shift_W_K2Node_InputKeyEvent_26");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Shift_W_K2Node_InputKeyEvent_26 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_27
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_27(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_27");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_27 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Y_K2Node_InputKeyEvent_28
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Y_K2Node_InputKeyEvent_28(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Y_K2Node_InputKeyEvent_28");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Y_K2Node_InputKeyEvent_28 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_R_K2Node_InputKeyEvent_29
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_R_K2Node_InputKeyEvent_29(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_R_K2Node_InputKeyEvent_29");

	Params::BP_DebugCutsceneControl_C_InpActEvt_R_K2Node_InputKeyEvent_29 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_One_K2Node_InputKeyEvent_30
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_One_K2Node_InputKeyEvent_30(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_One_K2Node_InputKeyEvent_30");

	Params::BP_DebugCutsceneControl_C_InpActEvt_One_K2Node_InputKeyEvent_30 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_K_K2Node_InputKeyEvent_31
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_K_K2Node_InputKeyEvent_31(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_K_K2Node_InputKeyEvent_31");

	Params::BP_DebugCutsceneControl_C_InpActEvt_K_K2Node_InputKeyEvent_31 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_G_K2Node_InputKeyEvent_32
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_G_K2Node_InputKeyEvent_32(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_G_K2Node_InputKeyEvent_32");

	Params::BP_DebugCutsceneControl_C_InpActEvt_G_K2Node_InputKeyEvent_32 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_33
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_33(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_33");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_33 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Z_K2Node_InputKeyEvent_34
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Z_K2Node_InputKeyEvent_34(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Z_K2Node_InputKeyEvent_34");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Z_K2Node_InputKeyEvent_34 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_A_K2Node_InputKeyEvent_35
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_A_K2Node_InputKeyEvent_35(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_A_K2Node_InputKeyEvent_35");

	Params::BP_DebugCutsceneControl_C_InpActEvt_A_K2Node_InputKeyEvent_35 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_F_K2Node_InputKeyEvent_36
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_F_K2Node_InputKeyEvent_36(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_F_K2Node_InputKeyEvent_36");

	Params::BP_DebugCutsceneControl_C_InpActEvt_F_K2Node_InputKeyEvent_36 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_W_K2Node_InputKeyEvent_37
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_W_K2Node_InputKeyEvent_37(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_W_K2Node_InputKeyEvent_37");

	Params::BP_DebugCutsceneControl_C_InpActEvt_W_K2Node_InputKeyEvent_37 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_38
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_38(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_38");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_38 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_39
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_39(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_39");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_39 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_40
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_40(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_40");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_DPad_Right_K2Node_InputKeyEvent_40 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_41
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_41(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_41");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_41 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_42
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_42(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_42");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_42 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_43
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_43(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_43");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_43 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_44
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_44(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_44");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_44 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_45
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_45(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_45");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_45 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Right_K2Node_InputKeyEvent_46
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Right_K2Node_InputKeyEvent_46(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Right_K2Node_InputKeyEvent_46");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Right_K2Node_InputKeyEvent_46 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Down_K2Node_InputKeyEvent_47
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Down_K2Node_InputKeyEvent_47(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Down_K2Node_InputKeyEvent_47");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Down_K2Node_InputKeyEvent_47 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_Up_K2Node_InputKeyEvent_48
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_Up_K2Node_InputKeyEvent_48(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_Up_K2Node_InputKeyEvent_48");

	Params::BP_DebugCutsceneControl_C_InpActEvt_Up_K2Node_InputKeyEvent_48 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_X_K2Node_InputKeyEvent_49
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_X_K2Node_InputKeyEvent_49(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_X_K2Node_InputKeyEvent_49");

	Params::BP_DebugCutsceneControl_C_InpActEvt_X_K2Node_InputKeyEvent_49 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_50
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_SpaceBar_K2Node_InputKeyEvent_50(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_SpaceBar_K2Node_InputKeyEvent_50");

	Params::BP_DebugCutsceneControl_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_50 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.InpActEvt_L_K2Node_InputKeyEvent_51
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::InpActEvt_L_K2Node_InputKeyEvent_51(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "InpActEvt_L_K2Node_InputKeyEvent_51");

	Params::BP_DebugCutsceneControl_C_InpActEvt_L_K2Node_InputKeyEvent_51 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.SetEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RecordingPreset_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DebugCutsceneControl_C::SetEnable(bool Enable_0, bool RecordingPreset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "SetEnable");

	Params::BP_DebugCutsceneControl_C_SetEnable Parms{};

	Parms.Enable_0 = Enable_0;
	Parms.RecordingPreset_0 = RecordingPreset_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.GetMatinee
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMatineeActor*                    Matinee_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::GetMatinee(class AMatineeActor** Matinee_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "GetMatinee");

	Params::BP_DebugCutsceneControl_C_GetMatinee Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Matinee_0 != nullptr)
		*Matinee_0 = Parms.Matinee_0;
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.GetRightShiftXpos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Xpos                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::GetRightShiftXpos(const class FString& String, float Add, float* Xpos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "GetRightShiftXpos");

	Params::BP_DebugCutsceneControl_C_GetRightShiftXpos Parms{};

	Parms.String = std::move(String);
	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);

	if (Xpos != nullptr)
		*Xpos = Parms.Xpos;
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.DispDebugMaxWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::DispDebugMaxWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "DispDebugMaxWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.SpawnDebugWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AJackCharacter*                   JackCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InSocketName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::SpawnDebugWeapon(class AJackCharacter* JackCharacter, class UStaticMesh* Mesh, class FName InSocketName, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "SpawnDebugWeapon");

	Params::BP_DebugCutsceneControl_C_SpawnDebugWeapon Parms{};

	Parms.JackCharacter = JackCharacter;
	Parms.Mesh = Mesh;
	Parms.InSocketName = InSocketName;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.GetDebugWeaponMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          CharacterType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackItem_Classification                WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Main                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Sub                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::GetDebugWeaponMesh(EJackCharacter CharacterType, EJackItem_Classification WeaponType, class UStaticMesh** Main, class UStaticMesh** Sub)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "GetDebugWeaponMesh");

	Params::BP_DebugCutsceneControl_C_GetDebugWeaponMesh Parms{};

	Parms.CharacterType = CharacterType;
	Parms.WeaponType = WeaponType;

	UObject::ProcessEvent(Func, &Parms);

	if (Main != nullptr)
		*Main = Parms.Main;

	if (Sub != nullptr)
		*Sub = Parms.Sub;
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.GetMainHand
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJackCharacter                          CharacterType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LeftHand                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DebugCutsceneControl_C::GetMainHand(EJackCharacter CharacterType, bool* LeftHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "GetMainHand");

	Params::BP_DebugCutsceneControl_C_GetMainHand Parms{};

	Parms.CharacterType = CharacterType;

	UObject::ProcessEvent(Func, &Parms);

	if (LeftHand != nullptr)
		*LeftHand = Parms.LeftHand;
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.DestroyWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugCutsceneControl_C::DestroyWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "DestroyWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.FindNextCoordinate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     CoordTable                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class FName                             NowCoordinate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             NextCoordinate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugCutsceneControl_C::FindNextCoordinate(TArray<class FName>& CoordTable, class FName NowCoordinate, class FName* NextCoordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "FindNextCoordinate");

	Params::BP_DebugCutsceneControl_C_FindNextCoordinate Parms{};

	Parms.CoordTable = std::move(CoordTable);
	Parms.NowCoordinate = NowCoordinate;

	UObject::ProcessEvent(Func, &Parms);

	CoordTable = std::move(Parms.CoordTable);

	if (NextCoordinate != nullptr)
		*NextCoordinate = Parms.NextCoordinate;
}


// Function BP_DebugCutsceneControl.BP_DebugCutsceneControl_C.MekeCsCoordinateTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     CoordinateTable                                        (Parm, OutParm, ZeroConstructor)

void ABP_DebugCutsceneControl_C::MekeCsCoordinateTable(class FName CSID, TArray<class FName>* CoordinateTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugCutsceneControl_C", "MekeCsCoordinateTable");

	Params::BP_DebugCutsceneControl_C_MekeCsCoordinateTable Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);

	if (CoordinateTable != nullptr)
		*CoordinateTable = std::move(Parms.CoordinateTable);
}

}


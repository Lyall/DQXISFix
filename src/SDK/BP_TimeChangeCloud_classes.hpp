#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeChangeCloud

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_TimeChangeEnvironmentBase_classes.hpp"
#include "STRUCT_TimeChangeCloudParam_structs.hpp"


namespace SDK
{

// DynamicClass BP_TimeChangeCloud.BP_TimeChangeCloud_C
// 0x00D8 (0x0490 - 0x03B8)
class ABP_TimeChangeCloud_C final : public ABP_TimeChangeEnvironmentBase_C
{
public:
	TArray<struct FLinearColor>                   CloudColor;                                        // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   CloudColorShadow;                                  // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   C_CloudColor;                                      // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   C_CloudColorShadow;                                // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ABP_SkyBase_C*                          SkyDome;                                           // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackWorldWeather                             NewWeather;                                        // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackWorldWeather                             EditorWeather;                                     // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeatherChangeRate;                                 // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSTRUCT_TimeChangeCloudParam>   CloudParameter;                                    // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           TempCloudColor;                                    // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TempCloudColorShadow;                              // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CloudCloudColor;                                   // 0x0438(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CloudCloudColorShadow;                             // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_Event_Time;                                 // 0x0458(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_Event_UpdateCounter;                        // 0x045C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CallFunc_GetNowCloudParameter_CloudColor;          // 0x0460(0x0010)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           CallFunc_GetNowCloudParameter_CloudColorShadow;    // 0x0470(0x0010)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBP_COMP_WeatherAffect_C*               K2Node_DynamicCast_AsBP_COMP_Weather_Affect;       // 0x0480(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0488(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetNowCloudParameter(int32 bpp__Time__pf, struct FLinearColor* bpp__CloudColor__pf, struct FLinearColor* bpp__CloudColorShadow__pf);
	void ReceiveBeginPlay();
	void SetCloudParameterFromSkyBase();
	void SetCloudWeather(EJackWorldWeather bpp__NewxWeather__pfT, float bpp__WeatherChangeRate__pf);
	void SetTempParameter();
	void UpdateEnvironment(int32 bpp__Time__pf, int32 bpp__UpdateCounter__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_TimeChangeCloud_C">();
	}
	static class ABP_TimeChangeCloud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TimeChangeCloud_C>();
	}
};
static_assert(alignof(ABP_TimeChangeCloud_C) == 0x000008, "Wrong alignment on ABP_TimeChangeCloud_C");
static_assert(sizeof(ABP_TimeChangeCloud_C) == 0x000490, "Wrong size on ABP_TimeChangeCloud_C");
static_assert(offsetof(ABP_TimeChangeCloud_C, CloudColor) == 0x0003B8, "Member 'ABP_TimeChangeCloud_C::CloudColor' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CloudColorShadow) == 0x0003C8, "Member 'ABP_TimeChangeCloud_C::CloudColorShadow' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, C_CloudColor) == 0x0003D8, "Member 'ABP_TimeChangeCloud_C::C_CloudColor' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, C_CloudColorShadow) == 0x0003E8, "Member 'ABP_TimeChangeCloud_C::C_CloudColorShadow' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, SkyDome) == 0x0003F8, "Member 'ABP_TimeChangeCloud_C::SkyDome' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, NewWeather) == 0x000400, "Member 'ABP_TimeChangeCloud_C::NewWeather' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, EditorWeather) == 0x000401, "Member 'ABP_TimeChangeCloud_C::EditorWeather' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, WeatherChangeRate) == 0x000404, "Member 'ABP_TimeChangeCloud_C::WeatherChangeRate' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CloudParameter) == 0x000408, "Member 'ABP_TimeChangeCloud_C::CloudParameter' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, TempCloudColor) == 0x000418, "Member 'ABP_TimeChangeCloud_C::TempCloudColor' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, TempCloudColorShadow) == 0x000428, "Member 'ABP_TimeChangeCloud_C::TempCloudColorShadow' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CloudCloudColor) == 0x000438, "Member 'ABP_TimeChangeCloud_C::CloudCloudColor' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CloudCloudColorShadow) == 0x000448, "Member 'ABP_TimeChangeCloud_C::CloudCloudColorShadow' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, K2Node_Event_Time) == 0x000458, "Member 'ABP_TimeChangeCloud_C::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, K2Node_Event_UpdateCounter) == 0x00045C, "Member 'ABP_TimeChangeCloud_C::K2Node_Event_UpdateCounter' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CallFunc_GetNowCloudParameter_CloudColor) == 0x000460, "Member 'ABP_TimeChangeCloud_C::CallFunc_GetNowCloudParameter_CloudColor' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, CallFunc_GetNowCloudParameter_CloudColorShadow) == 0x000470, "Member 'ABP_TimeChangeCloud_C::CallFunc_GetNowCloudParameter_CloudColorShadow' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, K2Node_DynamicCast_AsBP_COMP_Weather_Affect) == 0x000480, "Member 'ABP_TimeChangeCloud_C::K2Node_DynamicCast_AsBP_COMP_Weather_Affect' has a wrong offset!");
static_assert(offsetof(ABP_TimeChangeCloud_C, K2Node_DynamicCast_bSuccess) == 0x000488, "Member 'ABP_TimeChangeCloud_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


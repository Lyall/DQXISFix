#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_SaveData

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "ENUM_AchievementPafupafu_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SaveRestartPoint
// 0x00D8 (0x00D8 - 0x0000)
struct BP_FLIB_SaveData_C_SaveRestartPoint final
{
public:
	struct FJackLDT_Restart                       RestartPointTag;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart;                 // 0x0020(0x0010)(NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJackDataTableRestart                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0050)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue2;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvalidRestartPointName_OutResult;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CalcSaveRestartPointFlagName_OutFullName; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue3;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_SaveRestartPoint) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SaveRestartPoint");
static_assert(sizeof(BP_FLIB_SaveData_C_SaveRestartPoint) == 0x0000D8, "Wrong size on BP_FLIB_SaveData_C_SaveRestartPoint");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, RestartPointTag) == 0x000000, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::RestartPointTag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, Result) == 0x000018, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, K2Node_MakeStruct_JackLDT_Restart) == 0x000020, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::K2Node_MakeStruct_JackLDT_Restart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_Conv_NameToString_ReturnValue2) == 0x000098, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_Conv_NameToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_IsInvalidRestartPointName_OutResult) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_IsInvalidRestartPointName_OutResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_CalcSaveRestartPointFlagName_OutFullName) == 0x0000B0, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_CalcSaveRestartPointFlagName_OutFullName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_Conv_NameToString_ReturnValue3) == 0x0000B8, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_Conv_NameToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPoint, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_FLIB_SaveData_C_SaveRestartPoint::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetInvalidString
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_SaveData_C_GetInvalidString final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InvalidName;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetInvalidString) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetInvalidString");
static_assert(sizeof(BP_FLIB_SaveData_C_GetInvalidString) == 0x000010, "Wrong size on BP_FLIB_SaveData_C_GetInvalidString");
static_assert(offsetof(BP_FLIB_SaveData_C_GetInvalidString, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetInvalidString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetInvalidString, InvalidName) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetInvalidString::InvalidName' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.ResetRestartPoint
// 0x0078 (0x0078 - 0x0000)
struct BP_FLIB_SaveData_C_ResetRestartPoint final
{
public:
	struct FJackLDT_Restart                       NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackRestartProcessType                       RestartProcess;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableRestart                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0050)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_ResetRestartPoint) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_ResetRestartPoint");
static_assert(sizeof(BP_FLIB_SaveData_C_ResetRestartPoint) == 0x000078, "Wrong size on BP_FLIB_SaveData_C_ResetRestartPoint");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, NewParam) == 0x000000, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, RestartProcess) == 0x000018, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::RestartProcess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ResetRestartPoint, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BP_FLIB_SaveData_C_ResetRestartPoint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.CalcSaveRestartPointFlagName
// 0x0048 (0x0048 - 0x0000)
struct BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName final
{
public:
	EJackRestartProcessType                       In_RestartProcess;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutFullName;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetRestartSrcNameByEnum_OutName;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName");
static_assert(sizeof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName) == 0x000048, "Wrong size on BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, In_RestartProcess) == 0x000000, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::In_RestartProcess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, OutFullName) == 0x000010, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::OutFullName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, CallFunc_GetRestartSrcNameByEnum_OutName) == 0x000018, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::CallFunc_GetRestartSrcNameByEnum_OutName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_FLIB_SaveData_C_CalcSaveRestartPointFlagName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetRestartSrcNameByEnum
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_GetRestartSrcNameByEnum final
{
public:
	EJackRestartProcessType                       InRestartProcess;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OutName;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SrcName;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetRestartSrcNameByEnum");
static_assert(sizeof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_GetRestartSrcNameByEnum");
static_assert(offsetof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum, InRestartProcess) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetRestartSrcNameByEnum::InRestartProcess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetRestartSrcNameByEnum::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum, OutName) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetRestartSrcNameByEnum::OutName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum, SrcName) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetRestartSrcNameByEnum::SrcName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetRestartSrcNameByEnum, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_FLIB_SaveData_C_GetRestartSrcNameByEnum::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetSaveRestartPointFlag
// 0x0048 (0x0048 - 0x0000)
struct BP_FLIB_SaveData_C_GetSaveRestartPointFlag final
{
public:
	EJackRestartProcessType                       In_Type;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutName;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsInvalid;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CalcSaveRestartPointFlagName_OutFullName; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvalidRestartPointName_OutResult;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetSaveRestartPointFlag");
static_assert(sizeof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag) == 0x000048, "Wrong size on BP_FLIB_SaveData_C_GetSaveRestartPointFlag");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, In_Type) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::In_Type' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, OutName) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::OutName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, IsInvalid) == 0x000020, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::IsInvalid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, CallFunc_CalcSaveRestartPointFlagName_OutFullName) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::CallFunc_CalcSaveRestartPointFlagName_OutFullName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, CallFunc_GetGameFlagString_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSaveRestartPointFlag, CallFunc_IsInvalidRestartPointName_OutResult) == 0x000040, "Member 'BP_FLIB_SaveData_C_GetSaveRestartPointFlag::CallFunc_IsInvalidRestartPointName_OutResult' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsInvalidRestartPointName
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_SaveData_C_IsInvalidRestartPointName final
{
public:
	class FString                                 InFlagName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutResult;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetInvalidString_InvalidName;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsInvalidRestartPointName) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsInvalidRestartPointName");
static_assert(sizeof(BP_FLIB_SaveData_C_IsInvalidRestartPointName) == 0x000050, "Wrong size on BP_FLIB_SaveData_C_IsInvalidRestartPointName");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, InFlagName) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::InFlagName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, OutResult) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::OutResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_GetInvalidString_InvalidName) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_GetInvalidString_InvalidName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_GetSubstring_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x000049, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInvalidRestartPointName, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BP_FLIB_SaveData_C_IsInvalidRestartPointName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SaveRestartPointFromMapID
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_SaveRestartPointFromMapID final
{
public:
	class FName                                   RestartID;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Restart                       K2Node_MakeStruct_JackLDT_Restart;                 // 0x0018(0x0010)(NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveRestartPoint_Result;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue2;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SaveRestartPointFromMapID");
static_assert(sizeof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_SaveRestartPointFromMapID");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, RestartID) == 0x000000, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::RestartID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, Result) == 0x000010, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, K2Node_MakeStruct_JackLDT_Restart) == 0x000018, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::K2Node_MakeStruct_JackLDT_Restart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, CallFunc_NotEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, CallFunc_SaveRestartPoint_Result) == 0x000029, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::CallFunc_SaveRestartPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, CallFunc_NotEqual_NameName_ReturnValue2) == 0x00002A, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::CallFunc_NotEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SaveRestartPointFromMapID, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_FLIB_SaveData_C_SaveRestartPointFromMapID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.DecreaseGold
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_DecreaseGold final
{
public:
	int32                                         LostGold;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGamePlayer*                        CallFunc_GetJackGamePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGold_ReturnValue;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DecreaseGold_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_DecreaseGold) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_DecreaseGold");
static_assert(sizeof(BP_FLIB_SaveData_C_DecreaseGold) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_DecreaseGold");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, LostGold) == 0x000000, "Member 'BP_FLIB_SaveData_C_DecreaseGold::LostGold' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_DecreaseGold::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, CallFunc_GetJackGamePlayer_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_DecreaseGold::CallFunc_GetJackGamePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, CallFunc_GetGold_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_DecreaseGold::CallFunc_GetGold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_SaveData_C_DecreaseGold::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_DecreaseGold, CallFunc_DecreaseGold_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_DecreaseGold::CallFunc_DecreaseGold_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsCurrentMapShipLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_IsCurrentMapShipLocation final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataGameProgress      K2Node_MakeStruct_JackLDT_GameFlagDataGameProgress; // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetProgressFlag_Flag;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is2ndScenario_2ndScenario;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue2;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShipLocationFromMapID_bResult;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsCurrentMapShipLocation");
static_assert(sizeof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_IsCurrentMapShipLocation");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, bResult) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::bResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, K2Node_MakeStruct_JackLDT_GameFlagDataGameProgress) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::K2Node_MakeStruct_JackLDT_GameFlagDataGameProgress' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_GetGameFlagBool_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_GetProgressFlag_Flag) == 0x000021, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_GetProgressFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_Is2ndScenario_2ndScenario) == 0x000023, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_Is2ndScenario_2ndScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_GetGameFlagBool_ReturnValue2) == 0x000024, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_GetGameFlagBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_Not_PreBool_ReturnValue2) == 0x000025, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_GetSaveData_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_GetActiveMapID_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsCurrentMapShipLocation, CallFunc_IsShipLocationFromMapID_bResult) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsCurrentMapShipLocation::CallFunc_IsShipLocationFromMapID_bResult' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsShipLocationFromMapID
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_IsShipLocationFromMapID final
{
public:
	class FName                                   MapId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsShipLocationFromMapID) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsShipLocationFromMapID");
static_assert(sizeof(BP_FLIB_SaveData_C_IsShipLocationFromMapID) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_IsShipLocationFromMapID");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, MapId) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::MapId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, bResult) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::bResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_GetGameFlagString_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000039, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x00003B, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsShipLocationFromMapID, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BP_FLIB_SaveData_C_IsShipLocationFromMapID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetShipLocation
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FLIB_SaveData_C_SetShipLocation final
{
public:
	class FName                                   MapStart;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapId;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJackDataTableMap                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue2;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue3;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue2;           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue3;           // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableMapStart                 CallFunc_GetDataTableRowFromName_OutRow2;          // 0x00B8(0x0020)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue2;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetShipLocation) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetShipLocation");
static_assert(sizeof(BP_FLIB_SaveData_C_SetShipLocation) == 0x0000E0, "Wrong size on BP_FLIB_SaveData_C_SetShipLocation");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, MapStart) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetShipLocation::MapStart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, MapId) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetShipLocation::MapId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_SetShipLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetSubstring_ReturnValue) == 0x000088, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000098, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetSubstring_ReturnValue2) == 0x0000A0, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetSubstring_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x0000B0, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_EqualEqual_StrStr_ReturnValue3) == 0x0000B1, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_EqualEqual_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000B2, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_BooleanOR_ReturnValue) == 0x0000B3, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_BooleanOR_ReturnValue2) == 0x0000B4, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_NotEqual_NameName_ReturnValue2) == 0x0000B5, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_NotEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_NotEqual_NameName_ReturnValue3) == 0x0000B6, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_NotEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetDataTableRowFromName_OutRow2) == 0x0000B8, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetDataTableRowFromName_OutRow2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_GetDataTableRowFromName_ReturnValue2) == 0x0000D8, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_GetDataTableRowFromName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocation, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'BP_FLIB_SaveData_C_SetShipLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetShipLocationCore
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_SaveData_C_SetShipLocationCore final
{
public:
	class FName                                   MapId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetShipLocationCore) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetShipLocationCore");
static_assert(sizeof(BP_FLIB_SaveData_C_SetShipLocationCore) == 0x000020, "Wrong size on BP_FLIB_SaveData_C_SetShipLocationCore");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationCore, MapId) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetShipLocationCore::MapId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationCore, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetShipLocationCore::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationCore, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_SetShipLocationCore::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetShipLocationAtCurrentMap
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap");
static_assert(sizeof(BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap) == 0x000018, "Wrong size on BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap, CallFunc_GetSaveData_ReturnValue) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap, CallFunc_GetActiveMapID_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_SetShipLocationAtCurrentMap::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.AcquireAchievementDirect
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_SaveData_C_AcquireAchievementDirect final
{
public:
	struct FJackLDT_Achievement                   Achievement;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackAchievementManager*                CallFunc_GetAchievementManager_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_AcquireAchievementDirect) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_AcquireAchievementDirect");
static_assert(sizeof(BP_FLIB_SaveData_C_AcquireAchievementDirect) == 0x000020, "Wrong size on BP_FLIB_SaveData_C_AcquireAchievementDirect");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirect, Achievement) == 0x000000, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirect::Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirect, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirect, CallFunc_GetAchievementManager_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirect::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetAchievementStringParameter
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_GetAchievementStringParameter final
{
public:
	struct FJackLDT_Achievement                   Achievement;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UJackAchievementManager*                CallFunc_GetAchievementManager_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringParameter_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetAchievementStringParameter) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetAchievementStringParameter");
static_assert(sizeof(BP_FLIB_SaveData_C_GetAchievementStringParameter) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_GetAchievementStringParameter");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementStringParameter, Achievement) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetAchievementStringParameter::Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementStringParameter, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetAchievementStringParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementStringParameter, Value) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetAchievementStringParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementStringParameter, CallFunc_GetAchievementManager_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetAchievementStringParameter::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementStringParameter, CallFunc_GetStringParameter_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_GetAchievementStringParameter::CallFunc_GetStringParameter_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetAchievementNumericalParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_GetAchievementNumericalParameter final
{
public:
	struct FJackLDT_Achievement                   Achievement;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackAchievementManager*                CallFunc_GetAchievementManager_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumericalParameter_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetAchievementNumericalParameter");
static_assert(sizeof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_GetAchievementNumericalParameter");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter, Achievement) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetAchievementNumericalParameter::Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetAchievementNumericalParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter, Value) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetAchievementNumericalParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter, CallFunc_GetAchievementManager_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_GetAchievementNumericalParameter::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementNumericalParameter, CallFunc_GetNumericalParameter_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetAchievementNumericalParameter::CallFunc_GetNumericalParameter_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.AllIslandVisitAchievementCheck
// 0x0078 (0x0078 - 0x0000)
struct BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck final
{
public:
	class FName                                   NowMapID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempClear;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           IslandMapID;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0050(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck");
static_assert(sizeof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck) == 0x000078, "Wrong size on BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, NowMapID) == 0x000000, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::NowMapID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, TempClear) == 0x000010, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::TempClear' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, IslandMapID) == 0x000018, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::IslandMapID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, K2Node_MakeStruct_JackLDT_Achievement) == 0x000050, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000071, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck, CallFunc_GetGameFlagBool_ReturnValue) == 0x000073, "Member 'BP_FLIB_SaveData_C_AllIslandVisitAchievementCheck::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetAchievementCompletePafupafu
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_SaveData_C_SetAchievementCompletePafupafu final
{
public:
	ENUM_AchievementPafupafu                      Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0010(0x0010)(NoDestructor)
	int32                                         CallFunc_GetAchievementCompletePafupafuCount_Count; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAchievementCompletePafupafuCount_AllComplete; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement2;            // 0x0028(0x0010)(NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetAchievementCompletePafupafu");
static_assert(sizeof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu) == 0x000038, "Wrong size on BP_FLIB_SaveData_C_SetAchievementCompletePafupafu");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, Type) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::Type' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, K2Node_MakeStruct_JackLDT_Achievement) == 0x000010, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, CallFunc_GetAchievementCompletePafupafuCount_Count) == 0x000020, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::CallFunc_GetAchievementCompletePafupafuCount_Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, CallFunc_GetAchievementCompletePafupafuCount_AllComplete) == 0x000024, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::CallFunc_GetAchievementCompletePafupafuCount_AllComplete' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, K2Node_SwitchEnum_CmpSuccess) == 0x000026, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetAchievementCompletePafupafu, K2Node_MakeStruct_JackLDT_Achievement2) == 0x000028, "Member 'BP_FLIB_SaveData_C_SetAchievementCompletePafupafu::K2Node_MakeStruct_JackLDT_Achievement2' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetAchievementCompletePafupafuCount
// 0x0068 (0x0068 - 0x0000)
struct BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllComplete;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CompCount;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           FlagArray;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount");
static_assert(sizeof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount) == 0x000068, "Wrong size on BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, Count) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, AllComplete) == 0x00000C, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::AllComplete' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CompCount) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CompCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, FlagArray) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::FlagArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Add_IntInt_ReturnValue2) == 0x000050, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Array_Length_ReturnValue2) == 0x000054, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount, CallFunc_GetGameFlagBool_ReturnValue) == 0x000061, "Member 'BP_FLIB_SaveData_C_GetAchievementCompletePafupafuCount::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsTenkuumajouVisible
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_SaveData_C_IsTenkuumajouVisible final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempVisible;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene;    // 0x0010(0x0010)(NoDestructor)
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2;   // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsTenkuumajouVisible) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsTenkuumajouVisible");
static_assert(sizeof(BP_FLIB_SaveData_C_IsTenkuumajouVisible) == 0x000038, "Wrong size on BP_FLIB_SaveData_C_IsTenkuumajouVisible");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, Visible) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, TempVisible) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::TempVisible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, CallFunc_GetCutSceneFlag_Flag) == 0x000030, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::CallFunc_GetCutSceneFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsTenkuumajouVisible, CallFunc_GetCutSceneFlag_Flag2) == 0x000031, "Member 'BP_FLIB_SaveData_C_IsTenkuumajouVisible::CallFunc_GetCutSceneFlag_Flag2' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsInotinotaijuVisible
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_IsInotinotaijuVisible final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempVisible;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene;    // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2;   // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsInotinotaijuVisible) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsInotinotaijuVisible");
static_assert(sizeof(BP_FLIB_SaveData_C_IsInotinotaijuVisible) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_IsInotinotaijuVisible");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, Visible) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, TempVisible) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::TempVisible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, CallFunc_GetCutSceneFlag_Flag) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::CallFunc_GetCutSceneFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsInotinotaijuVisible, CallFunc_GetCutSceneFlag_Flag2) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsInotinotaijuVisible::CallFunc_GetCutSceneFlag_Flag2' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsRedStarVisible
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_IsRedStarVisible final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempVisible;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene;    // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2;   // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsRedStarVisible) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsRedStarVisible");
static_assert(sizeof(BP_FLIB_SaveData_C_IsRedStarVisible) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_IsRedStarVisible");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, Visible) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, TempVisible) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::TempVisible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, CallFunc_GetCutSceneFlag_Flag) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::CallFunc_GetCutSceneFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsRedStarVisible, CallFunc_GetCutSceneFlag_Flag2) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsRedStarVisible::CallFunc_GetCutSceneFlag_Flag2' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsBlackSunVisible
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_IsBlackSunVisible final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempVisible;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataCutScene          K2Node_MakeStruct_JackLDT_GameFlagDataCutScene;    // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetCutSceneFlag_Flag;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario;    // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_GetScenarioFlag_Flag;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsBlackSunVisible) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsBlackSunVisible");
static_assert(sizeof(BP_FLIB_SaveData_C_IsBlackSunVisible) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_IsBlackSunVisible");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, Visible) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, TempVisible) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::TempVisible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, K2Node_MakeStruct_JackLDT_GameFlagDataCutScene) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::K2Node_MakeStruct_JackLDT_GameFlagDataCutScene' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, CallFunc_GetCutSceneFlag_Flag) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::CallFunc_GetCutSceneFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, K2Node_MakeStruct_JackLDT_GameFlagDataScenario) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::K2Node_MakeStruct_JackLDT_GameFlagDataScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsBlackSunVisible, CallFunc_GetScenarioFlag_Flag) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsBlackSunVisible::CallFunc_GetScenarioFlag_Flag' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.ForceAutoSaveAfterCS
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_ForceAutoSaveAfterCS final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_CommonEvent_C>  K2Node_DynamicCast_AsBP_IF_Common_Event;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ForceAutoSaveAfterCS_Result;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_ForceAutoSaveAfterCS");
static_assert(sizeof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_ForceAutoSaveAfterCS");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, CallFunc_GetStreamingLevel_ReturnValue) == 0x000008, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, K2Node_DynamicCast_AsBP_IF_Common_Event) == 0x000018, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::K2Node_DynamicCast_AsBP_IF_Common_Event' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSaveAfterCS, CallFunc_ForceAutoSaveAfterCS_Result) == 0x000029, "Member 'BP_FLIB_SaveData_C_ForceAutoSaveAfterCS::CallFunc_ForceAutoSaveAfterCS_Result' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.ForceAutoSave
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_ForceAutoSave final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_CommonEvent_C>  K2Node_DynamicCast_AsBP_IF_Common_Event;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAutoSaveCompleted_Result;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_ForceAutoSave) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_ForceAutoSave");
static_assert(sizeof(BP_FLIB_SaveData_C_ForceAutoSave) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_ForceAutoSave");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, CallFunc_GetStreamingLevel_ReturnValue) == 0x000008, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, K2Node_DynamicCast_AsBP_IF_Common_Event) == 0x000018, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::K2Node_DynamicCast_AsBP_IF_Common_Event' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ForceAutoSave, CallFunc_SetAutoSaveCompleted_Result) == 0x000029, "Member 'BP_FLIB_SaveData_C_ForceAutoSave::CallFunc_SetAutoSaveCompleted_Result' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.NotAutoSaveAfterCS
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_NotAutoSaveAfterCS final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelScriptActor*                      CallFunc_GetLevelScriptActor_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_CommonEvent_C>  K2Node_DynamicCast_AsBP_IF_Common_Event;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAutoSaveCompleted_Result;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_NotAutoSaveAfterCS");
static_assert(sizeof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_NotAutoSaveAfterCS");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, CallFunc_GetStreamingLevel_ReturnValue) == 0x000008, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, CallFunc_GetLevelScriptActor_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::CallFunc_GetLevelScriptActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, K2Node_DynamicCast_AsBP_IF_Common_Event) == 0x000018, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::K2Node_DynamicCast_AsBP_IF_Common_Event' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_NotAutoSaveAfterCS, CallFunc_SetAutoSaveCompleted_Result) == 0x000029, "Member 'BP_FLIB_SaveData_C_NotAutoSaveAfterCS::CallFunc_SetAutoSaveCompleted_Result' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.InitTalkFlag
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_SaveData_C_InitTalkFlag final
{
public:
	class FName                                   BookID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_InitTalkFlag) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_InitTalkFlag");
static_assert(sizeof(BP_FLIB_SaveData_C_InitTalkFlag) == 0x000010, "Wrong size on BP_FLIB_SaveData_C_InitTalkFlag");
static_assert(offsetof(BP_FLIB_SaveData_C_InitTalkFlag, BookID) == 0x000000, "Member 'BP_FLIB_SaveData_C_InitTalkFlag::BookID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_InitTalkFlag, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_InitTalkFlag::__WorldContext' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetShipLost_AtMetubou
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_SaveData_C_SetShipLost_AtMetubou final
{
public:
	bool                                          Lost;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetShipLost_AtMetubou) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetShipLost_AtMetubou");
static_assert(sizeof(BP_FLIB_SaveData_C_SetShipLost_AtMetubou) == 0x000010, "Wrong size on BP_FLIB_SaveData_C_SetShipLost_AtMetubou");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLost_AtMetubou, Lost) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetShipLost_AtMetubou::Lost' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetShipLost_AtMetubou, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetShipLost_AtMetubou::__WorldContext' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.AcquireAchievementDirectName
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_SaveData_C_AcquireAchievementDirectName final
{
public:
	class FName                                   AchievementName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0010(0x0010)(NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_AcquireAchievementDirectName) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_AcquireAchievementDirectName");
static_assert(sizeof(BP_FLIB_SaveData_C_AcquireAchievementDirectName) == 0x000020, "Wrong size on BP_FLIB_SaveData_C_AcquireAchievementDirectName");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirectName, AchievementName) == 0x000000, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirectName::AchievementName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirectName, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirectName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AcquireAchievementDirectName, K2Node_MakeStruct_JackLDT_Achievement) == 0x000010, "Member 'BP_FLIB_SaveData_C_AcquireAchievementDirectName::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetJoouNoAiTexts
// 0x0110 (0x0110 - 0x0000)
struct BP_FLIB_SaveData_C_GetJoouNoAiTexts final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Texts;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FName>                           TempTexts;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetJoouNoAiProgressText_Text;             // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   Temp_name_Variable2;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable3;                               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable5;                               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable6;                               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario;    // 0x00B0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetScenarioFlag_Flag;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable7;                               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario2;   // 0x00E0(0x0010)(NoDestructor)
	class FName                                   Temp_name_Variable8;                               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetScenarioFlag_Flag2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue6;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue7;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue8;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue9;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetJoouNoAiTexts) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetJoouNoAiTexts");
static_assert(sizeof(BP_FLIB_SaveData_C_GetJoouNoAiTexts) == 0x000110, "Wrong size on BP_FLIB_SaveData_C_GetJoouNoAiTexts");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Texts) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Texts' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, TempTexts) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::TempTexts' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_GetGameFlagBool_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_GetJoouNoAiProgressText_Text) == 0x000038, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_GetJoouNoAiProgressText_Text' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable2) == 0x000048, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Length_ReturnValue2) == 0x000058, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Length_ReturnValue3) == 0x00005C, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Greater_IntInt_ReturnValue2) == 0x000060, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_bool_True_if_break_was_hit_Variable) == 0x000061, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000081, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable3) == 0x000088, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable4) == 0x000090, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable5) == 0x000098, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable6) == 0x0000A0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, K2Node_MakeStruct_JackLDT_GameFlagDataScenario) == 0x0000B0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::K2Node_MakeStruct_JackLDT_GameFlagDataScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue2) == 0x0000C0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_GetScenarioFlag_Flag) == 0x0000C4, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_GetScenarioFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue3) == 0x0000C8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable7) == 0x0000D0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue4) == 0x0000D8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue5) == 0x0000DC, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, K2Node_MakeStruct_JackLDT_GameFlagDataScenario2) == 0x0000E0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::K2Node_MakeStruct_JackLDT_GameFlagDataScenario2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, Temp_name_Variable8) == 0x0000F0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::Temp_name_Variable8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_GetScenarioFlag_Flag2) == 0x0000F8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_GetScenarioFlag_Flag2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Not_PreBool_ReturnValue2) == 0x0000F9, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue6) == 0x0000FC, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue7) == 0x000100, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue8) == 0x000104, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiTexts, CallFunc_Array_Add_ReturnValue9) == 0x000108, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiTexts::CallFunc_Array_Add_ReturnValue9' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetJoouNoAiProgressText
// 0x0158 (0x0158 - 0x0000)
struct BP_FLIB_SaveData_C_GetJoouNoAiProgressText final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Text;                                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FString>                         ProgressNum;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           TempText;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario;    // 0x0068(0x0010)(NoDestructor)
	bool                                          CallFunc_GetScenarioFlag_Flag;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario2;   // 0x0080(0x0010)(NoDestructor)
	bool                                          CallFunc_GetScenarioFlag_Flag2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue5;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario3;   // 0x0120(0x0010)(NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetScenarioFlag_Flag3;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetJoouNoAiProgressText");
static_assert(sizeof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText) == 0x000158, "Wrong size on BP_FLIB_SaveData_C_GetJoouNoAiProgressText");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, Text) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::Text' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, ProgressNum) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::ProgressNum' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, TempText) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::TempText' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, Temp_bool_True_if_break_was_hit_Variable) == 0x000038, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, K2Node_MakeStruct_JackLDT_GameFlagDataScenario) == 0x000068, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::K2Node_MakeStruct_JackLDT_GameFlagDataScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_GetScenarioFlag_Flag) == 0x000078, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_GetScenarioFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, K2Node_MakeStruct_JackLDT_GameFlagDataScenario2) == 0x000080, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::K2Node_MakeStruct_JackLDT_GameFlagDataScenario2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_GetScenarioFlag_Flag2) == 0x000090, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_GetScenarioFlag_Flag2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Array_Length_ReturnValue2) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Less_IntInt_ReturnValue2) == 0x0000C0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, K2Node_SwitchString_CmpSuccess) == 0x0000D8, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Concat_StrStr_ReturnValue2) == 0x0000E0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000F0, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Concat_StrStr_ReturnValue4) == 0x000100, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Concat_StrStr_ReturnValue5) == 0x000110, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Concat_StrStr_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, K2Node_MakeStruct_JackLDT_GameFlagDataScenario3) == 0x000120, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::K2Node_MakeStruct_JackLDT_GameFlagDataScenario3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_Conv_StringToName_ReturnValue2) == 0x000130, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_GetScenarioFlag_Flag3) == 0x000138, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_GetScenarioFlag_Flag3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_GetGameFlagString_ReturnValue) == 0x000140, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetJoouNoAiProgressText, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000150, "Member 'BP_FLIB_SaveData_C_GetJoouNoAiProgressText::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.CheckBlackDragonAchievement
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_SaveData_C_CheckBlackDragonAchievement final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0008(0x0010)(NoDestructor)
	bool                                          CallFunc_CheckToubatuMonster_Ret;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_CheckBlackDragonAchievement");
static_assert(sizeof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement) == 0x000038, "Wrong size on BP_FLIB_SaveData_C_CheckBlackDragonAchievement");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, K2Node_MakeStruct_JackLDT_Achievement) == 0x000008, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_CheckToubatuMonster_Ret) == 0x000018, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_CheckToubatuMonster_Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_GetSaveData_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_GetActiveMapID_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000031, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckBlackDragonAchievement, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_FLIB_SaveData_C_CheckBlackDragonAchievement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.OpenRura
// 0x0158 (0x0158 - 0x0000)
struct BP_FLIB_SaveData_C_OpenRura final
{
public:
	struct FJackLDT_Rura                          RuraPointID;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          RuraCheck;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NowOpen;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SelectNameID;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RuraUsable;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableRura                     TempRura;                                          // 0x0038(0x0060)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSScenario_SScenario;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAcquiredJumons_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableRura                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0060)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue2;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_OpenRura) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_OpenRura");
static_assert(sizeof(BP_FLIB_SaveData_C_OpenRura) == 0x000158, "Wrong size on BP_FLIB_SaveData_C_OpenRura");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, RuraPointID) == 0x000000, "Member 'BP_FLIB_SaveData_C_OpenRura::RuraPointID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, RuraCheck) == 0x000010, "Member 'BP_FLIB_SaveData_C_OpenRura::RuraCheck' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, __WorldContext) == 0x000018, "Member 'BP_FLIB_SaveData_C_OpenRura::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, NowOpen) == 0x000020, "Member 'BP_FLIB_SaveData_C_OpenRura::NowOpen' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, SelectNameID) == 0x000028, "Member 'BP_FLIB_SaveData_C_OpenRura::SelectNameID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, RuraUsable) == 0x000030, "Member 'BP_FLIB_SaveData_C_OpenRura::RuraUsable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, TempRura) == 0x000038, "Member 'BP_FLIB_SaveData_C_OpenRura::TempRura' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, Temp_bool_True_if_break_was_hit_Variable) == 0x000098, "Member 'BP_FLIB_SaveData_C_OpenRura::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_IsSScenario_SScenario) == 0x000099, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_IsSScenario_SScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Not_PreBool_ReturnValue2) == 0x00009B, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_GetGameCharacter_ReturnValue) == 0x0000A0, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_GetAcquiredJumons_ReturnValue) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_GetAcquiredJumons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, Temp_int_Array_Index_Variable) == 0x000124, "Member 'BP_FLIB_SaveData_C_OpenRura::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000130, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'BP_FLIB_SaveData_C_OpenRura::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_BooleanAND_ReturnValue) == 0x000140, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000144, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_GetGameFlagInt_ReturnValue) == 0x000148, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00014C, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_OpenRura, CallFunc_Conv_ByteToInt_ReturnValue2) == 0x000150, "Member 'BP_FLIB_SaveData_C_OpenRura::CallFunc_Conv_ByteToInt_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.ClearRestartPoint
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_SaveData_C_ClearRestartPoint final
{
public:
	EJackRestartProcessType                       RestartProcess;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CalcSaveRestartPointFlagName_OutFullName; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetInvalidString_InvalidName;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_ClearRestartPoint) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_ClearRestartPoint");
static_assert(sizeof(BP_FLIB_SaveData_C_ClearRestartPoint) == 0x000030, "Wrong size on BP_FLIB_SaveData_C_ClearRestartPoint");
static_assert(offsetof(BP_FLIB_SaveData_C_ClearRestartPoint, RestartProcess) == 0x000000, "Member 'BP_FLIB_SaveData_C_ClearRestartPoint::RestartProcess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ClearRestartPoint, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_ClearRestartPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ClearRestartPoint, CallFunc_CalcSaveRestartPointFlagName_OutFullName) == 0x000010, "Member 'BP_FLIB_SaveData_C_ClearRestartPoint::CallFunc_CalcSaveRestartPointFlagName_OutFullName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ClearRestartPoint, CallFunc_GetInvalidString_InvalidName) == 0x000018, "Member 'BP_FLIB_SaveData_C_ClearRestartPoint::CallFunc_GetInvalidString_InvalidName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_ClearRestartPoint, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_ClearRestartPoint::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetWhaleMapStart
// 0x0058 (0x0058 - 0x0000)
struct BP_FLIB_SaveData_C_GetWhaleMapStart final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_MapStart                      MapStart;                                          // 0x0008(0x0010)(Parm, OutParm, NoDestructor)
	class FName                                   TempMapStartName;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_MapStart                      K2Node_MakeStruct_JackLDT_MapStart;                // 0x0028(0x0010)(NoDestructor)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetWhaleMapStart) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetWhaleMapStart");
static_assert(sizeof(BP_FLIB_SaveData_C_GetWhaleMapStart) == 0x000058, "Wrong size on BP_FLIB_SaveData_C_GetWhaleMapStart");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, MapStart) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::MapStart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, TempMapStartName) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::TempMapStartName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, CallFunc_GetGameFlagBool_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, K2Node_MakeStruct_JackLDT_MapStart) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::K2Node_MakeStruct_JackLDT_MapStart' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, CallFunc_GetGameFlagString_ReturnValue) == 0x000038, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetWhaleMapStart, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000050, "Member 'BP_FLIB_SaveData_C_GetWhaleMapStart::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetLookAtOffVolumeEnable
// 0x0008 (0x0008 - 0x0000)
struct BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable");
static_assert(sizeof(BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable) == 0x000008, "Wrong size on BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable");
static_assert(offsetof(BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetLookAtOffVolumeEnable::__WorldContext' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.AddFollowingSilviaGuest
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_SaveData_C_AddFollowingSilviaGuest final
{
public:
	TArray<EJackCharacter>                        InIDs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CallFunc_Array_Get_Item;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JoinSilviaPartyCharacter_Success;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                CallFunc_JoinSilviaPartyCharacter_LeaveID;         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_AddFollowingSilviaGuest");
static_assert(sizeof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest) == 0x000040, "Wrong size on BP_FLIB_SaveData_C_AddFollowingSilviaGuest");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, InIDs) == 0x000000, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::InIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, __WorldContext) == 0x000010, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_JoinSilviaPartyCharacter_Success) == 0x00001D, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_JoinSilviaPartyCharacter_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_JoinSilviaPartyCharacter_LeaveID) == 0x00001E, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_JoinSilviaPartyCharacter_LeaveID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName) == 0x000020, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_GetGameFlagBool_ReturnValue) == 0x000029, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x00002B, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_AddFollowingSilviaGuest, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_FLIB_SaveData_C_AddFollowingSilviaGuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.GetSilviaFollowingCharacterIDToFlagName
// 0x01D8 (0x01D8 - 0x0000)
struct BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName final
{
public:
	EJackCharacter                                InID;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FlagName;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TempFlagName;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable3;                               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable5;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable6;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable7;                               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable8;                               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable9;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable10;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable11;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable12;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable13;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable14;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable15;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable16;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable17;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable18;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable19;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable20;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable21;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable22;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable23;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable24;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable25;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable26;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable27;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable28;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable29;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable30;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable31;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable32;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable33;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable34;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable35;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable36;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable37;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable38;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable39;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable40;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable41;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable42;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable43;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable44;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable45;                              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable46;                              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable47;                              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable48;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable49;                              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable50;                              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable51;                              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable52;                              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable53;                              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName");
static_assert(sizeof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName) == 0x0001D8, "Wrong size on BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, InID) == 0x000000, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::InID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, FlagName) == 0x000010, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::FlagName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, TempFlagName) == 0x000018, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::TempFlagName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_byte_Variable) == 0x000020, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable) == 0x000028, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable2) == 0x000030, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable3) == 0x000038, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable4) == 0x000040, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable5) == 0x000048, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable6) == 0x000050, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable7) == 0x000058, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable8) == 0x000060, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable9) == 0x000068, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable10) == 0x000070, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable11) == 0x000078, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable12) == 0x000080, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable13) == 0x000088, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable13' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable14) == 0x000090, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable14' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable15) == 0x000098, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable15' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable16) == 0x0000A0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable16' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable17) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable17' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable18) == 0x0000B0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable18' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable19) == 0x0000B8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable19' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable20) == 0x0000C0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable20' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable21) == 0x0000C8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable21' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable22) == 0x0000D0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable22' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable23) == 0x0000D8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable23' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable24) == 0x0000E0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable24' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable25) == 0x0000E8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable25' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable26) == 0x0000F0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable26' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable27) == 0x0000F8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable27' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable28) == 0x000100, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable28' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable29) == 0x000108, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable29' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable30) == 0x000110, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable30' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable31) == 0x000118, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable31' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable32) == 0x000120, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable32' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable33) == 0x000128, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable33' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable34) == 0x000130, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable34' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable35) == 0x000138, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable35' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable36) == 0x000140, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable36' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable37) == 0x000148, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable37' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable38) == 0x000150, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable38' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable39) == 0x000158, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable39' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable40) == 0x000160, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable40' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable41) == 0x000168, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable41' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable42) == 0x000170, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable42' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable43) == 0x000178, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable43' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable44) == 0x000180, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable44' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable45) == 0x000188, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable45' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable46) == 0x000190, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable46' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable47) == 0x000198, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable47' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable48) == 0x0001A0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable48' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable49) == 0x0001A8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable49' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable50) == 0x0001B0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable50' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable51) == 0x0001B8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable51' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable52) == 0x0001C0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable52' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, Temp_name_Variable53) == 0x0001C8, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::Temp_name_Variable53' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName, K2Node_Select_Default) == 0x0001D0, "Member 'BP_FLIB_SaveData_C_GetSilviaFollowingCharacterIDToFlagName::K2Node_Select_Default' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.JoinSilviaPartyCharacter
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FLIB_SaveData_C_JoinSilviaPartyCharacter final
{
public:
	EJackCharacter                                InID;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceJoin;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LeaveIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                LeaveID;                                           // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempLeaveIndex;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                TempLeaveID;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempSuccess;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 JoinIDs;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           JoinFlags;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSilviaFollowingCharacter_Valid;    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue2;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcSilviaRemoveIndex_Index;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array2;                           // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_JoinSilviaPartyCharacter");
static_assert(sizeof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter) == 0x0000D0, "Wrong size on BP_FLIB_SaveData_C_JoinSilviaPartyCharacter");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, InID) == 0x000000, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::InID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, ForceJoin) == 0x000001, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::ForceJoin' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, LeaveIndex) == 0x000004, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::LeaveIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Success) == 0x000010, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, LeaveID) == 0x000011, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::LeaveID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, TempLeaveIndex) == 0x000014, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::TempLeaveIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, TempLeaveID) == 0x000018, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::TempLeaveID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, TempSuccess) == 0x000019, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::TempSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, JoinIDs) == 0x000020, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::JoinIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, JoinFlags) == 0x000030, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::JoinFlags' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_IsValidSilviaFollowingCharacter_Valid) == 0x000044, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_IsValidSilviaFollowingCharacter_Valid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000054, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Conv_ByteToInt_ReturnValue2) == 0x000058, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Conv_ByteToInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x00005C, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Not_PreBool_ReturnValue2) == 0x000064, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_CalcSilviaRemoveIndex_Index) == 0x000068, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_CalcSilviaRemoveIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Temp_int_Array_Index_Variable2) == 0x00006C, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, Temp_int_Loop_Counter_Variable2) == 0x000078, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Conv_IntToByte_ReturnValue) == 0x00007C, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_GetValidValue_ReturnValue) == 0x00007D, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Add_IntInt_ReturnValue2) == 0x000080, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Get_Item2) == 0x000088, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000095, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, K2Node_MakeArray_Array2) == 0x0000A8, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Get_Item3) == 0x0000B8, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Array_Length_ReturnValue2) == 0x0000C0, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_Less_IntInt_ReturnValue2) == 0x0000C4, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_GetGameFlagInt_ReturnValue) == 0x0000C8, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_BooleanAND_ReturnValue) == 0x0000CC, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_JoinSilviaPartyCharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CD, "Member 'BP_FLIB_SaveData_C_JoinSilviaPartyCharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsValidSilviaFollowingCharacter
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter final
{
public:
	EJackCharacter                                InID;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter");
static_assert(sizeof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, InID) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::InID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, Valid) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::Valid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::CallFunc_GetSilviaFollowingCharacterIDToFlagName_FlagName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'BP_FLIB_SaveData_C_IsValidSilviaFollowingCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsSaikyouBossAppearance
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_IsSaikyouBossAppearance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario;    // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetScenarioFlag_Flag;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsSaikyouBossAppearance");
static_assert(sizeof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_IsSaikyouBossAppearance");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, Visible) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::Visible' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, K2Node_MakeStruct_JackLDT_GameFlagDataScenario) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::K2Node_MakeStruct_JackLDT_GameFlagDataScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, CallFunc_GetGameFlagBool_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, CallFunc_GetScenarioFlag_Flag) == 0x000021, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::CallFunc_GetScenarioFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossAppearance, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossAppearance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.SetSaikyouBossTurnCount
// 0x0068 (0x0068 - 0x0000)
struct BP_FLIB_SaveData_C_SetSaikyouBossTurnCount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CountUpdate;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempCount;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0030(0x0010)(NoDestructor)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement2;            // 0x0040(0x0010)(NoDestructor)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement3;            // 0x0050(0x0010)(NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_SetSaikyouBossTurnCount");
static_assert(sizeof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount) == 0x000068, "Wrong size on BP_FLIB_SaveData_C_SetSaikyouBossTurnCount");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CountUpdate) == 0x000008, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CountUpdate' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, TempCount) == 0x00000C, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::TempCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, Update) == 0x000010, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::Update' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_GetBattleManager_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_GetGameFlagInt_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_Clamp_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, K2Node_MakeStruct_JackLDT_Achievement) == 0x000030, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, K2Node_MakeStruct_JackLDT_Achievement2) == 0x000040, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::K2Node_MakeStruct_JackLDT_Achievement2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, K2Node_MakeStruct_JackLDT_Achievement3) == 0x000050, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::K2Node_MakeStruct_JackLDT_Achievement3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000061, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_SetSaikyouBossTurnCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000062, "Member 'BP_FLIB_SaveData_C_SetSaikyouBossTurnCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsPerfectSilvia
// 0x0060 (0x0060 - 0x0000)
struct BP_FLIB_SaveData_C_IsPerfectSilvia final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Perfect;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempPerfect;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Flags_0;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsPerfectSilvia) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsPerfectSilvia");
static_assert(sizeof(BP_FLIB_SaveData_C_IsPerfectSilvia) == 0x000060, "Wrong size on BP_FLIB_SaveData_C_IsPerfectSilvia");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, Perfect) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::Perfect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, TempPerfect) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::TempPerfect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, Flags_0) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_GetGameFlagBool_ReturnValue) == 0x000059, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsPerfectSilvia, CallFunc_NotEqual_NameName_ReturnValue) == 0x00005B, "Member 'BP_FLIB_SaveData_C_IsPerfectSilvia::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsSaikyouBossManyTurnCount
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount final
{
public:
	bool                                          LastBattle;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ManyTurn;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempCount;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount");
static_assert(sizeof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, LastBattle) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::LastBattle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, __WorldContext) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, ManyTurn) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::ManyTurn' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, TempCount) == 0x000014, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::TempCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, CallFunc_GetGameFlagInt_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount, CallFunc_GetBattleManager_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsSaikyouBossManyTurnCount::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.CalcSilviaRemoveIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_SaveData_C_CalcSilviaRemoveIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 JoinIDs;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempIndex;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_CalcSilviaRemoveIndex");
static_assert(sizeof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex) == 0x000050, "Wrong size on BP_FLIB_SaveData_C_CalcSilviaRemoveIndex");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, InIndex) == 0x000000, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, JoinIDs) == 0x000008, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::JoinIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, __WorldContext) == 0x000018, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, Index_0) == 0x000020, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, TempIndex) == 0x000024, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::TempIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000031, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Conv_IntToByte_ReturnValue) == 0x000040, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_GetValidValue_ReturnValue) == 0x000042, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CalcSilviaRemoveIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_CalcSilviaRemoveIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.CheckS030MartinaWeapon
// 0x0278 (0x0278 - 0x0000)
struct BP_FLIB_SaveData_C_CheckS030MartinaWeapon final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Upper;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackGameCharacterEquippedItem> Equip;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UJackUMGItemData*>               Items;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          Ret;                                               // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ClawAtk;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpearAtk;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FJackGameCharacterEquippedItem> CallFunc_GetEquippedItems_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackGameCharacterEquippedItem         CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableItem                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x01E8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_CheckS030MartinaWeapon");
static_assert(sizeof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon) == 0x000278, "Wrong size on BP_FLIB_SaveData_C_CheckS030MartinaWeapon");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Upper) == 0x000008, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Upper' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Equip) == 0x000010, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Equip' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Items) == 0x000020, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Items' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Ret) == 0x000030, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, ClawAtk) == 0x000034, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::ClawAtk' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, SpearAtk) == 0x000038, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::SpearAtk' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GetGameCharacter_ReturnValue) == 0x000040, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GetEquippedItems_ReturnValue) == 0x000048, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GetEquippedItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Temp_bool_True_if_break_was_hit_Variable) == 0x000058, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000268, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000269, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x00026C, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000270, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000271, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000272, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x000273, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_BooleanAND_ReturnValue2) == 0x000274, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_BooleanAND_ReturnValue3) == 0x000275, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_CheckS030MartinaWeapon, CallFunc_BooleanOR_ReturnValue) == 0x000276, "Member 'BP_FLIB_SaveData_C_CheckS030MartinaWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsJapanese
// 0x0010 (0x0010 - 0x0000)
struct BP_FLIB_SaveData_C_IsJapanese final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Japanese;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackEdition                                  CallFunc_GetEditionType_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsJapanese) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsJapanese");
static_assert(sizeof(BP_FLIB_SaveData_C_IsJapanese) == 0x000010, "Wrong size on BP_FLIB_SaveData_C_IsJapanese");
static_assert(offsetof(BP_FLIB_SaveData_C_IsJapanese, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsJapanese::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsJapanese, Japanese) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsJapanese::Japanese' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsJapanese, CallFunc_GetEditionType_ReturnValue) == 0x000009, "Member 'BP_FLIB_SaveData_C_IsJapanese::CallFunc_GetEditionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsJapanese, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_FLIB_SaveData_C_IsJapanese::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsVoiceJapanese
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_IsVoiceJapanese final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VoiceJapanese;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackVoice                                    CallFunc_GetVoiceType_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsVoiceJapanese) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsVoiceJapanese");
static_assert(sizeof(BP_FLIB_SaveData_C_IsVoiceJapanese) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_IsVoiceJapanese");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, VoiceJapanese) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::VoiceJapanese' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, CallFunc_GetUMGManager_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, CallFunc_GetAccessorSaveData_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, CallFunc_GetVoiceType_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::CallFunc_GetVoiceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceJapanese, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_FLIB_SaveData_C_IsVoiceJapanese::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FLIB_SaveData.BP_FLIB_SaveData_C.IsVoiceMute
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_SaveData_C_IsVoiceMute final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VoiveMute;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackAudioVolume                              CallFunc_GetVoiceVolume_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_SaveData_C_IsVoiceMute) == 0x000008, "Wrong alignment on BP_FLIB_SaveData_C_IsVoiceMute");
static_assert(sizeof(BP_FLIB_SaveData_C_IsVoiceMute) == 0x000028, "Wrong size on BP_FLIB_SaveData_C_IsVoiceMute");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, __WorldContext) == 0x000000, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, VoiveMute) == 0x000008, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::VoiveMute' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, CallFunc_GetUMGManager_ReturnValue) == 0x000010, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, CallFunc_GetAccessorSaveData_ReturnValue) == 0x000018, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, CallFunc_GetVoiceVolume_ReturnValue) == 0x000020, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::CallFunc_GetVoiceVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_SaveData_C_IsVoiceMute, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_FLIB_SaveData_C_IsVoiceMute::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tokugi_Piece_001_modern

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern
// 0x0210 (0x0210 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Position2;                            // 0x0034(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Position;                             // 0x003C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Scale;                                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_BgScroll2;                            // 0x0048(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> K2Node_Event_CancelEventListener;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                K2Node_Event_CharacterType;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> K2Node_Event_Listener;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_Event_Sender;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Arg2;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Arg;                                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGTokugiPanelData*                K2Node_Event_PanelData;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemData*                       K2Node_Event_ItemData;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackUMGTokugiPanelAnimData            K2Node_Event_AnimData;                             // 0x00A0(0x0040)()
	class FName                                   K2Node_Event_Message;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Pos;                            // 0x00E8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x00F0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Scale;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_BgScroll;                       // 0x00FC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0104(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x010C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0114(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x011C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0124(0x001C)(NoDestructor)
	float                                         K2Node_Event_DisplayScale;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_BgScroll;                             // 0x0144(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TokugiPanelData_000_C*              K2Node_CustomEvent_Data;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<int32>                                 CallFunc_GetDirList_OpenDirList;                   // 0x0168(0x0010)(ZeroConstructor, ReferenceParm)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x018C(0x003C)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item2;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               K2Node_MakeArray_Array2;                           // 0x01E0(0x0010)(ZeroConstructor, ReferenceParm)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item3;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       CallFunc_Array_Get_Item4;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern) == 0x000210, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_byte_Variable) == 0x000004, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Less_FloatFloat_ReturnValue) == 0x000005, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_bool_Variable) == 0x00000C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_int_Loop_Counter_Variable2) == 0x000024, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Add_IntInt_ReturnValue2) == 0x000028, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_int_Array_Index_Variable2) == 0x00002C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, Temp_byte_Variable2) == 0x000030, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Position2) == 0x000034, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Position2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Position) == 0x00003C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Position' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Scale) == 0x000044, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_BgScroll2) == 0x000048, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_BgScroll2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_CancelEventListener) == 0x000050, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_CancelEventListener' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_CharacterType) == 0x000060, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_CharacterType' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Listener) == 0x000068, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Listener' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Sender) == 0x000078, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Arg2) == 0x000080, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Arg2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Arg) == 0x000088, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Arg' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_PanelData) == 0x000090, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_PanelData' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_ItemData) == 0x000098, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_ItemData' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_AnimData) == 0x0000A0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_AnimData' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_Message) == 0x0000E0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_CustomEvent_Pos) == 0x0000E8, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_CustomEvent_Pos' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_CustomEvent_Position) == 0x0000F0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_CustomEvent_Scale) == 0x0000F8, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_CustomEvent_BgScroll) == 0x0000FC, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_CustomEvent_BgScroll' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000104, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_MakeVector2D_ReturnValue) == 0x00010C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000114, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00011C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_MakeStruct_WidgetTransform) == 0x000124, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_DisplayScale) == 0x000140, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_DisplayScale' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_BgScroll) == 0x000144, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_BgScroll' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_CustomEvent_Data) == 0x000150, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_MakeArray_Array) == 0x000158, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_GetDirList_OpenDirList) == 0x000168, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_GetDirList_OpenDirList' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Get_Item) == 0x000178, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Contains_ReturnValue) == 0x000180, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Length_ReturnValue) == 0x000184, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Less_IntInt_ReturnValue) == 0x000189, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Select_Default) == 0x00018A, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_MyGeometry) == 0x00018C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_Event_InDeltaTime) == 0x0001C8, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001CC, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Length_ReturnValue2) == 0x0001D0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D4, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_RandomInteger_ReturnValue) == 0x0001D8, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Get_Item2) == 0x0001DC, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, K2Node_MakeArray_Array2) == 0x0001E0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Get_Item3) == 0x0001F0, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001F8, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Get_Item4) == 0x000200, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Array_Length_ReturnValue3) == 0x000208, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern, CallFunc_Less_IntInt_ReturnValue2) == 0x00020C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_ExecuteUbergraph_WBP_Menu_Tokugi_Piece_001_modern::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_Tick) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_Tick");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_Tick) == 0x000040, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_Tick");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_Tick, InDeltaTime) == 0x00003C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetData final
{
public:
	class UBP_TokugiPanelData_000_C*              Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetData) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetData");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetData) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetData");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetData, Data) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetData::Data' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetBackGroundScroll
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll final
{
public:
	struct FVector2D                              BgScroll_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll, BgScroll_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetBackGroundScroll::BgScroll_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetDisplayScale
// 0x0004 (0x0004 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale final
{
public:
	float                                         DisplayScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale) == 0x000004, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale, DisplayScale) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayScale::DisplayScale' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetPosAndScale
// 0x0014 (0x0014 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale final
{
public:
	struct FVector2D                              Position_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BgScroll_0;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale) == 0x000014, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale, Position_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale::Position_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale, Scale_0) == 0x000008, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale::Scale_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale, BgScroll_0) == 0x00000C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetPosAndScale::BgScroll_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition, Pos) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetPosition::Pos' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SendTokugiPanelMessage
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage final
{
public:
	class FName                                   Message;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage, Message) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SendTokugiPanelMessage::Message' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.PlayAnimData
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData final
{
public:
	struct FJackUMGTokugiPanelAnimData            AnimData;                                          // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData) == 0x000040, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData, AnimData) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimData::AnimData' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetCharacterItemData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData final
{
public:
	class UJackUMGItemData*                       ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData, ItemData) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetCharacterItemData::ItemData' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetPanelData
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData final
{
public:
	class UJackUMGTokugiPanelData*                PanelData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData, PanelData) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetPanelData::PanelData' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.PlayAnimationNameArg
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg final
{
public:
	class FName                                   Arg;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg, Arg) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationNameArg::Arg' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.PlayAnimationIntArg
// 0x0004 (0x0004 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg final
{
public:
	int32                                         Arg;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg) == 0x000004, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg, Arg) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_PlayAnimationIntArg::Arg' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.OnEndAnim
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim final
{
public:
	class UUserWidget*                            Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim, Sender) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_OnEndAnim::Sender' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetEndAnimEventListener
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener final
{
public:
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> Listener;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener) == 0x000010, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener, Listener) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetEndAnimEventListener::Listener' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetBattleResultMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode final
{
public:
	EJackCharacter                                CharacterType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode) == 0x000001, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode) == 0x000001, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode, CharacterType) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetBattleResultMode::CharacterType' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetCancelEventListener
// 0x0010 (0x0010 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener final
{
public:
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> CancelEventListener;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener) == 0x000010, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener, CancelEventListener) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetCancelEventListener::CancelEventListener' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetDisplayData
// 0x0014 (0x0014 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData final
{
public:
	struct FVector2D                              Position_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BgScroll_0;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData) == 0x000014, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData, Position_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData::Position_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData, Scale_0) == 0x000008, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData::Scale_0' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData, BgScroll_0) == 0x00000C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetDisplayData::BgScroll_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.SetDrawPos
// 0x0008 (0x0008 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos final
{
public:
	struct FVector2D                              Position_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos) == 0x000004, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos) == 0x000008, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos, Position_0) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_SetDrawPos::Position_0' has a wrong offset!");

// Function WBP_Menu_Tokugi_Piece_001_modern.WBP_Menu_Tokugi_Piece_001_modern_C.GetDirList
// 0x0048 (0x0048 - 0x0000)
struct WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList final
{
public:
	class UJackUMGTokugiPanelData*                Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 OpenDirList;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<int32>                                 Ret;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLength_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackTokugiPanelAdjoinPieceState              CallFunc_GetState_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList) == 0x000008, "Wrong alignment on WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList");
static_assert(sizeof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList) == 0x000048, "Wrong size on WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, Data) == 0x000000, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::Data' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, OpenDirList) == 0x000008, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::OpenDirList' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, Ret) == 0x000018, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::Ret' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, Temp_int_Variable) == 0x000028, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_GetLength_ReturnValue) == 0x00002C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_GetLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_GetState_ReturnValue) == 0x000030, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000039, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'WBP_Menu_Tokugi_Piece_001_modern_C_GetDirList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}


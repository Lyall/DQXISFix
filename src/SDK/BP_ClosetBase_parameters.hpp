#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ClosetBase

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ClosetBase.BP_ClosetBase_C.BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature final
{
public:
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature");
static_assert(sizeof(BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature) == 0x000008, "Wrong size on BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000000, "Member 'BP_ClosetBase_C_BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_183_ComponentInteractSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_36_ComponentEndOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    bpp__OverlappedComponent__pf;                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 bpp__OtherActor__pf;                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    bpp__OtherComp__pf;                                // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         bpp__OtherBodyIndex__pf;                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__bFromSweep__pf;                               // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             bpp__SweepResult__pf__const;                       // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__OverlappedComponent__pf) == 0x000000, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__OverlappedComponent__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherActor__pf) == 0x000008, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherActor__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherComp__pf) == 0x000010, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherComp__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__OtherBodyIndex__pf) == 0x000018, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__OtherBodyIndex__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__bFromSweep__pf) == 0x00001C, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__bFromSweep__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bpp__SweepResult__pf__const) == 0x000020, "Member 'BP_ClosetBase_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bpp__SweepResult__pf__const' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.ExecuteUbergraph_BP_ClosetBase_0
// 0x0004 (0x0004 - 0x0000)
struct BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0 final
{
public:
	int32                                         bpp__EntryPoint__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0) == 0x000004, "Wrong alignment on BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0");
static_assert(sizeof(BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0) == 0x000004, "Wrong size on BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0");
static_assert(offsetof(BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0, bpp__EntryPoint__pf) == 0x000000, "Member 'BP_ClosetBase_C_ExecuteUbergraph_BP_ClosetBase_0::bpp__EntryPoint__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.GetClosetAnimation
// 0x0060 (0x0060 - 0x0000)
struct BP_ClosetBase_C_GetClosetAnimation final
{
public:
	class UAnimSequenceBase*                      bpp__DefaultAnimation__pf;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EJackCharacter, class UAnimSequenceBase*> bpp__AnimationMap__pf;                             // 0x0008(0x0050)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      bpp__Animation__pf;                                // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_GetClosetAnimation) == 0x000008, "Wrong alignment on BP_ClosetBase_C_GetClosetAnimation");
static_assert(sizeof(BP_ClosetBase_C_GetClosetAnimation) == 0x000060, "Wrong size on BP_ClosetBase_C_GetClosetAnimation");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimation, bpp__DefaultAnimation__pf) == 0x000000, "Member 'BP_ClosetBase_C_GetClosetAnimation::bpp__DefaultAnimation__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimation, bpp__AnimationMap__pf) == 0x000008, "Member 'BP_ClosetBase_C_GetClosetAnimation::bpp__AnimationMap__pf' has a wrong offset!");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimation, bpp__Animation__pf) == 0x000058, "Member 'BP_ClosetBase_C_GetClosetAnimation::bpp__Animation__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.GetClosetAnimationOnClose
// 0x0008 (0x0008 - 0x0000)
struct BP_ClosetBase_C_GetClosetAnimationOnClose final
{
public:
	class UAnimSequenceBase*                      bpp__Animation__pf;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_GetClosetAnimationOnClose) == 0x000008, "Wrong alignment on BP_ClosetBase_C_GetClosetAnimationOnClose");
static_assert(sizeof(BP_ClosetBase_C_GetClosetAnimationOnClose) == 0x000008, "Wrong size on BP_ClosetBase_C_GetClosetAnimationOnClose");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimationOnClose, bpp__Animation__pf) == 0x000000, "Member 'BP_ClosetBase_C_GetClosetAnimationOnClose::bpp__Animation__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.GetClosetAnimationOnOpen
// 0x0008 (0x0008 - 0x0000)
struct BP_ClosetBase_C_GetClosetAnimationOnOpen final
{
public:
	class UAnimSequenceBase*                      bpp__Animation__pf;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_GetClosetAnimationOnOpen) == 0x000008, "Wrong alignment on BP_ClosetBase_C_GetClosetAnimationOnOpen");
static_assert(sizeof(BP_ClosetBase_C_GetClosetAnimationOnOpen) == 0x000008, "Wrong size on BP_ClosetBase_C_GetClosetAnimationOnOpen");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimationOnOpen, bpp__Animation__pf) == 0x000000, "Member 'BP_ClosetBase_C_GetClosetAnimationOnOpen::bpp__Animation__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.GetClosetAnimationOnOpen(Empty)
// 0x0008 (0x0008 - 0x0000)
struct BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_ final
{
public:
	class UAnimSequenceBase*                      bpp__Animation__pf;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_) == 0x000008, "Wrong alignment on BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_");
static_assert(sizeof(BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_) == 0x000008, "Wrong size on BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_");
static_assert(offsetof(BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_, bpp__Animation__pf) == 0x000000, "Member 'BP_ClosetBase_C_GetClosetAnimationOnOpen_Empty_::bpp__Animation__pf' has a wrong offset!");

// Function BP_ClosetBase.BP_ClosetBase_C.OnGenerateDebugInfoString
// 0x0010 (0x0010 - 0x0000)
struct BP_ClosetBase_C_OnGenerateDebugInfoString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_ClosetBase_C_OnGenerateDebugInfoString) == 0x000008, "Wrong alignment on BP_ClosetBase_C_OnGenerateDebugInfoString");
static_assert(sizeof(BP_ClosetBase_C_OnGenerateDebugInfoString) == 0x000010, "Wrong size on BP_ClosetBase_C_OnGenerateDebugInfoString");
static_assert(offsetof(BP_ClosetBase_C_OnGenerateDebugInfoString, ReturnValue) == 0x000000, "Member 'BP_ClosetBase_C_OnGenerateDebugInfoString::ReturnValue' has a wrong offset!");

}


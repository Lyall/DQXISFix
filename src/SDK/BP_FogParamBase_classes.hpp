#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FogParamBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FogParamBase.BP_FogParamBase_C
// 0x00F0 (0x0128 - 0x0038)
class UBP_FogParamBase_C : public UObject
{
public:
	TArray<float>                                 SunMultiplier;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 FogMultiplier;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 DensityMultiplier;                                 // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 DistanceScale;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 AltitudeScale;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 DistanceOffset;                                    // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 GroundOffset;                                      // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 StartDistance;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 DefaultBrightness;                                 // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLinearColor>                   DefaultLightColor;                                 // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 FogDensity;                                        // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FLinearColor>                   FogInscatteringColor;                              // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 FogHeightFalloff;                                  // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 HeightFogStartDistance;                            // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                 FogMaxOpacity;                                     // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FogParamBase_C">();
	}
	static class UBP_FogParamBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FogParamBase_C>();
	}
};
static_assert(alignof(UBP_FogParamBase_C) == 0x000008, "Wrong alignment on UBP_FogParamBase_C");
static_assert(sizeof(UBP_FogParamBase_C) == 0x000128, "Wrong size on UBP_FogParamBase_C");
static_assert(offsetof(UBP_FogParamBase_C, SunMultiplier) == 0x000038, "Member 'UBP_FogParamBase_C::SunMultiplier' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, FogMultiplier) == 0x000048, "Member 'UBP_FogParamBase_C::FogMultiplier' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, DensityMultiplier) == 0x000058, "Member 'UBP_FogParamBase_C::DensityMultiplier' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, DistanceScale) == 0x000068, "Member 'UBP_FogParamBase_C::DistanceScale' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, AltitudeScale) == 0x000078, "Member 'UBP_FogParamBase_C::AltitudeScale' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, DistanceOffset) == 0x000088, "Member 'UBP_FogParamBase_C::DistanceOffset' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, GroundOffset) == 0x000098, "Member 'UBP_FogParamBase_C::GroundOffset' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, StartDistance) == 0x0000A8, "Member 'UBP_FogParamBase_C::StartDistance' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, DefaultBrightness) == 0x0000B8, "Member 'UBP_FogParamBase_C::DefaultBrightness' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, DefaultLightColor) == 0x0000C8, "Member 'UBP_FogParamBase_C::DefaultLightColor' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, FogDensity) == 0x0000D8, "Member 'UBP_FogParamBase_C::FogDensity' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, FogInscatteringColor) == 0x0000E8, "Member 'UBP_FogParamBase_C::FogInscatteringColor' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, FogHeightFalloff) == 0x0000F8, "Member 'UBP_FogParamBase_C::FogHeightFalloff' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, HeightFogStartDistance) == 0x000108, "Member 'UBP_FogParamBase_C::HeightFogStartDistance' has a wrong offset!");
static_assert(offsetof(UBP_FogParamBase_C, FogMaxOpacity) == 0x000118, "Member 'UBP_FogParamBase_C::FogMaxOpacity' has a wrong offset!");

}


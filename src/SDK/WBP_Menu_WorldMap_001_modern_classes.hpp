#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_001_modern

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_WorldMap_001_modern.WBP_Menu_WorldMap_001_modern_C
// 0x0128 (0x0748 - 0x0620)
class UWBP_Menu_WorldMap_001_modern_C final : public UJackUMGWorldMapWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(Transient, DuplicateTransient)
	class UCanvasPanel*                           ClockHitTestPanel;                                 // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_Ornament1;                                  // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_Ornament2;                                  // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_Ornament3;                                  // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Corner_Ornament4;                                  // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrentPlaceImage;                                 // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_048_C*                  FloorSpinnerWBP;                                   // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapImage;                                          // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MapImageCanvas;                                    // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapSymbolImage;                                    // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MapTextLayer;                                      // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Parts_007_modern_C*           MapTitleWBP;                                       // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NowLoading;                                        // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Paper_003;                                         // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_Pc_000_C*            PCMarkerWBP;                                       // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ShipHarborImage;                                   // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_Clock_000_C*                  WBP_Menu_Clock_000_50;                             // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              PCMarkerEdgeStopMargin;                            // 0x06B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SeaMapNotClippedSize;                              // 0x06B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     BoukenGuideWBP;                                    // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRuraMode;                                         // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDirectRuraMenuMode;                               // 0x06C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OpenRuraMenuEvent;                                 // 0x06D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJackUMGAccessorSaveDataInRura*         RuraData;                                          // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_List_010_modern_C*   WorldMapMenuWidget;                                // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackWorldMapState                            WorldMapUIType;                                    // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_WorldMap_Button_003_modern_C* CaptionButtonWBP;                                  // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelativeFloorLevel;                                // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               WorldMapMID;                                       // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAlreadyUICameraDisabled;                          // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            EaseInCurve;                                       // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClockOpacityWhenHitPCMarker;                       // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBeginClose;                                     // 0x0724(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MapSymbolMID;                                      // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequesterID;                                       // 0x0730(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     RuraMenuWBP;                                       // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpeningAnimeFinished;                             // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OpenRuraMenuEvent__DelegateSignature(bool bOpen);
	void ExecuteUbergraph_WBP_Menu_WorldMap_001_modern(int32 EntryPoint);
	void OnAnimDelegate();
	void WidgetKeyEventDelegate(EJackKeys InKeyType, bool bIsPressed);
	void OnConstructWidget();
	void WidgetBPActionDelegate(class FName EventTag);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetupMapTextRuraModeIfNeeded();
	void SetupDirectRuraMode();
	void OnRemoveRuraMenu();
	void SetRuraData(class UWBP_Menu_WorldMap_List_002_modern_C* Sender, class UJackUMGAccessorSaveDataInRura* RuraData_0);
	void OnSelectWorldMapMenu(class UWBP_Menu_WorldMap_List_010_modern_C* Sender, bool bRura);
	void Open();
	void Close();
	void Update(const struct FGeometry& Geometry, float DeltaTime);
	void OpenWorldMapMenu();
	void OpenBoukenGuide();
	void SetupRuraMode(bool bDiractRuraMenuMode);
	void SetupByMapID();
	void ProcFloorSpinnerKey(EJackKeys Key, bool bPlaysSE);
	void UpdateFloorSpinnerStatus();
	void RequestWorldMap(bool bRuraMode_0);
	void RequestCurrentMap(int32 RelativeLevel);
	void SelectWorldMap(bool bRuraMode_0, bool bForceSelectWorldMap);
	void SelectCurrentMap();
	class UMaterialInstanceDynamic* CreateMID();
	void UpdateMapTextVisible(class UWBP_Map_Text_001_C* MapTextImage);
	void UpdateBoukenGuideVisible(bool bVisible);
	class UCanvasPanel* GetMapTextDrawCanvas();
	class UMaterialInstanceDynamic* CreateMapSymbolMID();
	void MapSymbolVisibleChanged(class UObject* Sender, bool Visible, class UObject* Payload);
	class FName GetRenderTargetName();
	void AsyncLoadFinished(int32 RequesterID_0);
	void SetupCurrentPlaceMarker();
	void UpdateShipHarborMarker();

	struct FVector2D GetDesiredMapViewportSize() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_WorldMap_001_modern_C">();
	}
	static class UWBP_Menu_WorldMap_001_modern_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_WorldMap_001_modern_C>();
	}
};
static_assert(alignof(UWBP_Menu_WorldMap_001_modern_C) == 0x000008, "Wrong alignment on UWBP_Menu_WorldMap_001_modern_C");
static_assert(sizeof(UWBP_Menu_WorldMap_001_modern_C) == 0x000748, "Wrong size on UWBP_Menu_WorldMap_001_modern_C");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, UberGraphFrame) == 0x000620, "Member 'UWBP_Menu_WorldMap_001_modern_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, ClockHitTestPanel) == 0x000628, "Member 'UWBP_Menu_WorldMap_001_modern_C::ClockHitTestPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, Corner_Ornament1) == 0x000630, "Member 'UWBP_Menu_WorldMap_001_modern_C::Corner_Ornament1' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, Corner_Ornament2) == 0x000638, "Member 'UWBP_Menu_WorldMap_001_modern_C::Corner_Ornament2' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, Corner_Ornament3) == 0x000640, "Member 'UWBP_Menu_WorldMap_001_modern_C::Corner_Ornament3' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, Corner_Ornament4) == 0x000648, "Member 'UWBP_Menu_WorldMap_001_modern_C::Corner_Ornament4' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, CurrentPlaceImage) == 0x000650, "Member 'UWBP_Menu_WorldMap_001_modern_C::CurrentPlaceImage' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, FloorSpinnerWBP) == 0x000658, "Member 'UWBP_Menu_WorldMap_001_modern_C::FloorSpinnerWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapImage) == 0x000660, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapImage' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapImageCanvas) == 0x000668, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapImageCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapSymbolImage) == 0x000670, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapSymbolImage' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapTextLayer) == 0x000678, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapTextLayer' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapTitleWBP) == 0x000680, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapTitleWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, NowLoading) == 0x000688, "Member 'UWBP_Menu_WorldMap_001_modern_C::NowLoading' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, Paper_003) == 0x000690, "Member 'UWBP_Menu_WorldMap_001_modern_C::Paper_003' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, PCMarkerWBP) == 0x000698, "Member 'UWBP_Menu_WorldMap_001_modern_C::PCMarkerWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, ShipHarborImage) == 0x0006A0, "Member 'UWBP_Menu_WorldMap_001_modern_C::ShipHarborImage' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, WBP_Menu_Clock_000_50) == 0x0006A8, "Member 'UWBP_Menu_WorldMap_001_modern_C::WBP_Menu_Clock_000_50' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, PCMarkerEdgeStopMargin) == 0x0006B0, "Member 'UWBP_Menu_WorldMap_001_modern_C::PCMarkerEdgeStopMargin' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, SeaMapNotClippedSize) == 0x0006B8, "Member 'UWBP_Menu_WorldMap_001_modern_C::SeaMapNotClippedSize' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, BoukenGuideWBP) == 0x0006C0, "Member 'UWBP_Menu_WorldMap_001_modern_C::BoukenGuideWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, bRuraMode) == 0x0006C8, "Member 'UWBP_Menu_WorldMap_001_modern_C::bRuraMode' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, bDirectRuraMenuMode) == 0x0006C9, "Member 'UWBP_Menu_WorldMap_001_modern_C::bDirectRuraMenuMode' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, OpenRuraMenuEvent) == 0x0006D0, "Member 'UWBP_Menu_WorldMap_001_modern_C::OpenRuraMenuEvent' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, RuraData) == 0x0006E0, "Member 'UWBP_Menu_WorldMap_001_modern_C::RuraData' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, WorldMapMenuWidget) == 0x0006E8, "Member 'UWBP_Menu_WorldMap_001_modern_C::WorldMapMenuWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, WorldMapUIType) == 0x0006F0, "Member 'UWBP_Menu_WorldMap_001_modern_C::WorldMapUIType' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, CaptionButtonWBP) == 0x0006F8, "Member 'UWBP_Menu_WorldMap_001_modern_C::CaptionButtonWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, RelativeFloorLevel) == 0x000700, "Member 'UWBP_Menu_WorldMap_001_modern_C::RelativeFloorLevel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, WorldMapMID) == 0x000708, "Member 'UWBP_Menu_WorldMap_001_modern_C::WorldMapMID' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, bAlreadyUICameraDisabled) == 0x000710, "Member 'UWBP_Menu_WorldMap_001_modern_C::bAlreadyUICameraDisabled' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, EaseInCurve) == 0x000718, "Member 'UWBP_Menu_WorldMap_001_modern_C::EaseInCurve' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, ClockOpacityWhenHitPCMarker) == 0x000720, "Member 'UWBP_Menu_WorldMap_001_modern_C::ClockOpacityWhenHitPCMarker' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, bIsBeginClose) == 0x000724, "Member 'UWBP_Menu_WorldMap_001_modern_C::bIsBeginClose' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, MapSymbolMID) == 0x000728, "Member 'UWBP_Menu_WorldMap_001_modern_C::MapSymbolMID' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, RequesterID) == 0x000730, "Member 'UWBP_Menu_WorldMap_001_modern_C::RequesterID' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, RuraMenuWBP) == 0x000738, "Member 'UWBP_Menu_WorldMap_001_modern_C::RuraMenuWBP' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_WorldMap_001_modern_C, bOpeningAnimeFinished) == 0x000740, "Member 'UWBP_Menu_WorldMap_001_modern_C::bOpeningAnimeFinished' has a wrong offset!");

}


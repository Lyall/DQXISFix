#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_WorldMap_List_000_modern

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenRuraMenuEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature) == 0x000001, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature, bOpen) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenuEvent__DelegateSignature::bOpen' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern
// 0x0088 (0x0088 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventTag)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_EventTag;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_AddUMGMenuWithSnap_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_Common_Setumei_000_modern_C*  K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventName, class UJackUMGItemBase* InItemBase)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bOpen;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue3;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_000_modern_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue4;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern) == 0x000088, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, EntryPoint) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_CustomEvent_EventTag) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, CallFunc_GetUMGManager_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, CallFunc_AddUMGMenuWithSnap_ReturnValue) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::CallFunc_AddUMGMenuWithSnap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_DynamicCast_AsWBP_Menu_Common_Setumei_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_CreateDelegate_OutputDelegate2) == 0x000048, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_CustomEvent_bOpen) == 0x000058, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_CustomEvent_bOpen' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, CallFunc_GetUMGManager_ReturnValue2) == 0x000060, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, CallFunc_GetUMGManager_ReturnValue3) == 0x000068, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::CallFunc_GetUMGManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern) == 0x000070, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, K2Node_DynamicCast_bSuccess2) == 0x000078, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern, CallFunc_GetUMGManager_ReturnValue4) == 0x000080, "Member 'WBP_Menu_WorldMap_List_000_modern_C_ExecuteUbergraph_WBP_Menu_WorldMap_List_000_modern::CallFunc_GetUMGManager_ReturnValue4' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OnOpenRuraMenu
// 0x0001 (0x0001 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu) == 0x000001, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu) == 0x000001, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu, bOpen) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnOpenRuraMenu::bOpen' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.CustomEvent_0
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0 final
{
public:
	class FName                                   EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0) == 0x000008, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0, EventTag) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_CustomEvent_0::EventTag' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenWorldMap
// 0x0058 (0x0058 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap final
{
public:
	bool                                          IsFocus;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDiractRuraMenuMode;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackWorldMapOpenReason                       OpenReason;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOk;                                             // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable2;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_OpenMenu_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_000_modern_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap) == 0x000058, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, IsFocus) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::IsFocus' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, bDiractRuraMenuMode) == 0x000001, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::bDiractRuraMenuMode' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, OpenReason) == 0x000002, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::OpenReason' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, bIsOk) == 0x000003, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::bIsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, Temp_name_Variable) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, Temp_name_Variable2) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, CallFunc_GetUMGManager_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, Temp_bool_Variable) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, CallFunc_GetUMGManager_ReturnValue2) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, K2Node_Select_Default) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, CallFunc_OpenMenu_ReturnValue) == 0x000040, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::CallFunc_OpenMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern) == 0x000048, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenWorldMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenQuestList
// 0x0050 (0x0050 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList final
{
public:
	bool                                          bIsOk;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable2;                             // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackUMGSerifuWindowController*         CallFunc_DisplaySerifuWindowAtTextID_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSerifuWindowController*         CallFunc_DisplaySerifuWindowAtTextID_ReturnValue2; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSScenario_SScenario;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList) == 0x000050, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, bIsOk) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::bIsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, Temp_struct_Variable) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, Temp_struct_Variable2) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, CallFunc_DisplaySerifuWindowAtTextID_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::CallFunc_DisplaySerifuWindowAtTextID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, CallFunc_DisplaySerifuWindowAtTextID_ReturnValue2) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::CallFunc_DisplaySerifuWindowAtTextID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, CallFunc_IsSScenario_SScenario) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::CallFunc_IsSScenario_SScenario' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, CallFunc_GetUMGManager_ReturnValue) == 0x000040, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList, CallFunc_PushMenu_ReturnValue) == 0x000048, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenQuestList::CallFunc_PushMenu_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenKiraList
// 0x0078 (0x0078 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList final
{
public:
	bool                                          bIsOk;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGSerifuWindowController*         CallFunc_DisplaySerifuWindowAtTextID_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentMapVolumeID_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentMapUnleashed_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue2;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_WorldMap_000_modern_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue4;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList) == 0x000078, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, bIsOk) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::bIsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, Temp_struct_Variable) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_GetUMGManager_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_DisplaySerifuWindowAtTextID_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_DisplaySerifuWindowAtTextID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_GetParentMapVolumeID_ReturnValue) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_GetParentMapVolumeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_IsCurrentMapUnleashed_ReturnValue) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_IsCurrentMapUnleashed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000031, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_GetSaveData_ReturnValue) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_GetUMGManager_ReturnValue2) == 0x000040, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_GetUMGManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_GetActiveMapID_ReturnValue) == 0x000048, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000050, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x000051, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern) == 0x000058, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_EqualEqual_NameName_ReturnValue4) == 0x000061, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_EqualEqual_NameName_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_PushMenu_ReturnValue) == 0x000068, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_PushMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_BooleanOR_ReturnValue) == 0x000070, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_BooleanOR_ReturnValue2) == 0x000071, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_BooleanOR_ReturnValue3) == 0x000072, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList, CallFunc_BooleanOR_ReturnValue4) == 0x000073, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenKiraList::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OnItemListEvent
// 0x0030 (0x0030 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGItemBase*                       Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOk;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenMonsterList_IsOk;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDataIndex_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemId_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenNeighborMapList_IsOk;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenRuraMenu_bIsOK;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenKiraList_bIsOK;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenQuestList_bIsOK;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenWorldMap_bIsOK;                       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent) == 0x000030, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, EventName) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::EventName' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, Item) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, bIsOk) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::bIsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenMonsterList_IsOk) == 0x000011, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenMonsterList_IsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_GetDataIndex_ReturnValue) == 0x000014, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_GetDataIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_GetItemId_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, K2Node_SwitchName2_CmpSuccess) == 0x000021, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenNeighborMapList_IsOk) == 0x000022, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenNeighborMapList_IsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenRuraMenu_bIsOK) == 0x000023, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenRuraMenu_bIsOK' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenKiraList_bIsOK) == 0x000024, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenKiraList_bIsOK' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenQuestList_bIsOK) == 0x000025, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenQuestList_bIsOK' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_OpenWorldMap_bIsOK) == 0x000026, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_OpenWorldMap_bIsOK' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OnItemListEvent::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.UpdateMenuStatus
// 0x0128 (0x0128 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus final
{
public:
	struct FVector2D                              ItemBasePosition;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackUMGItemBase*>               MenuItemList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UJackUMGItemBase*>               RemoveMenuItemList;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackUMGTextColorSet                          Temp_byte_Variable2;                               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGItemBase*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0058(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue2;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAcquiredRura_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasSekaitizu_Result;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0080(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackUMGItemBase*>               K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue3;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue2;                     // 0x00C4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue4;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue2;                 // 0x00E0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue3;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X5;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue4;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0108(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMapVolumeID_ReturnValue;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGAccessorSenreki*                CallFunc_GetAccessorSenreki_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExistsQuestMemoData_bExists;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExistsQuestMemoData_bHighlight;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackUMGTextColorSet                          K2Node_Select_Default;                             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus) == 0x000128, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, ItemBasePosition) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::ItemBasePosition' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, MenuItemList) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::MenuItemList' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, RemoveMenuItemList) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::RemoveMenuItemList' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_name_Variable) == 0x000028, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_name_Variable2) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_bool_Variable) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_byte_Variable) == 0x000039, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_byte_Variable2) == 0x00003A, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_RemoveItem_ReturnValue) == 0x000044, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetSize_ReturnValue) == 0x000058, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_X) == 0x000060, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_Y) == 0x000064, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetAccessorSaveData_ReturnValue) == 0x000068, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_RemoveItem_ReturnValue2) == 0x000070, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_RemoveItem_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_IsAcquiredRura_ReturnValue) == 0x000071, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_IsAcquiredRura_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_HasSekaitizu_Result) == 0x000072, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_HasSekaitizu_Result' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_SlotAsCanvasSlot_ReturnValue2) == 0x000078, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_SlotAsCanvasSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetPosition_ReturnValue) == 0x000080, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_X2) == 0x000098, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_Y2) == 0x00009C, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_MakeVector2D_ReturnValue) == 0x0000A4, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_X3) == 0x0000AC, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_Y3) == 0x0000B0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_SlotAsCanvasSlot_ReturnValue3) == 0x0000B8, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_SlotAsCanvasSlot_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetSize_ReturnValue2) == 0x0000C4, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_X4) == 0x0000CC, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_Y4) == 0x0000D0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_SlotAsCanvasSlot_ReturnValue4) == 0x0000D8, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_SlotAsCanvasSlot_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetPosition_ReturnValue2) == 0x0000E0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetPosition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_RemoveItem_ReturnValue3) == 0x0000E8, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_RemoveItem_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_X5) == 0x0000EC, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_BreakVector2D_Y5) == 0x0000F0, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0000F4, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Array_RemoveItem_ReturnValue4) == 0x0000F8, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Array_RemoveItem_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0000FC, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetUMGManager_ReturnValue) == 0x000100, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_MakeVector2D_ReturnValue2) == 0x000108, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetMapVolumeID_ReturnValue) == 0x000110, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetMapVolumeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_GetAccessorSenreki_ReturnValue) == 0x000118, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_GetAccessorSenreki_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_ExistsQuestMemoData_bExists) == 0x000120, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_ExistsQuestMemoData_bExists' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, CallFunc_ExistsQuestMemoData_bHighlight) == 0x000121, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::CallFunc_ExistsQuestMemoData_bHighlight' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus, K2Node_Select_Default) == 0x000122, "Member 'WBP_Menu_WorldMap_List_000_modern_C_UpdateMenuStatus::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenRuraMenu
// 0x0040 (0x0040 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu final
{
public:
	bool                                          bIsOk;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGAccessorSaveData*               CallFunc_GetAccessorSaveData_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRuraAvailable_bAvaiable;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountRuraList_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_OpenWorldMap_bIsOK;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGSerifuWindowController*         CallFunc_DisplaySerifuWindowAtTextID_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu) == 0x000040, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, bIsOk) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::bIsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_GetAccessorSaveData_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_GetAccessorSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_CheckRuraAvailable_bAvaiable) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_CheckRuraAvailable_bAvaiable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_CountRuraList_ReturnValue) == 0x000014, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_CountRuraList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, Temp_struct_Variable) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_OpenWorldMap_bIsOK) == 0x000030, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_OpenWorldMap_bIsOK' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu, CallFunc_DisplaySerifuWindowAtTextID_ReturnValue) == 0x000038, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenRuraMenu::CallFunc_DisplaySerifuWindowAtTextID_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenNeighborMapList
// 0x0028 (0x0028 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList final
{
public:
	bool                                          IsOk;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_000_modern_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList) == 0x000028, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList, IsOk) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList::IsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList, K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList::K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList, CallFunc_PushMenu_ReturnValue) == 0x000020, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenNeighborMapList::CallFunc_PushMenu_ReturnValue' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.RequestToDisplayCurrentMap
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap final
{
public:
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_WorldMap_000_modern_C*        K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap) == 0x000018, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap, CallFunc_GetUMGManager_ReturnValue) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap, K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap::K2Node_DynamicCast_AsWBP_Menu_World_Map_000_Modern' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_RequestToDisplayCurrentMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_Menu_WorldMap_List_000_modern.WBP_Menu_WorldMap_List_000_modern_C.OpenMonsterList
// 0x0018 (0x0018 - 0x0000)
struct WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList final
{
public:
	bool                                          IsOk;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackUMGWidgetBase*                     CallFunc_PushMenu_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList) == 0x000008, "Wrong alignment on WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList");
static_assert(sizeof(WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList) == 0x000018, "Wrong size on WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList, IsOk) == 0x000000, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList::IsOk' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList, CallFunc_PushMenu_ReturnValue) == 0x000010, "Member 'WBP_Menu_WorldMap_List_000_modern_C_OpenMonsterList::CallFunc_PushMenu_ReturnValue' has a wrong offset!");

}


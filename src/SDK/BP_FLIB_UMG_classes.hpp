#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_UMG

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ENUM_Menu_ActionFlowResult_structs.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FLIB_UMG.BP_FLIB_UMG_C
// 0x0000 (0x0038 - 0x0038)
class UBP_FLIB_UMG_C final : public UBlueprintFunctionLibrary
{
public:
	static void BPFLibTestSetItemId(class FName InItemId, class UObject* __WorldContext);
	static void DoBattleItemAction(class UJackUMGUIActionInfo* InUIActionInfo, class UObject* __WorldContext);
	static void DoItemUseCommand(class UJackUMGUIActionInfo* InUIActionInfoRef, class UObject* __WorldContext, ENUM_Menu_ActionFlowResult* FlowResult, EJackUMGUIActionFlow* UIFrow);
	static void SetOddEffectList(class UJackUMGAccessorMembers* Target, EJackCharacter InCharType, TArray<class UWBP_Menu_Parts_Buff_000_C*>& BuffPanels, class UObject* __WorldContext);
	static void GetUMGBagText(EJackItem_Bag Selection, class UObject* __WorldContext, class FText* NewParam);
	static void GetNearestMiniMapCameraFromPC(TArray<class ABP_MiniMapCamera_C*>& BP_Mini_Map_Camera_Array, class UObject* __WorldContext, class ABP_MiniMapCamera_C** Nearest_BP_Mini_Map_Camera);
	static void GetUMGTargetTaneName(class FName Selection, class UObject* __WorldContext, class FName* NewParam);
	static void GetUMGTaneParam(class UJackGameCharacter* Target, class FName Selection, class UObject* __WorldContext, int32* OutTaneParam);
	static void GetUMGRarityTextAndColor(int32 InRarity, class UObject* __WorldContext, class FText* OutText, EJackUMGTextColorSet* OutColor);
	static void IsTokugiNitouryuu(EJackCharacter InType, class UObject* __WorldContext, bool* NewParam);
	static void DoUMGEquipumentTarget(EJackEquipmentRegion InRegionType, class UObject* __WorldContext);
	static void SaveUMGDouguCursor(class UObject* __WorldContext);
	static void IsUMGSouthpaw(EJackCharacter InCharType, class UObject* __WorldContext, bool* IsSouthpaw);
	static class UJackUMGUIActionInfo* GetUMGEquippedItemFromRegion(EJackCharacter InCharType, EJackEquipmentRegion InRegionType, class UObject* __WorldContext);
	static void ActionUMGEquipment(int32 InIndex, EJackEquipmentRegion InRegion, int32 InArg1, class UObject* __WorldContext);
	static void PlayUMGEquipmentSound(class UObject* __WorldContext);
	static EJackCharacter GetUMGAliveCharacterType(class UObject* __WorldContext);
	static class FString GetUMGAliveCharacterName(class UObject* __WorldContext);
	static void UpdateUMGSmallLocationTitle(bool InIsShowMenu, class UObject* __WorldContext);
	static void IsUMGShowLocationTitle(class UObject* __WorldContext, bool* IsOpen);
	static void GetUMGBagString(EJackItem_Bag InBagType, bool IsCharaName, bool IsList, class UObject* __WorldContext, class FString* NewParam);
	static void IsUIDisableCommandByFish(class UObject* __WorldContext, bool* IsDisableCommandByFish);
	static void SetSoubiListDataToParts001List(TArray<class UObject*>& Parts001List, class UJackUMGSoubiList* SoubiList, EJackUMGBackgroundColor BgType, class UObject* __WorldContext);
	static void SetUIDisableCamera(bool bIsDisable, class UObject* __WorldContext);
	static void RemoveMenuItem(TArray<class UJackUMGItemBase*>& MenuItemList, class UJackUMGItemBase* RemoveTarget, class UWidget* ParentPanel, class UObject* __WorldContext);
	static void GetUMGSoubiRegionTextId(EJackCharacter InCharType, EJackEquipmentRegion InRegionType, class UObject* __WorldContext, class FName* OutTextId);
	static class FName GetUMGSoubiRegionMessageTextId(EJackCharacter InCharType, EJackEquipmentRegion Index_0, class UObject* __WorldContext);
	static void ToggleUMGCounter(int32 InValue, int32 InMin, int32 InMax, class UObject* __WorldContext, int32* OutValue);
	static void GetUIDisableCamera(class UObject* __WorldContext, bool* Disabled);
	static void GetUMGBagCharacter(EJackItem_Bag InBagType, class UObject* __WorldContext, class UJackGameCharacter** NewParam);

	static void IsUMGDeadCharacter(EJackCharacter InCharType, class UObject* __WorldContext, bool* bIsDead);
	static void IsUMGAliveCharacter(EJackCharacter InType, class UObject* __WorldContext, bool* bIsAlive);
	static void IsUMGSelectItemEquipmentRegion(EJackEquipmentRegion InEquipmentRegion, class UObject* __WorldContext, bool* IsEquipument);
	static void IsUMGAliveSelectCharacter(class UObject* __WorldContext, bool* bIsLive);
	static void IsUMGAliveTargetCharacter(class UObject* __WorldContext, bool* bIsAlive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FLIB_UMG_C">();
	}
	static class UBP_FLIB_UMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FLIB_UMG_C>();
	}
};
static_assert(alignof(UBP_FLIB_UMG_C) == 0x000008, "Wrong alignment on UBP_FLIB_UMG_C");
static_assert(sizeof(UBP_FLIB_UMG_C) == 0x000038, "Wrong size on UBP_FLIB_UMG_C");

}


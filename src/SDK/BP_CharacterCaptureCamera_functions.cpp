#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterCaptureCamera

#include "Basic.hpp"

#include "BP_CharacterCaptureCamera_classes.hpp"
#include "BP_CharacterCaptureCamera_parameters.hpp"


namespace SDK
{

// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.ExecuteUbergraph_BP_CharacterCaptureCamera
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterCaptureCamera_C::ExecuteUbergraph_BP_CharacterCaptureCamera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "ExecuteUbergraph_BP_CharacterCaptureCamera");

	Params::BP_CharacterCaptureCamera_C_ExecuteUbergraph_BP_CharacterCaptureCamera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.SetDebugTargetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        SlideTargetOrigin                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MaxSlideTargetSize                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MinSlideTargetSize                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterCaptureCamera_C::SetDebugTargetSize(bool bVisible, const struct FVector2D& SlideTargetOrigin, const struct FVector2D& MaxSlideTargetSize, const struct FVector2D& MinSlideTargetSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "SetDebugTargetSize");

	Params::BP_CharacterCaptureCamera_C_SetDebugTargetSize Parms{};

	Parms.bVisible = bVisible;
	Parms.SlideTargetOrigin = std::move(SlideTargetOrigin);
	Parms.MaxSlideTargetSize = std::move(MaxSlideTargetSize);
	Parms.MinSlideTargetSize = std::move(MinSlideTargetSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.SetWallpaperDistance
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterCaptureCamera_C::SetWallpaperDistance(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "SetWallpaperDistance");

	Params::BP_CharacterCaptureCamera_C_SetWallpaperDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.SetLightParameter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FJackZukanMotionDirectionalLightParameter>DirectionalLightParameterList                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FJackZukanMotionPointLightParameter>PointLightParameterList                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_CharacterCaptureCamera_C::SetLightParameter(const TArray<struct FJackZukanMotionDirectionalLightParameter>& DirectionalLightParameterList, const TArray<struct FJackZukanMotionPointLightParameter>& PointLightParameterList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "SetLightParameter");

	Params::BP_CharacterCaptureCamera_C_SetLightParameter Parms{};

	Parms.DirectionalLightParameterList = std::move(DirectionalLightParameterList);
	Parms.PointLightParameterList = std::move(PointLightParameterList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.HideDebugInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::HideDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "HideDebugInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.HideDebugTargetSize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::HideDebugTargetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "HideDebugTargetSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.ShowDebugInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::ShowDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "ShowDebugInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.ShowDebugTargetSize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::ShowDebugTargetSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "ShowDebugTargetSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.UpdateWallpaparPosition
// (BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::UpdateWallpaparPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "UpdateWallpaparPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterCaptureCamera.BP_CharacterCaptureCamera_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CharacterCaptureCamera_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterCaptureCamera_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkyBase

#include "Basic.hpp"

#include "BP_SkyBase_classes.hpp"
#include "BP_SkyBase_parameters.hpp"


namespace SDK
{

// Function BP_SkyBase.BP_SkyBase_C.EndCutScene
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::EndCutScene(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "EndCutScene");

	Params::BP_SkyBase_C_EndCutScene Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.EndCutSceneBeforeUnload
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::EndCutSceneBeforeUnload(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "EndCutSceneBeforeUnload");

	Params::BP_SkyBase_C_EndCutSceneBeforeUnload Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.EndCutSceneFadInBefore
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::EndCutSceneFadInBefore(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "EndCutSceneFadInBefore");

	Params::BP_SkyBase_C_EndCutSceneFadInBefore Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.ExecuteUbergraph_BP_SkyBase_4
// (Final, Native, Public)
// Parameters:
// int32                                   bpp__EntryPoint__pf                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::ExecuteUbergraph_BP_SkyBase_4(int32 bpp__EntryPoint__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "ExecuteUbergraph_BP_SkyBase_4");

	Params::BP_SkyBase_C_ExecuteUbergraph_BP_SkyBase_4 Parms{};

	Parms.bpp__EntryPoint__pf = bpp__EntryPoint__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.GetNowColorWeatherCalc
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     bpp__OldColor__pf                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLinearColor>             bpp__NewColor__pf                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   bpp__WeatherChangeRate__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__NowColor__pf                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::GetNowColorWeatherCalc(const struct FLinearColor& bpp__OldColor__pf, TArray<struct FLinearColor>* bpp__NewColor__pf, float bpp__WeatherChangeRate__pf, struct FLinearColor* bpp__NowColor__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "GetNowColorWeatherCalc");

	Params::BP_SkyBase_C_GetNowColorWeatherCalc Parms{};

	Parms.bpp__OldColor__pf = std::move(bpp__OldColor__pf);
	Parms.bpp__WeatherChangeRate__pf = bpp__WeatherChangeRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__NewColor__pf != nullptr)
		*bpp__NewColor__pf = std::move(Parms.bpp__NewColor__pf);

	if (bpp__NowColor__pf != nullptr)
		*bpp__NowColor__pf = std::move(Parms.bpp__NowColor__pf);
}


// Function BP_SkyBase.BP_SkyBase_C.GetNowFloatWeatherCalc
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   bpp__OldFloat__pf                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           bpp__NewFloat__pf                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   bpp__WeatherChangeRate__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__NowFloat__pf                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::GetNowFloatWeatherCalc(float bpp__OldFloat__pf, TArray<float>* bpp__NewFloat__pf, float bpp__WeatherChangeRate__pf, float* bpp__NowFloat__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "GetNowFloatWeatherCalc");

	Params::BP_SkyBase_C_GetNowFloatWeatherCalc Parms{};

	Parms.bpp__OldFloat__pf = bpp__OldFloat__pf;
	Parms.bpp__WeatherChangeRate__pf = bpp__WeatherChangeRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__NewFloat__pf != nullptr)
		*bpp__NewFloat__pf = std::move(Parms.bpp__NewFloat__pf);

	if (bpp__NowFloat__pf != nullptr)
		*bpp__NowFloat__pf = Parms.bpp__NowFloat__pf;
}


// Function BP_SkyBase.BP_SkyBase_C.GetNowSkyParameter
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EJackWorldWeather                       bpp__NewWeather__pf                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__WeatherChangeRate__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__ZenithColor__pf                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__MiddleColor__pf                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__HorizonColor__pf                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__OverallColor__pf                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__SunLightColor__pf                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__SunColor__pf                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__CloudColor__pf                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__CloudColorShadow__pf                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__SunLightIntensity__pf                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__HorizonFalloff__pf                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__MiddleFalloff__pf                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__CloudOpacity__pf                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__MoonLightColor__pf                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__MoonLightBrightness__pf                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__TaijuColorPlaneBright__pf                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__TaijuColorPlaneShadow__pf                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__MajouColorPlaneBright__pf                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__MajouColorPlaneShadow__pf                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::GetNowSkyParameter(EJackWorldWeather bpp__NewWeather__pf, float bpp__WeatherChangeRate__pf, struct FLinearColor* bpp__ZenithColor__pf, struct FLinearColor* bpp__MiddleColor__pf, struct FLinearColor* bpp__HorizonColor__pf, struct FLinearColor* bpp__OverallColor__pf, struct FLinearColor* bpp__SunLightColor__pf, struct FLinearColor* bpp__SunColor__pf, struct FLinearColor* bpp__CloudColor__pf, struct FLinearColor* bpp__CloudColorShadow__pf, float* bpp__SunLightIntensity__pf, float* bpp__HorizonFalloff__pf, float* bpp__MiddleFalloff__pf, float* bpp__CloudOpacity__pf, struct FLinearColor* bpp__MoonLightColor__pf, float* bpp__MoonLightBrightness__pf, struct FLinearColor* bpp__TaijuColorPlaneBright__pf, struct FLinearColor* bpp__TaijuColorPlaneShadow__pf, struct FLinearColor* bpp__MajouColorPlaneBright__pf, struct FLinearColor* bpp__MajouColorPlaneShadow__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "GetNowSkyParameter");

	Params::BP_SkyBase_C_GetNowSkyParameter Parms{};

	Parms.bpp__NewWeather__pf = bpp__NewWeather__pf;
	Parms.bpp__WeatherChangeRate__pf = bpp__WeatherChangeRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__ZenithColor__pf != nullptr)
		*bpp__ZenithColor__pf = std::move(Parms.bpp__ZenithColor__pf);

	if (bpp__MiddleColor__pf != nullptr)
		*bpp__MiddleColor__pf = std::move(Parms.bpp__MiddleColor__pf);

	if (bpp__HorizonColor__pf != nullptr)
		*bpp__HorizonColor__pf = std::move(Parms.bpp__HorizonColor__pf);

	if (bpp__OverallColor__pf != nullptr)
		*bpp__OverallColor__pf = std::move(Parms.bpp__OverallColor__pf);

	if (bpp__SunLightColor__pf != nullptr)
		*bpp__SunLightColor__pf = std::move(Parms.bpp__SunLightColor__pf);

	if (bpp__SunColor__pf != nullptr)
		*bpp__SunColor__pf = std::move(Parms.bpp__SunColor__pf);

	if (bpp__CloudColor__pf != nullptr)
		*bpp__CloudColor__pf = std::move(Parms.bpp__CloudColor__pf);

	if (bpp__CloudColorShadow__pf != nullptr)
		*bpp__CloudColorShadow__pf = std::move(Parms.bpp__CloudColorShadow__pf);

	if (bpp__SunLightIntensity__pf != nullptr)
		*bpp__SunLightIntensity__pf = Parms.bpp__SunLightIntensity__pf;

	if (bpp__HorizonFalloff__pf != nullptr)
		*bpp__HorizonFalloff__pf = Parms.bpp__HorizonFalloff__pf;

	if (bpp__MiddleFalloff__pf != nullptr)
		*bpp__MiddleFalloff__pf = Parms.bpp__MiddleFalloff__pf;

	if (bpp__CloudOpacity__pf != nullptr)
		*bpp__CloudOpacity__pf = Parms.bpp__CloudOpacity__pf;

	if (bpp__MoonLightColor__pf != nullptr)
		*bpp__MoonLightColor__pf = std::move(Parms.bpp__MoonLightColor__pf);

	if (bpp__MoonLightBrightness__pf != nullptr)
		*bpp__MoonLightBrightness__pf = Parms.bpp__MoonLightBrightness__pf;

	if (bpp__TaijuColorPlaneBright__pf != nullptr)
		*bpp__TaijuColorPlaneBright__pf = std::move(Parms.bpp__TaijuColorPlaneBright__pf);

	if (bpp__TaijuColorPlaneShadow__pf != nullptr)
		*bpp__TaijuColorPlaneShadow__pf = std::move(Parms.bpp__TaijuColorPlaneShadow__pf);

	if (bpp__MajouColorPlaneBright__pf != nullptr)
		*bpp__MajouColorPlaneBright__pf = std::move(Parms.bpp__MajouColorPlaneBright__pf);

	if (bpp__MajouColorPlaneShadow__pf != nullptr)
		*bpp__MajouColorPlaneShadow__pf = std::move(Parms.bpp__MajouColorPlaneShadow__pf);
}


// Function BP_SkyBase.BP_SkyBase_C.GetSkyParamID
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EJackWorldWeather                       bpp__Weather__pf                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   bpp__SkyParamID__pf                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::GetSkyParamID(EJackWorldWeather bpp__Weather__pf, int32* bpp__SkyParamID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "GetSkyParamID");

	Params::BP_SkyBase_C_GetSkyParamID Parms{};

	Parms.bpp__Weather__pf = bpp__Weather__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__SkyParamID__pf != nullptr)
		*bpp__SkyParamID__pf = Parms.bpp__SkyParamID__pf;
}


// Function BP_SkyBase.BP_SkyBase_C.GetWeatherChangeRate
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   bpp__WeatherChangeRate__pf                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::GetWeatherChangeRate(float* bpp__WeatherChangeRate__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "GetWeatherChangeRate");

	Params::BP_SkyBase_C_GetWeatherChangeRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__WeatherChangeRate__pf != nullptr)
		*bpp__WeatherChangeRate__pf = Parms.bpp__WeatherChangeRate__pf;
}


// Function BP_SkyBase.BP_SkyBase_C.ReceiveBeginPlay
// (Final, Native, Event, Public)

void ABP_SkyBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.ReceiveTick
// (Final, Native, Event, Public)
// Parameters:
// float                                   bpp__DeltaSeconds__pf                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::ReceiveTick(float bpp__DeltaSeconds__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "ReceiveTick");

	Params::BP_SkyBase_C_ReceiveTick Parms{};

	Parms.bpp__DeltaSeconds__pf = bpp__DeltaSeconds__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetBillboardSkyParts
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialBillboardComponent*      bpp__MaterialBillboard__pf                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         bpp__Rotation__pf                                      (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   bpp__WorldConvScale__pf                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetBillboardSkyParts(class UMaterialBillboardComponent* bpp__MaterialBillboard__pf, const struct FRotator& bpp__Rotation__pf, float* bpp__WorldConvScale__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetBillboardSkyParts");

	Params::BP_SkyBase_C_SetBillboardSkyParts Parms{};

	Parms.bpp__MaterialBillboard__pf = bpp__MaterialBillboard__pf;
	Parms.bpp__Rotation__pf = std::move(bpp__Rotation__pf);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bpp__WorldConvScale__pf != nullptr)
		*bpp__WorldConvScale__pf = Parms.bpp__WorldConvScale__pf;
}


// Function BP_SkyBase.BP_SkyBase_C.SetCloudAngle
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SetCloudAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetCloudAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetCloudParam
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     bpp__CloudColor__pf                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__CloudColorShadow__pf                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__CloudyRate__pf                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetCloudParam(const struct FLinearColor& bpp__CloudColor__pf, const struct FLinearColor& bpp__CloudColorShadow__pf, float bpp__CloudyRate__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetCloudParam");

	Params::BP_SkyBase_C_SetCloudParam Parms{};

	Parms.bpp__CloudColor__pf = std::move(bpp__CloudColor__pf);
	Parms.bpp__CloudColorShadow__pf = std::move(bpp__CloudColorShadow__pf);
	Parms.bpp__CloudyRate__pf = bpp__CloudyRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetCloudWeather
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   bpp__WeatherChangeRate__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetCloudWeather(float bpp__WeatherChangeRate__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetCloudWeather");

	Params::BP_SkyBase_C_SetCloudWeather Parms{};

	Parms.bpp__WeatherChangeRate__pf = bpp__WeatherChangeRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetFogWeather
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   bpp__WeatherChangeRate__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetFogWeather(float bpp__WeatherChangeRate__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetFogWeather");

	Params::BP_SkyBase_C_SetFogWeather Parms{};

	Parms.bpp__WeatherChangeRate__pf = bpp__WeatherChangeRate__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetMoonParam
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   bpp__MoonAlpha__pf                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetMoonParam(float bpp__MoonAlpha__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetMoonParam");

	Params::BP_SkyBase_C_SetMoonParam Parms{};

	Parms.bpp__MoonAlpha__pf = bpp__MoonAlpha__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetNightRate
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SetNightRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetNightRate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetPlaneParam
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         bpp__MaterialInstanceDynamic__pf                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__ColorPlaneBright__pf                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__ColorPlaneShadow__pf                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__Alpha__pf                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetPlaneParam(class UMaterialInstanceDynamic* bpp__MaterialInstanceDynamic__pf, const struct FLinearColor& bpp__ColorPlaneBright__pf, const struct FLinearColor& bpp__ColorPlaneShadow__pf, float bpp__Alpha__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetPlaneParam");

	Params::BP_SkyBase_C_SetPlaneParam Parms{};

	Parms.bpp__MaterialInstanceDynamic__pf = bpp__MaterialInstanceDynamic__pf;
	Parms.bpp__ColorPlaneBright__pf = std::move(bpp__ColorPlaneBright__pf);
	Parms.bpp__ColorPlaneShadow__pf = std::move(bpp__ColorPlaneShadow__pf);
	Parms.bpp__Alpha__pf = bpp__Alpha__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetSkyDomeParam
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     bpp__ZenithColor__pf                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__MiddleColor__pf                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__HorizonColor__pf                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__OverallColor__pf                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__HorizonFalloff__pf                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__MiddleFalloff__pf                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetSkyDomeParam(const struct FLinearColor& bpp__ZenithColor__pf, const struct FLinearColor& bpp__MiddleColor__pf, const struct FLinearColor& bpp__HorizonColor__pf, const struct FLinearColor& bpp__OverallColor__pf, float bpp__HorizonFalloff__pf, float bpp__MiddleFalloff__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetSkyDomeParam");

	Params::BP_SkyBase_C_SetSkyDomeParam Parms{};

	Parms.bpp__ZenithColor__pf = std::move(bpp__ZenithColor__pf);
	Parms.bpp__MiddleColor__pf = std::move(bpp__MiddleColor__pf);
	Parms.bpp__HorizonColor__pf = std::move(bpp__HorizonColor__pf);
	Parms.bpp__OverallColor__pf = std::move(bpp__OverallColor__pf);
	Parms.bpp__HorizonFalloff__pf = bpp__HorizonFalloff__pf;
	Parms.bpp__MiddleFalloff__pf = bpp__MiddleFalloff__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetSkyWeather
// (Native, Public, BlueprintCallable)
// Parameters:
// EJackWorldWeather                       bpp__NewWeather__pf                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bpp__ForceSet__pf                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetSkyWeather(EJackWorldWeather bpp__NewWeather__pf, bool bpp__ForceSet__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetSkyWeather");

	Params::BP_SkyBase_C_SetSkyWeather Parms{};

	Parms.bpp__NewWeather__pf = bpp__NewWeather__pf;
	Parms.bpp__ForceSet__pf = bpp__ForceSet__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetStarParam
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   bpp__StarBrightness__pf                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__StarRepeatscale__pf                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetStarParam(float bpp__StarBrightness__pf, float bpp__StarRepeatscale__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetStarParam");

	Params::BP_SkyBase_C_SetStarParam Parms{};

	Parms.bpp__StarBrightness__pf = bpp__StarBrightness__pf;
	Parms.bpp__StarRepeatscale__pf = bpp__StarRepeatscale__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetSunLightParam
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         bpp__SunLightRotation__pf                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__LightDirection__pf                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__SkygradDirection__pf                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetSunLightParam(const struct FRotator& bpp__SunLightRotation__pf, const struct FLinearColor& bpp__LightDirection__pf, const struct FLinearColor& bpp__SkygradDirection__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetSunLightParam");

	Params::BP_SkyBase_C_SetSunLightParam Parms{};

	Parms.bpp__SunLightRotation__pf = std::move(bpp__SunLightRotation__pf);
	Parms.bpp__LightDirection__pf = std::move(bpp__LightDirection__pf);
	Parms.bpp__SkygradDirection__pf = std::move(bpp__SkygradDirection__pf);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetSunParam
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     bpp__SunLightColor__pf                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__SunLightIntensity__pf                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     bpp__SunColor__pf                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__SunBrightness__pf                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   bpp__SunRadius__pf                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetSunParam(const struct FLinearColor& bpp__SunLightColor__pf, float bpp__SunLightIntensity__pf, const struct FLinearColor& bpp__SunColor__pf, float bpp__SunBrightness__pf, float bpp__SunRadius__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetSunParam");

	Params::BP_SkyBase_C_SetSunParam Parms{};

	Parms.bpp__SunLightColor__pf = std::move(bpp__SunLightColor__pf);
	Parms.bpp__SunLightIntensity__pf = bpp__SunLightIntensity__pf;
	Parms.bpp__SunColor__pf = std::move(bpp__SunColor__pf);
	Parms.bpp__SunBrightness__pf = bpp__SunBrightness__pf;
	Parms.bpp__SunRadius__pf = bpp__SunRadius__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetSunRadiusRate
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SetSunRadiusRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetSunRadiusRate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetTempParameter
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SetTempParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetTempParameter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetThunder
// (Native, Public, BlueprintCallable)
// Parameters:
// EJackWorldWeather                       bpp__NewWeather__pf                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::SetThunder(EJackWorldWeather bpp__NewWeather__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetThunder");

	Params::BP_SkyBase_C_SetThunder Parms{};

	Parms.bpp__NewWeather__pf = bpp__NewWeather__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SetWeatherChangeTimeBase
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SetWeatherChangeTimeBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SetWeatherChangeTimeBase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.SkyPartsScenarioVisible
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::SkyPartsScenarioVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "SkyPartsScenarioVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.StartCutScene
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::StartCutScene(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "StartCutScene");

	Params::BP_SkyBase_C_StartCutScene Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.StartCutsceneBeforeLoad
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::StartCutsceneBeforeLoad(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "StartCutsceneBeforeLoad");

	Params::BP_SkyBase_C_StartCutsceneBeforeLoad Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.StartCutSceneCharacterSettingAfter
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::StartCutSceneCharacterSettingAfter(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "StartCutSceneCharacterSettingAfter");

	Params::BP_SkyBase_C_StartCutSceneCharacterSettingAfter Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.StartCutSceneFadeOutAfter
// (Final, Native, Event, Public, BlueprintCallable)
// Parameters:
// class FName                             bpp__CSID__pf                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_SkyBase_C::StartCutSceneFadeOutAfter(class FName bpp__CSID__pf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "StartCutSceneFadeOutAfter");

	Params::BP_SkyBase_C_StartCutSceneFadeOutAfter Parms{};

	Parms.bpp__CSID__pf = bpp__CSID__pf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.TimerEventWeatherChange
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::TimerEventWeatherChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "TimerEventWeatherChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.UpdateSky
// (Native, Public, BlueprintCallable)

void ABP_SkyBase_C::UpdateSky()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "UpdateSky");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_SkyBase.BP_SkyBase_C.UserConstructionScript
// (Final, Native, Event, Public, BlueprintCallable)

void ABP_SkyBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkyBase_C", "UserConstructionScript");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}


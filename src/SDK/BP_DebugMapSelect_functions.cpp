#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugMapSelect

#include "Basic.hpp"

#include "BP_DebugMapSelect_classes.hpp"
#include "BP_DebugMapSelect_parameters.hpp"


namespace SDK
{

// Function BP_DebugMapSelect.BP_DebugMapSelect_C.ExecuteUbergraph_BP_DebugMapSelect
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugMapSelect_C::ExecuteUbergraph_BP_DebugMapSelect(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "ExecuteUbergraph_BP_DebugMapSelect");

	Params::BP_DebugMapSelect_C_ExecuteUbergraph_BP_DebugMapSelect Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventRiremito
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventRiremito()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventRiremito");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventRura
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventRura()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventRura");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventClearPreload
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventClearPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventClearPreload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventMapJump
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventMapJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventMapJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventOpenLevel
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventOpenLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventOpenLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventPreload
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventPreload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventPreload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.EventSetRestartPoint
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::EventSetRestartPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "EventSetRestartPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.MakeMenuFromDebugMenu
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::MakeMenuFromDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "MakeMenuFromDebugMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.DebugMapSelectInitialize
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::DebugMapSelectInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "DebugMapSelectInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.ExecCommand
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UJackDebugMenuVariableCommand*>MapJump                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>OpenLevel                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>PreLoad                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>ClearPreload                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>SetRestartPoint                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>Rura                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UJackDebugMenuVariableCommand*>Riremito                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ABP_DebugMapSelect_C::ExecCommand(const TArray<class UJackDebugMenuVariableCommand*>& MapJump, const TArray<class UJackDebugMenuVariableCommand*>& OpenLevel, const TArray<class UJackDebugMenuVariableCommand*>& PreLoad, const TArray<class UJackDebugMenuVariableCommand*>& ClearPreload, const TArray<class UJackDebugMenuVariableCommand*>& SetRestartPoint, const TArray<class UJackDebugMenuVariableCommand*>& Rura, const TArray<class UJackDebugMenuVariableCommand*>& Riremito)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "ExecCommand");

	Params::BP_DebugMapSelect_C_ExecCommand Parms{};

	Parms.MapJump = std::move(MapJump);
	Parms.OpenLevel = std::move(OpenLevel);
	Parms.PreLoad = std::move(PreLoad);
	Parms.ClearPreload = std::move(ClearPreload);
	Parms.SetRestartPoint = std::move(SetRestartPoint);
	Parms.Rura = std::move(Rura);
	Parms.Riremito = std::move(Riremito);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.MakeMenu
// (BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::MakeMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "MakeMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DebugMapSelect_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.InitializeMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::InitializeMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "InitializeMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.AddArrayMapName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   InArray                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class FString>                   OutArray                                               (Parm, OutParm, ZeroConstructor)

void ABP_DebugMapSelect_C::AddArrayMapName(TArray<class FString>& InArray, TArray<class FString>* OutArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "AddArrayMapName");

	Params::BP_DebugMapSelect_C_AddArrayMapName Parms{};

	Parms.InArray = std::move(InArray);

	UObject::ProcessEvent(Func, &Parms);

	InArray = std::move(Parms.InArray);

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.AddDebugMenuMapStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UJackDebugMenuVariableMenu*       ParentMenu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UJackDebugMenuVariableCommand*>MapJump                                                (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>OpenLevel                                              (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>PreLoad                                                (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>ClearPreload                                           (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>SetRestartPoint                                        (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>Rura                                                   (Parm, OutParm, ZeroConstructor)
// TArray<class UJackDebugMenuVariableCommand*>Riremito                                               (Parm, OutParm, ZeroConstructor)

void ABP_DebugMapSelect_C::AddDebugMenuMapStart(TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu, TArray<class UJackDebugMenuVariableCommand*>* MapJump, TArray<class UJackDebugMenuVariableCommand*>* OpenLevel, TArray<class UJackDebugMenuVariableCommand*>* PreLoad, TArray<class UJackDebugMenuVariableCommand*>* ClearPreload, TArray<class UJackDebugMenuVariableCommand*>* SetRestartPoint, TArray<class UJackDebugMenuVariableCommand*>* Rura, TArray<class UJackDebugMenuVariableCommand*>* Riremito)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "AddDebugMenuMapStart");

	Params::BP_DebugMapSelect_C_AddDebugMenuMapStart Parms{};

	Parms.Menu = std::move(Menu);
	Parms.ParentMenu = ParentMenu;

	UObject::ProcessEvent(Func, &Parms);

	Menu = std::move(Parms.Menu);

	if (MapJump != nullptr)
		*MapJump = std::move(Parms.MapJump);

	if (OpenLevel != nullptr)
		*OpenLevel = std::move(Parms.OpenLevel);

	if (PreLoad != nullptr)
		*PreLoad = std::move(Parms.PreLoad);

	if (ClearPreload != nullptr)
		*ClearPreload = std::move(Parms.ClearPreload);

	if (SetRestartPoint != nullptr)
		*SetRestartPoint = std::move(Parms.SetRestartPoint);

	if (Rura != nullptr)
		*Rura = std::move(Parms.Rura);

	if (Riremito != nullptr)
		*Riremito = std::move(Parms.Riremito);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.AddDebugMenuOnlyOpenLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UJackDebugMenuVariableMenu*       ParentMenu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UJackDebugMenuVariableCommand*>OpenLevel                                              (Parm, OutParm, ZeroConstructor)

void ABP_DebugMapSelect_C::AddDebugMenuOnlyOpenLevel(TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu, TArray<class UJackDebugMenuVariableCommand*>* OpenLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "AddDebugMenuOnlyOpenLevel");

	Params::BP_DebugMapSelect_C_AddDebugMenuOnlyOpenLevel Parms{};

	Parms.Menu = std::move(Menu);
	Parms.ParentMenu = ParentMenu;

	UObject::ProcessEvent(Func, &Parms);

	Menu = std::move(Parms.Menu);

	if (OpenLevel != nullptr)
		*OpenLevel = std::move(Parms.OpenLevel);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.GetSelectedMapStartTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             MapStartTag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugMapSelect_C::GetSelectedMapStartTag(class FName* MapStartTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "GetSelectedMapStartTag");

	Params::BP_DebugMapSelect_C_GetSelectedMapStartTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapStartTag != nullptr)
		*MapStartTag = Parms.MapStartTag;
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.MakeMapJumpMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MenuName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FString>                   Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UJackDebugMenuVariableMenu*       ParentMenu                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugMapSelect_C::MakeMapJumpMenu(const class FString& MenuName, TArray<class FString>& Menu, class UJackDebugMenuVariableMenu* ParentMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "MakeMapJumpMenu");

	Params::BP_DebugMapSelect_C_MakeMapJumpMenu Parms{};

	Parms.MenuName = std::move(MenuName);
	Parms.Menu = std::move(Menu);
	Parms.ParentMenu = ParentMenu;

	UObject::ProcessEvent(Func, &Parms);

	Menu = std::move(Parms.Menu);
}


// Function BP_DebugMapSelect.BP_DebugMapSelect_C.MakeMapStartMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DebugMapSelect_C::MakeMapStartMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugMapSelect_C", "MakeMapStartMap");

	UObject::ProcessEvent(Func, nullptr);
}

}


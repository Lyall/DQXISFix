#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DontGo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "JackGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// DynamicClass BP_DontGo.BP_DontGo_C
// 0x0508 (0x08A0 - 0x0398)
class ABP_DontGo_C final : public AActor
{
public:
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        EscapePoint;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Left;                                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                        Back;                                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          Blocking;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                          TriggerBox;                                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextRenderComponent*                   TextRender;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoxSize;                                           // 0x03D0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackScheduledNPC*                      TargetNPC;                                         // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnDistance;                                    // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TextID;                                            // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackLDT_GameFlagDataScenario>  DeactivateScenarioFlag;                            // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          DeactivateAndCheck;                                // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataScenario>  ActivateScenarioFlag;                              // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ActivateAndCheck;                                  // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          YesNoMessage;                                      // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   YesMessage;                                        // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   YesEvent;                                          // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          YesReturn;                                         // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NoMessage;                                         // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NoEvent;                                           // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NoReturn;                                          // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          YesNo;                                             // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_ItemTable                     ItemID;                                            // 0x0458(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ItemHaveEnable;                                    // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisableFromRideVehcle;                             // 0x0469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DisableFromNotRideVehcle;                          // 0x046A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CameraFocus;                                       // 0x046B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WaitLanding;                                       // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayTalkingAnimaion;                               // 0x046D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BeginOverlapLocation;                              // 0x0470(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EJackNPCTalkGazeMode                          SerifuTurnType;                                    // 0x047C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlockSize;                                         // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BlockingVolumeEnable;                              // 0x0484(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AJackScheduledNPC*>              TalkNpcs;                                          // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnRotation;                                    // 0x0498(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          DayEnable;                                         // 0x04A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NightEnable;                                       // 0x04A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DayNightProcVolumeDisable;                         // 0x04A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NowDontGo;                                         // 0x04A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallRemoteEvent;                                   // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RideVehicleCmnMessage;                             // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           ChangeCamera;                                      // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChangeCameraTime;                                  // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ChangeCameraWait;                                  // 0x04BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StopOnlyVehicleMonster;                            // 0x04BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnGroundLocation;                              // 0x04BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CasinoEntrance;                                    // 0x04BF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CasinoEnableStartHour;                             // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CasinoEnableEndHour;                               // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnedPlayer;                                    // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UsePlayGo;                                         // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4CA[0x2];                                      // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundLocationSweepDistance;                       // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TempDayNightDisable;                               // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackScheduledNPC*                      ChoiceTalkNpc;                                     // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          YesEventBeforeFadeOut;                             // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NoEventBeforeFadeOut;                              // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreVehicleExternCollision;                     // 0x04E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVehicleForceOverrideTargetLocationZ;              // 0x04E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x04E8(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsScenarioFlagCheckActivate_bEnable;      // 0x04F8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0500(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable;                                // 0x0510(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* PlayerActor, class AActor* ControlActor)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0518(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsScenarioFlagCheckActivate_bEnable2;     // 0x0528(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding; // 0x0529(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackTalkParameter                     K2Node_MakeStruct_JackTalkParameter;               // 0x0530(0x0058)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0588(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable2;                               // 0x0598(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding2; // 0x0599(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* PlayerActor, class AActor* ControlActor)> K2Node_CreateDelegate_OutputDelegate5;             // 0x05A0(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05B0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x05B8(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	class AJackVehicleMonster*                    K2Node_DynamicCast_AsJack_Vehicle_Monster;         // 0x05C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05D0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding3; // 0x05D1(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsReturnPlayer_IsReturn;                  // 0x05D2(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x05D3(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayableCharacter*                 K2Node_DynamicCast_AsJack_Playable_Character;      // 0x05D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x05E0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding4; // 0x05E1(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding5; // 0x05E2(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E3[0x5];                                      // 0x05E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array;                            // 0x05E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable3;                               // 0x05F8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x05F9(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable4;                               // 0x05FA(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding6; // 0x05FB(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding7; // 0x05FC(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable5;                               // 0x05FD(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5FE[0x2];                                      // 0x05FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0600(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0610(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0618(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x061C(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0620(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_PlayerActor2;                   // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_ControlActor2;                  // 0x06B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Select_Default;                             // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   K2Node_Select2_Default;                            // 0x06C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable;                              // 0x06C8(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6CD[0x3];                                      // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x06D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x06D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x06E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x06E8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CallFunc_GetPlayGoInstallRemainTime_ReturnValue2;  // 0x06EC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_Event_Night;                                // 0x06F0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable2;                             // 0x06F8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable3;                             // 0x0708(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_70D[0x3];                                      // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_PlayerActor;                    // 0x0710(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_CustomEvent_ControlActor;                   // 0x0718(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable4;                             // 0x0720(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0728(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0734(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0740(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x074C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0750(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0754(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackTalkParameter                     K2Node_MakeStruct_JackTalkParameter2;              // 0x0758(0x0058)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Temp_float_Variable;                               // 0x07B0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Temp_float_Variable2;                              // 0x07B4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsReturnPlayer_IsReturn2;                 // 0x07B8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcMoveLocationRotationFunc_Location;    // 0x07BC(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               CallFunc_CalcMoveLocationRotationFunc_Rotation;    // 0x07C8(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable6;                               // 0x07D4(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x07D8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_CalcPlayerGroundLocation_OutLocation;     // 0x07DC(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CallFunc_CalcPlayerGroundLocation_OutLocation2;    // 0x07E8(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x07F8(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array2;                           // 0x0880(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class AJackScheduledNPC*                      CallFunc_GetTalkNpc_TalkNpc;                       // 0x0890(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_Select4_Default;                            // 0x0898(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnUnpossessPlayerControlDelegate__DelegateSignature();
	void BndEvt__Box_K2Node_ComponentBoundEvent_84_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__TriggerBox_K2Node_ComponentBoundEvent_99_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void CalcMoveLocationRotationFunc(struct FVector* bpp__Location__pf, struct FRotator* bpp__Rotation__pf);
	void CalcReturnRotation(const struct FVector& bpp__InLocation__pf);
	void CallDontGoBeginInterface();
	void CustomEvent_0(class AActor* bpp__PlayerActor__pf, class AActor* bpp__ControlActor__pf);
	void CustomEvent_1();
	void CustomEvent_2(class AActor* bpp__PlayerActor__pf, class AActor* bpp__ControlActor__pf);
	void CustomEvent_3();
	void DayNightChangeCameraEnd();
	void DayNightChangeCameraStart();
	void ExecuteUbergraph_BP_DontGo_0(int32 bpp__EntryPoint__pf);
	void ExecuteUbergraph_BP_DontGo_3(int32 bpp__EntryPoint__pf);
	void GetTalkNpc(class AJackScheduledNPC** bpp__TalkNpc__pf);
	void IsReturnPlayer(bool* bpp__IsReturn__pf);
	void OnUnpossessPlayerControlDelegate_Event_0();
	void OnUnpossessPlayerControlDelegate_Event_1();
	void ReceiveBeginPlay();
	void SetBlockingEnable(bool bpp__Enable__pf);
	void SetTimeZoneProc(bool bpp__Night__pf);
	void Set_Enable(bool bpp__Enable__pf);
	void Set_Text_ID(class FName bpp__NewTextID__pf);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_DontGo_C">();
	}
	static class ABP_DontGo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DontGo_C>();
	}
};
static_assert(alignof(ABP_DontGo_C) == 0x000008, "Wrong alignment on ABP_DontGo_C");
static_assert(sizeof(ABP_DontGo_C) == 0x0008A0, "Wrong size on ABP_DontGo_C");
static_assert(offsetof(ABP_DontGo_C, EscapePoint) == 0x0003A0, "Member 'ABP_DontGo_C::EscapePoint' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Left) == 0x0003A8, "Member 'ABP_DontGo_C::Left' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Back) == 0x0003B0, "Member 'ABP_DontGo_C::Back' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Blocking) == 0x0003B8, "Member 'ABP_DontGo_C::Blocking' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TriggerBox) == 0x0003C0, "Member 'ABP_DontGo_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TextRender) == 0x0003C8, "Member 'ABP_DontGo_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, BoxSize) == 0x0003D0, "Member 'ABP_DontGo_C::BoxSize' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TargetNPC) == 0x0003E0, "Member 'ABP_DontGo_C::TargetNPC' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ReturnDistance) == 0x0003E8, "Member 'ABP_DontGo_C::ReturnDistance' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TextID) == 0x0003F0, "Member 'ABP_DontGo_C::TextID' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DeactivateScenarioFlag) == 0x0003F8, "Member 'ABP_DontGo_C::DeactivateScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DeactivateAndCheck) == 0x000408, "Member 'ABP_DontGo_C::DeactivateAndCheck' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ActivateScenarioFlag) == 0x000410, "Member 'ABP_DontGo_C::ActivateScenarioFlag' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ActivateAndCheck) == 0x000420, "Member 'ABP_DontGo_C::ActivateAndCheck' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesNoMessage) == 0x000421, "Member 'ABP_DontGo_C::YesNoMessage' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesMessage) == 0x000428, "Member 'ABP_DontGo_C::YesMessage' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesEvent) == 0x000430, "Member 'ABP_DontGo_C::YesEvent' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesReturn) == 0x000438, "Member 'ABP_DontGo_C::YesReturn' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NoMessage) == 0x000440, "Member 'ABP_DontGo_C::NoMessage' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NoEvent) == 0x000448, "Member 'ABP_DontGo_C::NoEvent' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NoReturn) == 0x000450, "Member 'ABP_DontGo_C::NoReturn' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesNo) == 0x000451, "Member 'ABP_DontGo_C::YesNo' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ItemID) == 0x000458, "Member 'ABP_DontGo_C::ItemID' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ItemHaveEnable) == 0x000468, "Member 'ABP_DontGo_C::ItemHaveEnable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DisableFromRideVehcle) == 0x000469, "Member 'ABP_DontGo_C::DisableFromRideVehcle' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DisableFromNotRideVehcle) == 0x00046A, "Member 'ABP_DontGo_C::DisableFromNotRideVehcle' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CameraFocus) == 0x00046B, "Member 'ABP_DontGo_C::CameraFocus' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, WaitLanding) == 0x00046C, "Member 'ABP_DontGo_C::WaitLanding' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, PlayTalkingAnimaion) == 0x00046D, "Member 'ABP_DontGo_C::PlayTalkingAnimaion' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, BeginOverlapLocation) == 0x000470, "Member 'ABP_DontGo_C::BeginOverlapLocation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, SerifuTurnType) == 0x00047C, "Member 'ABP_DontGo_C::SerifuTurnType' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, BlockSize) == 0x000480, "Member 'ABP_DontGo_C::BlockSize' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, BlockingVolumeEnable) == 0x000484, "Member 'ABP_DontGo_C::BlockingVolumeEnable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TalkNpcs) == 0x000488, "Member 'ABP_DontGo_C::TalkNpcs' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ReturnRotation) == 0x000498, "Member 'ABP_DontGo_C::ReturnRotation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DayEnable) == 0x0004A4, "Member 'ABP_DontGo_C::DayEnable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NightEnable) == 0x0004A5, "Member 'ABP_DontGo_C::NightEnable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, DayNightProcVolumeDisable) == 0x0004A6, "Member 'ABP_DontGo_C::DayNightProcVolumeDisable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NowDontGo) == 0x0004A7, "Member 'ABP_DontGo_C::NowDontGo' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallRemoteEvent) == 0x0004A8, "Member 'ABP_DontGo_C::CallRemoteEvent' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, RideVehicleCmnMessage) == 0x0004A9, "Member 'ABP_DontGo_C::RideVehicleCmnMessage' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ChangeCamera) == 0x0004B0, "Member 'ABP_DontGo_C::ChangeCamera' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ChangeCameraTime) == 0x0004B8, "Member 'ABP_DontGo_C::ChangeCameraTime' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ChangeCameraWait) == 0x0004BC, "Member 'ABP_DontGo_C::ChangeCameraWait' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, StopOnlyVehicleMonster) == 0x0004BD, "Member 'ABP_DontGo_C::StopOnlyVehicleMonster' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ReturnGroundLocation) == 0x0004BE, "Member 'ABP_DontGo_C::ReturnGroundLocation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CasinoEntrance) == 0x0004BF, "Member 'ABP_DontGo_C::CasinoEntrance' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CasinoEnableStartHour) == 0x0004C0, "Member 'ABP_DontGo_C::CasinoEnableStartHour' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CasinoEnableEndHour) == 0x0004C4, "Member 'ABP_DontGo_C::CasinoEnableEndHour' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ReturnedPlayer) == 0x0004C8, "Member 'ABP_DontGo_C::ReturnedPlayer' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, UsePlayGo) == 0x0004C9, "Member 'ABP_DontGo_C::UsePlayGo' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, GroundLocationSweepDistance) == 0x0004CC, "Member 'ABP_DontGo_C::GroundLocationSweepDistance' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, TempDayNightDisable) == 0x0004D0, "Member 'ABP_DontGo_C::TempDayNightDisable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, ChoiceTalkNpc) == 0x0004D8, "Member 'ABP_DontGo_C::ChoiceTalkNpc' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, YesEventBeforeFadeOut) == 0x0004E0, "Member 'ABP_DontGo_C::YesEventBeforeFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, NoEventBeforeFadeOut) == 0x0004E1, "Member 'ABP_DontGo_C::NoEventBeforeFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, bIgnoreVehicleExternCollision) == 0x0004E2, "Member 'ABP_DontGo_C::bIgnoreVehicleExternCollision' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, bVehicleForceOverrideTargetLocationZ) == 0x0004E3, "Member 'ABP_DontGo_C::bVehicleForceOverrideTargetLocationZ' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate) == 0x0004E8, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_IsScenarioFlagCheckActivate_bEnable) == 0x0004F8, "Member 'ABP_DontGo_C::CallFunc_IsScenarioFlagCheckActivate_bEnable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate2) == 0x000500, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable) == 0x000510, "Member 'ABP_DontGo_C::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate3) == 0x000518, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_IsScenarioFlagCheckActivate_bEnable2) == 0x000528, "Member 'ABP_DontGo_C::CallFunc_IsScenarioFlagCheckActivate_bEnable2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding) == 0x000529, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_MakeStruct_JackTalkParameter) == 0x000530, "Member 'ABP_DontGo_C::K2Node_MakeStruct_JackTalkParameter' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate4) == 0x000588, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable2) == 0x000598, "Member 'ABP_DontGo_C::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding2) == 0x000599, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate5) == 0x0005A0, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_SwitchEnum_CmpSuccess) == 0x0005B0, "Member 'ABP_DontGo_C::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CreateDelegate_OutputDelegate6) == 0x0005B8, "Member 'ABP_DontGo_C::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_DynamicCast_AsJack_Vehicle_Monster) == 0x0005C8, "Member 'ABP_DontGo_C::K2Node_DynamicCast_AsJack_Vehicle_Monster' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_DynamicCast_bSuccess) == 0x0005D0, "Member 'ABP_DontGo_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding3) == 0x0005D1, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding3' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_IsReturnPlayer_IsReturn) == 0x0005D2, "Member 'ABP_DontGo_C::CallFunc_IsReturnPlayer_IsReturn' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_SwitchEnum2_CmpSuccess) == 0x0005D3, "Member 'ABP_DontGo_C::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_DynamicCast_AsJack_Playable_Character) == 0x0005D8, "Member 'ABP_DontGo_C::K2Node_DynamicCast_AsJack_Playable_Character' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_DynamicCast_bSuccess2) == 0x0005E0, "Member 'ABP_DontGo_C::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding4) == 0x0005E1, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding4' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding5) == 0x0005E2, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding5' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_MakeArray_Array) == 0x0005E8, "Member 'ABP_DontGo_C::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable3) == 0x0005F8, "Member 'ABP_DontGo_C::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_SwitchEnum3_CmpSuccess) == 0x0005F9, "Member 'ABP_DontGo_C::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable4) == 0x0005FA, "Member 'ABP_DontGo_C::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding6) == 0x0005FB, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding6' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding7) == 0x0005FC, "Member 'ABP_DontGo_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding7' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable5) == 0x0005FD, "Member 'ABP_DontGo_C::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000600, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x000608, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x000610, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000618, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x00061C, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_SweepResult) == 0x000620, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CustomEvent_PlayerActor2) == 0x0006A8, "Member 'ABP_DontGo_C::K2Node_CustomEvent_PlayerActor2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CustomEvent_ControlActor2) == 0x0006B0, "Member 'ABP_DontGo_C::K2Node_CustomEvent_ControlActor2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_Select_Default) == 0x0006B8, "Member 'ABP_DontGo_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_Select2_Default) == 0x0006C0, "Member 'ABP_DontGo_C::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_struct_Variable) == 0x0006C8, "Member 'ABP_DontGo_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0006D0, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherActor) == 0x0006D8, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherComp) == 0x0006E0, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0006E8, "Member 'ABP_DontGo_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_GetPlayGoInstallRemainTime_ReturnValue2) == 0x0006EC, "Member 'ABP_DontGo_C::CallFunc_GetPlayGoInstallRemainTime_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_Event_Night) == 0x0006F0, "Member 'ABP_DontGo_C::K2Node_Event_Night' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_struct_Variable2) == 0x0006F8, "Member 'ABP_DontGo_C::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_struct_Variable3) == 0x000708, "Member 'ABP_DontGo_C::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CustomEvent_PlayerActor) == 0x000710, "Member 'ABP_DontGo_C::K2Node_CustomEvent_PlayerActor' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_CustomEvent_ControlActor) == 0x000718, "Member 'ABP_DontGo_C::K2Node_CustomEvent_ControlActor' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_struct_Variable4) == 0x000720, "Member 'ABP_DontGo_C::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakTransform_Location) == 0x000728, "Member 'ABP_DontGo_C::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakTransform_Rotation) == 0x000734, "Member 'ABP_DontGo_C::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakTransform_Scale) == 0x000740, "Member 'ABP_DontGo_C::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakRotator_Roll) == 0x00074C, "Member 'ABP_DontGo_C::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakRotator_Pitch) == 0x000750, "Member 'ABP_DontGo_C::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_BreakRotator_Yaw) == 0x000754, "Member 'ABP_DontGo_C::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_MakeStruct_JackTalkParameter2) == 0x000758, "Member 'ABP_DontGo_C::K2Node_MakeStruct_JackTalkParameter2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_float_Variable) == 0x0007B0, "Member 'ABP_DontGo_C::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_float_Variable2) == 0x0007B4, "Member 'ABP_DontGo_C::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_IsReturnPlayer_IsReturn2) == 0x0007B8, "Member 'ABP_DontGo_C::CallFunc_IsReturnPlayer_IsReturn2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_CalcMoveLocationRotationFunc_Location) == 0x0007BC, "Member 'ABP_DontGo_C::CallFunc_CalcMoveLocationRotationFunc_Location' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_CalcMoveLocationRotationFunc_Rotation) == 0x0007C8, "Member 'ABP_DontGo_C::CallFunc_CalcMoveLocationRotationFunc_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, Temp_bool_Variable6) == 0x0007D4, "Member 'ABP_DontGo_C::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_Select3_Default) == 0x0007D8, "Member 'ABP_DontGo_C::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_CalcPlayerGroundLocation_OutLocation) == 0x0007DC, "Member 'ABP_DontGo_C::CallFunc_CalcPlayerGroundLocation_OutLocation' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_CalcPlayerGroundLocation_OutLocation2) == 0x0007E8, "Member 'ABP_DontGo_C::CallFunc_CalcPlayerGroundLocation_OutLocation2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0007F8, "Member 'ABP_DontGo_C::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_MakeArray_Array2) == 0x000880, "Member 'ABP_DontGo_C::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, CallFunc_GetTalkNpc_TalkNpc) == 0x000890, "Member 'ABP_DontGo_C::CallFunc_GetTalkNpc_TalkNpc' has a wrong offset!");
static_assert(offsetof(ABP_DontGo_C, K2Node_Select4_Default) == 0x000898, "Member 'ABP_DontGo_C::K2Node_Select4_Default' has a wrong offset!");

}


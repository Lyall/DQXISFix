#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Quest

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "ENUM_LoadScreenType_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestComplete
// 0x01D8 (0x01D8 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestComplete final
{
public:
	struct FJackLDT_QuestTable                    Quest;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RetID;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMartinaCoordinate_Result;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableQuest                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x00D0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item4;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item5;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item6;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipment_Result;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue2;             // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item7;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item8;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item9;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item10;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item11;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array2;                           // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CheckParameter_Result;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCoordinate_Result;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEquipment_Result2;                   // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item12;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item13;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item14;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item15;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array3;                           // 0x01B8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CheckQuestFlagCore_Ret;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckItem_Result;                         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CheckItem_ItemID;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestComplete) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestComplete");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestComplete) == 0x0001D8, "Wrong size on BP_FLIB_Quest_C_CheckQuestComplete");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, Quest) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::Quest' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, Completed) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::Completed' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, RetID) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::RetID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckMartinaCoordinate_Result) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckMartinaCoordinate_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_GetGameFlagBool_ReturnValue) == 0x000029, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, K2Node_SwitchName_CmpSuccess) == 0x00002A, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item2) == 0x000110, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item3) == 0x000118, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item4) == 0x000120, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item5) == 0x000128, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item6) == 0x000140, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckEquipment_Result) == 0x000148, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckEquipment_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_GetGameFlagBool_ReturnValue2) == 0x000149, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_GetGameFlagBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_NotEqual_NameName_ReturnValue) == 0x00014A, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item7) == 0x000150, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item8) == 0x000158, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item9) == 0x000160, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item10) == 0x000168, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item11) == 0x000170, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, K2Node_MakeArray_Array2) == 0x000178, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckParameter_Result) == 0x000188, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckParameter_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckCoordinate_Result) == 0x000189, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckCoordinate_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckEquipment_Result2) == 0x00018A, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckEquipment_Result2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item12) == 0x000190, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item13) == 0x000198, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item13' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item14) == 0x0001A0, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item14' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_Array_Get_Item15) == 0x0001A8, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_Array_Get_Item15' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, K2Node_SwitchEnum_CmpSuccess) == 0x0001B0, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, K2Node_MakeArray_Array3) == 0x0001B8, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckQuestFlagCore_Ret) == 0x0001C8, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckQuestFlagCore_Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckItem_Result) == 0x0001C9, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckItem_Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestComplete, CallFunc_CheckItem_ItemID) == 0x0001D0, "Member 'BP_FLIB_Quest_C_CheckQuestComplete::CallFunc_CheckItem_ItemID' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckEquipment
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FLIB_Quest_C_CheckEquipment final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ItemIds;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackGameCharacterEquippedItem> TmpJackGameCharacterEquippedItem;                  // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          LocalResult;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                CallFunc_CalcCharacterNameToID_ID;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackGameCharacterEquippedItem> CallFunc_GetEquippedItems_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackGameCharacterEquippedItem         CallFunc_Array_Get_Item2;                          // 0x0088(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckEquipment) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckEquipment");
static_assert(sizeof(BP_FLIB_Quest_C_CheckEquipment) == 0x0000A0, "Wrong size on BP_FLIB_Quest_C_CheckEquipment");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CharacterID) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckEquipment::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, ItemIds) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckEquipment::ItemIds' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, __WorldContext) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckEquipment::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Result) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckEquipment::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, TmpJackGameCharacterEquippedItem) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckEquipment::TmpJackGameCharacterEquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, LocalResult) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckEquipment::LocalResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_CalcCharacterNameToID_ID) == 0x000039, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_CalcCharacterNameToID_ID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_GetGameCharacter_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckEquipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_GetEquippedItems_ReturnValue) == 0x000050, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_GetEquippedItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Temp_bool_True_if_break_was_hit_Variable) == 0x000064, "Member 'BP_FLIB_Quest_C_CheckEquipment::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_FLIB_Quest_C_CheckEquipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Temp_int_Loop_Counter_Variable2) == 0x000070, "Member 'BP_FLIB_Quest_C_CheckEquipment::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Add_IntInt_ReturnValue2) == 0x000078, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, Temp_int_Array_Index_Variable2) == 0x00007C, "Member 'BP_FLIB_Quest_C_CheckEquipment::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Array_Get_Item2) == 0x000088, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Array_Length_ReturnValue2) == 0x000098, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_Less_IntInt_ReturnValue2) == 0x00009C, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00009D, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipment, CallFunc_BooleanAND_ReturnValue) == 0x00009E, "Member 'BP_FLIB_Quest_C_CheckEquipment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckParameter
// 0x00B0 (0x00B0 - 0x0000)
struct BP_FLIB_Quest_C_CheckParameter final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParamID;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Value;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                CallFunc_CalcCharacterNameToID_ID;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTokugiPoint_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackGameCharacterParameters           CallFunc_GetEquippedParameters_ReturnValue;        // 0x0048(0x004C)(NoDestructor)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue3;        // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue4;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue5;        // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue6;        // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue7;        // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue8;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue4;            // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue5;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue6;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue7;            // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue8;            // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue9;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue10;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue11;           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue12;           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckParameter) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckParameter");
static_assert(sizeof(BP_FLIB_Quest_C_CheckParameter) == 0x0000B0, "Wrong size on BP_FLIB_Quest_C_CheckParameter");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CharacterID) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckParameter::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, ParamID) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckParameter::ParamID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, Value) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, __WorldContext) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, Result) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckParameter::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_CalcCharacterNameToID_ID) == 0x000021, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_CalcCharacterNameToID_ID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_GetGameCharacter_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_GetTokugiPoint_ReturnValue) == 0x000044, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_GetTokugiPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_GetEquippedParameters_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_GetEquippedParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_Conv_StringToInt_ReturnValue) == 0x000094, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000099, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x00009A, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue3) == 0x00009B, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue4) == 0x00009C, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue5) == 0x00009D, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue6) == 0x00009E, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue7) == 0x00009F, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_FloatFloat_ReturnValue8) == 0x0000A0, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x0000A1, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x0000A2, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue4) == 0x0000A3, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue5) == 0x0000A4, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue6) == 0x0000A5, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue7) == 0x0000A6, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue8) == 0x0000A7, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue9) == 0x0000A8, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue10) == 0x0000A9, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue11) == 0x0000AA, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, CallFunc_LessEqual_IntInt_ReturnValue12) == 0x0000AB, "Member 'BP_FLIB_Quest_C_CheckParameter::CallFunc_LessEqual_IntInt_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckParameter, K2Node_SwitchName_CmpSuccess) == 0x0000AC, "Member 'BP_FLIB_Quest_C_CheckParameter::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.SetQuestFlag
// 0x01D8 (0x01D8 - 0x0000)
struct BP_FLIB_Quest_C_SetQuestFlag final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              Flag;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    QuestData;                                         // 0x0018(0x00D0)(Parm, OutParm)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQuestIDToQuestFlag_Success;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetQuestIDToQuestFlag_QuestFlag;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetQuestIDToQuestFlag_QuestData;          // 0x0100(0x00D0)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_SetQuestFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_SetQuestFlag");
static_assert(sizeof(BP_FLIB_Quest_C_SetQuestFlag) == 0x0001D8, "Wrong size on BP_FLIB_Quest_C_SetQuestFlag");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_SetQuestFlag::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, Flag) == 0x000008, "Member 'BP_FLIB_Quest_C_SetQuestFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_SetQuestFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, QuestData) == 0x000018, "Member 'BP_FLIB_Quest_C_SetQuestFlag::QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_GetSaveData_ReturnValue) == 0x0000E8, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_GetQuestIDToQuestFlag_Success) == 0x0000F0, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_GetQuestIDToQuestFlag_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_GetQuestIDToQuestFlag_QuestFlag) == 0x0000F8, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_GetQuestIDToQuestFlag_QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_GetQuestIDToQuestFlag_QuestData) == 0x000100, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_GetQuestIDToQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D0, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlag, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001D4, "Member 'BP_FLIB_Quest_C_SetQuestFlag::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestFlag
// 0x0100 (0x0100 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestFlag final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              Flag;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetQuestIDToQuestFlag_Success;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetQuestIDToQuestFlag_QuestFlag;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetQuestIDToQuestFlag_QuestData;          // 0x0028(0x00D0)()
	bool                                          CallFunc_CheckQuestFlagCore_Ret;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestFlag");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestFlag) == 0x000100, "Wrong size on BP_FLIB_Quest_C_CheckQuestFlag");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, Flag) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, Ret) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, CallFunc_GetQuestIDToQuestFlag_Success) == 0x000019, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::CallFunc_GetQuestIDToQuestFlag_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, CallFunc_GetQuestIDToQuestFlag_QuestFlag) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::CallFunc_GetQuestIDToQuestFlag_QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, CallFunc_GetQuestIDToQuestFlag_QuestData) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::CallFunc_GetQuestIDToQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlag, CallFunc_CheckQuestFlagCore_Ret) == 0x0000F8, "Member 'BP_FLIB_Quest_C_CheckQuestFlag::CallFunc_CheckQuestFlagCore_Ret' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestFlagCore
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestFlagCore final
{
public:
	class FName                                   QuestFlag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              Flag;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackProgression                              CallFunc_GetQuestFlag_Flag;                        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestFlagCore) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestFlagCore");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestFlagCore) == 0x000020, "Wrong size on BP_FLIB_Quest_C_CheckQuestFlagCore");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, QuestFlag) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, Flag) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, Ret) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, CallFunc_GetQuestFlag_Flag) == 0x000019, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::CallFunc_GetQuestFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagCore, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_FLIB_Quest_C_CheckQuestFlagCore::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.GetQuestFlag
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_Quest_C_GetQuestFlag final
{
public:
	class FName                                   QuestFlag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              Flag;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_GetQuestFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_GetQuestFlag");
static_assert(sizeof(BP_FLIB_Quest_C_GetQuestFlag) == 0x000020, "Wrong size on BP_FLIB_Quest_C_GetQuestFlag");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, QuestFlag) == 0x000000, "Member 'BP_FLIB_Quest_C_GetQuestFlag::QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_GetQuestFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, Flag) == 0x000010, "Member 'BP_FLIB_Quest_C_GetQuestFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, CallFunc_GetGameFlagInt_ReturnValue) == 0x000014, "Member 'BP_FLIB_Quest_C_GetQuestFlag::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'BP_FLIB_Quest_C_GetQuestFlag::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestFlag, CallFunc_GetValidValue_ReturnValue) == 0x000019, "Member 'BP_FLIB_Quest_C_GetQuestFlag::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.SetQuestFlagToComplete
// 0x0180 (0x0180 - 0x0000)
struct BP_FLIB_Quest_C_SetQuestFlagToComplete final
{
public:
	class FName                                   SetQuestID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TempTextID;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_SetQuestFlag_QuestData;                   // 0x0020(0x00D0)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FJackMessageArgumentData               K2Node_MakeStruct_JackMessageArgumentData;         // 0x0128(0x0048)()
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_FLIB_Quest_C_SetQuestFlagToComplete) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_SetQuestFlagToComplete");
static_assert(sizeof(BP_FLIB_Quest_C_SetQuestFlagToComplete) == 0x000180, "Wrong size on BP_FLIB_Quest_C_SetQuestFlagToComplete");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, SetQuestID) == 0x000000, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::SetQuestID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, TempTextID) == 0x000010, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::TempTextID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, CallFunc_SetQuestFlag_QuestData) == 0x000020, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::CallFunc_SetQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F0, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, CallFunc_GetText_ReturnValue) == 0x000108, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, K2Node_MakeStruct_JackMessageArgumentData) == 0x000128, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::K2Node_MakeStruct_JackMessageArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetQuestFlagToComplete, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_FLIB_Quest_C_SetQuestFlagToComplete::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestFlagOver
// 0x0100 (0x0100 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestFlagOver final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              Flag;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetQuestIDToQuestFlag_Success;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetQuestIDToQuestFlag_QuestFlag;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetQuestIDToQuestFlag_QuestData;          // 0x0028(0x00D0)()
	EJackProgression                              CallFunc_GetQuestFlag_Flag;                        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestFlagOver) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestFlagOver");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestFlagOver) == 0x000100, "Wrong size on BP_FLIB_Quest_C_CheckQuestFlagOver");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, Flag) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, Ret) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, CallFunc_GetQuestIDToQuestFlag_Success) == 0x000019, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::CallFunc_GetQuestIDToQuestFlag_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, CallFunc_GetQuestIDToQuestFlag_QuestFlag) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::CallFunc_GetQuestIDToQuestFlag_QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, CallFunc_GetQuestIDToQuestFlag_QuestData) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::CallFunc_GetQuestIDToQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, CallFunc_GetQuestFlag_Flag) == 0x0000F8, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::CallFunc_GetQuestFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagOver, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x0000F9, "Member 'BP_FLIB_Quest_C_CheckQuestFlagOver::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CalcCharacterNameToID
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_Quest_C_CalcCharacterNameToID final
{
public:
	class FName                                   CharacterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                ID;                                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                RetID;                                             // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CalcCharacterNameToID) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CalcCharacterNameToID");
static_assert(sizeof(BP_FLIB_Quest_C_CalcCharacterNameToID) == 0x000018, "Wrong size on BP_FLIB_Quest_C_CalcCharacterNameToID");
static_assert(offsetof(BP_FLIB_Quest_C_CalcCharacterNameToID, CharacterName) == 0x000000, "Member 'BP_FLIB_Quest_C_CalcCharacterNameToID::CharacterName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CalcCharacterNameToID, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_CalcCharacterNameToID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CalcCharacterNameToID, ID) == 0x000010, "Member 'BP_FLIB_Quest_C_CalcCharacterNameToID::ID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CalcCharacterNameToID, RetID) == 0x000011, "Member 'BP_FLIB_Quest_C_CalcCharacterNameToID::RetID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CalcCharacterNameToID, K2Node_SwitchName_CmpSuccess) == 0x000012, "Member 'BP_FLIB_Quest_C_CalcCharacterNameToID::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.GetQuestIDToQuestFlag
// 0x01C8 (0x01C8 - 0x0000)
struct BP_FLIB_Quest_C_GetQuestIDToQuestFlag final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestFlag;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    QuestData;                                         // 0x0020(0x00D0)(Parm, OutParm)
	struct FJackDataTableQuest                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x00D0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_GetQuestIDToQuestFlag");
static_assert(sizeof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag) == 0x0001C8, "Wrong size on BP_FLIB_Quest_C_GetQuestIDToQuestFlag");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, Success) == 0x000010, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, QuestFlag) == 0x000018, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, QuestData) == 0x000020, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetQuestIDToQuestFlag, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C0, "Member 'BP_FLIB_Quest_C_GetQuestIDToQuestFlag::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckCoordinate
// 0x0078 (0x0078 - 0x0000)
struct BP_FLIB_Quest_C_CheckCoordinate final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CoordinateIDs;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NowCoordinate;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalResult;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackCharacter                                CallFunc_CalcCharacterNameToID_ID;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCoordinateID_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckCoordinate) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckCoordinate");
static_assert(sizeof(BP_FLIB_Quest_C_CheckCoordinate) == 0x000078, "Wrong size on BP_FLIB_Quest_C_CheckCoordinate");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CharacterID) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CoordinateIDs) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CoordinateIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, __WorldContext) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckCoordinate::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, Result) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckCoordinate::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, NowCoordinate) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckCoordinate::NowCoordinate' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, LocalResult) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckCoordinate::LocalResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_CalcCharacterNameToID_ID) == 0x000031, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_CalcCharacterNameToID_ID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_GetGameCharacter_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckCoordinate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_GetCoordinateID_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_GetCoordinateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_FLIB_Quest_C_CheckCoordinate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_FLIB_Quest_C_CheckCoordinate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_NotEqual_NameName_ReturnValue) == 0x000071, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000072, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckCoordinate, CallFunc_BooleanAND_ReturnValue2) == 0x000073, "Member 'BP_FLIB_Quest_C_CheckCoordinate::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.AddProgressBattleQuestID
// 0x00B8 (0x00B8 - 0x0000)
struct BP_FLIB_Quest_C_AddProgressBattleQuestID final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TempSetVal;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TempQuestID;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_AddProgressBattleQuestID) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_AddProgressBattleQuestID");
static_assert(sizeof(BP_FLIB_Quest_C_AddProgressBattleQuestID) == 0x0000B8, "Wrong size on BP_FLIB_Quest_C_AddProgressBattleQuestID");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, TempSetVal) == 0x000010, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::TempSetVal' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, TempQuestID) == 0x000020, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::TempQuestID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_GetGameFlagString_ReturnValue) == 0x000030, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000050, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Concat_StrStr_ReturnValue2) == 0x000068, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Split_LeftS) == 0x000078, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Split_RightS) == 0x000088, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Split_ReturnValue) == 0x000098, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Concat_StrStr_ReturnValue3) == 0x0000A0, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AddProgressBattleQuestID, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_Quest_C_AddProgressBattleQuestID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.ClearProgressBattleQuestID
// 0x0078 (0x0078 - 0x0000)
struct BP_FLIB_Quest_C_ClearProgressBattleQuestID final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Find;                                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TempSetVal;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TempQuestID;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_ClearProgressBattleQuestID) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_ClearProgressBattleQuestID");
static_assert(sizeof(BP_FLIB_Quest_C_ClearProgressBattleQuestID) == 0x000078, "Wrong size on BP_FLIB_Quest_C_ClearProgressBattleQuestID");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, Find) == 0x000010, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::Find' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, TempSetVal) == 0x000018, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::TempSetVal' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, TempQuestID) == 0x000028, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::TempQuestID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, CallFunc_GetGameFlagString_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ClearProgressBattleQuestID, CallFunc_Replace_ReturnValue) == 0x000068, "Member 'BP_FLIB_Quest_C_ClearProgressBattleQuestID::CallFunc_Replace_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckProgressBattleQuest
// 0x0248 (0x0248 - 0x0000)
struct BP_FLIB_Quest_C_CheckProgressBattleQuest final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         QuestName;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FName>                           GetItemId;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FName>                           QuestId;                                           // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FString>                         TmpString;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           TempQuestID;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           TempItemID;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FString>                         TempQuestName;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackDataTableQuest                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x00D0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckUsedRenkei_ReturnValue;              // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item3;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item4;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProgressBattleQuestDropItem_Ret;     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item5;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item6;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item7;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckToubatuMonster_Ret;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckToubatuMonster_Ret2;                 // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item8;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckProgressBattleQuest) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckProgressBattleQuest");
static_assert(sizeof(BP_FLIB_Quest_C_CheckProgressBattleQuest) == 0x000248, "Wrong size on BP_FLIB_Quest_C_CheckProgressBattleQuest");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, QuestName) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::QuestName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, GetItemId) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::GetItemId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, QuestId) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, TmpString) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::TmpString' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, TempQuestID) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::TempQuestID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, TempItemID) == 0x000058, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::TempItemID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, TempQuestName) == 0x000068, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::TempQuestName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetBattleManager_ReturnValue) == 0x000080, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetSaveData_ReturnValue) == 0x000088, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetGameFlagString_ReturnValue) == 0x000090, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetActiveMapID_ReturnValue) == 0x0000A0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000A8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_ParseIntoArray_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C4, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Not_PreBool_ReturnValue) == 0x0000C5, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Conv_StringToName_ReturnValue) == 0x0000E8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Add_ReturnValue) == 0x0000F4, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001D0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_GetText_ReturnValue) == 0x0001D8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item2) == 0x0001E8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Add_ReturnValue2) == 0x0001F0, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_CheckUsedRenkei_ReturnValue) == 0x0001F4, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_CheckUsedRenkei_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item3) == 0x0001F8, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item4) == 0x000200, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_CheckProgressBattleQuestDropItem_Ret) == 0x000208, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_CheckProgressBattleQuestDropItem_Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item5) == 0x000210, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item6) == 0x000218, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item7) == 0x000220, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_CheckToubatuMonster_Ret) == 0x000228, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_CheckToubatuMonster_Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Add_ReturnValue3) == 0x00022C, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_BooleanAND_ReturnValue2) == 0x000230, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_CheckToubatuMonster_Ret2) == 0x000231, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_CheckToubatuMonster_Ret2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_Array_Get_Item8) == 0x000238, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, K2Node_SwitchEnum_CmpSuccess) == 0x000240, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000241, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x000242, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuest, CallFunc_BooleanOR_ReturnValue) == 0x000243, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.DebugQuestStart
// 0x00E8 (0x00E8 - 0x0000)
struct BP_FLIB_Quest_C_DebugQuestStart final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00D0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_DebugQuestStart) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_DebugQuestStart");
static_assert(sizeof(BP_FLIB_Quest_C_DebugQuestStart) == 0x0000E8, "Wrong size on BP_FLIB_Quest_C_DebugQuestStart");
static_assert(offsetof(BP_FLIB_Quest_C_DebugQuestStart, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_DebugQuestStart::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_DebugQuestStart, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_DebugQuestStart::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_DebugQuestStart, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_FLIB_Quest_C_DebugQuestStart::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_DebugQuestStart, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BP_FLIB_Quest_C_DebugQuestStart::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_DebugQuestStart, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000E4, "Member 'BP_FLIB_Quest_C_DebugQuestStart::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckToubatuMonster
// 0x0048 (0x0048 - 0x0000)
struct BP_FLIB_Quest_C_CheckToubatuMonster final
{
public:
	class FName                                   MonsterID_1;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MonsterID_2;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionID;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RenkeiID;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempRet;                                           // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue2;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckToubatuMonster_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckToubatuMonster_ReturnValue2;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckToubatuMonster) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckToubatuMonster");
static_assert(sizeof(BP_FLIB_Quest_C_CheckToubatuMonster) == 0x000048, "Wrong size on BP_FLIB_Quest_C_CheckToubatuMonster");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, MonsterID_1) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::MonsterID_1' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, MonsterID_2) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::MonsterID_2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, ActionID) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::ActionID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, RenkeiID) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::RenkeiID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, __WorldContext) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, Ret) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, TempRet) == 0x000029, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::TempRet' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, CallFunc_GetBattleManager_ReturnValue) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, CallFunc_GetBattleManager_ReturnValue2) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::CallFunc_GetBattleManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, CallFunc_CheckToubatuMonster_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::CallFunc_CheckToubatuMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckToubatuMonster, CallFunc_CheckToubatuMonster_ReturnValue2) == 0x000041, "Member 'BP_FLIB_Quest_C_CheckToubatuMonster::CallFunc_CheckToubatuMonster_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckProgressBattleQuestDropItem
// 0x0040 (0x0040 - 0x0000)
struct BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem final
{
public:
	class FName                                   Rate;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempRet;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem");
static_assert(sizeof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem) == 0x000040, "Wrong size on BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, Rate) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::Rate' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, Ret) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, TempRet) == 0x000011, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::TempRet' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_Conv_StringToInt_ReturnValue) == 0x00002C, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_Clamp_ReturnValue) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_RandomInteger_ReturnValue) == 0x000034, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckProgressBattleQuestDropItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestFlagInnerRange
// 0x0100 (0x0100 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestFlagInnerRange final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              LowFlag;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackProgression                              HighFlag;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetQuestIDToQuestFlag_Success;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetQuestIDToQuestFlag_QuestFlag;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetQuestIDToQuestFlag_QuestData;          // 0x0028(0x00D0)()
	EJackProgression                              CallFunc_GetQuestFlag_Flag;                        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestFlagInnerRange");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange) == 0x000100, "Wrong size on BP_FLIB_Quest_C_CheckQuestFlagInnerRange");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, LowFlag) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::LowFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, HighFlag) == 0x000009, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::HighFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, Ret) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_GetQuestIDToQuestFlag_Success) == 0x000019, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_GetQuestIDToQuestFlag_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_GetQuestIDToQuestFlag_QuestFlag) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_GetQuestIDToQuestFlag_QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_GetQuestIDToQuestFlag_QuestData) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_GetQuestIDToQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_GetQuestFlag_Flag) == 0x0000F8, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_GetQuestFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x0000F9, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x0000FA, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestFlagInnerRange, CallFunc_BooleanAND_ReturnValue) == 0x0000FB, "Member 'BP_FLIB_Quest_C_CheckQuestFlagInnerRange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.AllActorChangeQuestProgressFlag
// 0x0060 (0x0060 - 0x0000)
struct BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TempActors;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_ChangeFlag_C>   K2Node_DynamicCast_AsBP_IF_Change_Flag;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag");
static_assert(sizeof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag) == 0x000060, "Wrong size on BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, TempActors) == 0x000008, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::TempActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, K2Node_DynamicCast_AsBP_IF_Change_Flag) == 0x000048, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::K2Node_DynamicCast_AsBP_IF_Change_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_FLIB_Quest_C_AllActorChangeQuestProgressFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestSerifuAfterRemoteEvent
// 0x0088 (0x0088 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent final
{
public:
	class FName                                   ProcName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS2;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS2;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue2;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoteEventByLevel_Result;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent) == 0x000088, "Wrong size on BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, ProcName) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::ProcName' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_LeftS) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_RightS) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_LeftS2) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_LeftS2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_RightS2) == 0x000058, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_RightS2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Split_ReturnValue2) == 0x000068, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Split_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Conv_StringToName_ReturnValue) == 0x000070, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_Conv_StringToName_ReturnValue2) == 0x000078, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent, CallFunc_RemoteEventByLevel_Result) == 0x000080, "Member 'BP_FLIB_Quest_C_CheckQuestSerifuAfterRemoteEvent::CallFunc_RemoteEventByLevel_Result' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.IsValidQuest
// 0x00F8 (0x00F8 - 0x0000)
struct BP_FLIB_Quest_C_IsValidQuest final
{
public:
	class FName                                   QuestId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSScenario_SScenario;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetQuestIDToQuestFlag_Success;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetQuestIDToQuestFlag_QuestFlag;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableQuest                    CallFunc_GetQuestIDToQuestFlag_QuestData;          // 0x0020(0x00D0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackProgression                              CallFunc_GetQuestFlag_Flag;                        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_IsValidQuest) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_IsValidQuest");
static_assert(sizeof(BP_FLIB_Quest_C_IsValidQuest) == 0x0000F8, "Wrong size on BP_FLIB_Quest_C_IsValidQuest");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_IsValidQuest::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_IsValidQuest::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, Valid) == 0x000010, "Member 'BP_FLIB_Quest_C_IsValidQuest::Valid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_IsSScenario_SScenario) == 0x000011, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_IsSScenario_SScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GetQuestIDToQuestFlag_Success) == 0x000012, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GetQuestIDToQuestFlag_Success' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GetQuestIDToQuestFlag_QuestFlag) == 0x000018, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GetQuestIDToQuestFlag_QuestFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GetQuestIDToQuestFlag_QuestData) == 0x000020, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GetQuestIDToQuestFlag_QuestData' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GetGameFlagBool_ReturnValue) == 0x0000F1, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GetQuestFlag_Flag) == 0x0000F2, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GetQuestFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x0000F3, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidQuest, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'BP_FLIB_Quest_C_IsValidQuest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckEquipmentEx
// 0x0008 (0x0008 - 0x0000)
struct BP_FLIB_Quest_C_CheckEquipmentEx final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckEquipmentEx) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckEquipmentEx");
static_assert(sizeof(BP_FLIB_Quest_C_CheckEquipmentEx) == 0x000008, "Wrong size on BP_FLIB_Quest_C_CheckEquipmentEx");
static_assert(offsetof(BP_FLIB_Quest_C_CheckEquipmentEx, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckEquipmentEx::__WorldContext' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckMartinaCoordinate
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_Quest_C_CheckMartinaCoordinate final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_EquipmentCoordinate           K2Node_MakeStruct_JackLDT_EquipmentCoordinate;     // 0x0010(0x0010)(NoDestructor)
	struct FJackLDT_EquipmentCoordinate           K2Node_MakeStruct_JackLDT_EquipmentCoordinate2;    // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_IsOpenedDressupCoordinate_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenedDressupCoordinate_ReturnValue2;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckMartinaCoordinate) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckMartinaCoordinate");
static_assert(sizeof(BP_FLIB_Quest_C_CheckMartinaCoordinate) == 0x000038, "Wrong size on BP_FLIB_Quest_C_CheckMartinaCoordinate");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, Result) == 0x000008, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, K2Node_MakeStruct_JackLDT_EquipmentCoordinate) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::K2Node_MakeStruct_JackLDT_EquipmentCoordinate' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, K2Node_MakeStruct_JackLDT_EquipmentCoordinate2) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::K2Node_MakeStruct_JackLDT_EquipmentCoordinate2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, CallFunc_IsOpenedDressupCoordinate_ReturnValue) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::CallFunc_IsOpenedDressupCoordinate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, CallFunc_IsOpenedDressupCoordinate_ReturnValue2) == 0x000031, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::CallFunc_IsOpenedDressupCoordinate_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckMartinaCoordinate, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_FLIB_Quest_C_CheckMartinaCoordinate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.IsValidYottiAikotobaFlag
// 0x0098 (0x0098 - 0x0000)
struct BP_FLIB_Quest_C_IsValidYottiAikotobaFlag final
{
public:
	struct FJackLDT_QuestTable                    QuestId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Flag;                                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempRet;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempIndex;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TempFlag;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Flags_0;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           CallFunc_GetYottiAikotobaAllFlags_Flags;           // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_IsValidYottiAikotobaFlag");
static_assert(sizeof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag) == 0x000098, "Wrong size on BP_FLIB_Quest_C_IsValidYottiAikotobaFlag");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, Valid) == 0x000018, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::Valid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, Flag) == 0x000020, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, TempRet) == 0x000028, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::TempRet' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, TempIndex) == 0x00002C, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::TempIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, TempFlag) == 0x000030, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::TempFlag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, Flags_0) == 0x000038, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_GetYottiAikotobaAllFlags_Flags) == 0x000048, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_GetYottiAikotobaAllFlags_Flags' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_GetGameFlagBool_ReturnValue) == 0x000090, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsValidYottiAikotobaFlag, CallFunc_Array_Find_ReturnValue) == 0x000094, "Member 'BP_FLIB_Quest_C_IsValidYottiAikotobaFlag::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.GetYottiAikotobaAllFlags
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_Quest_C_GetYottiAikotobaAllFlags final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Flags_0;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_FLIB_Quest_C_GetYottiAikotobaAllFlags) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_GetYottiAikotobaAllFlags");
static_assert(sizeof(BP_FLIB_Quest_C_GetYottiAikotobaAllFlags) == 0x000028, "Wrong size on BP_FLIB_Quest_C_GetYottiAikotobaAllFlags");
static_assert(offsetof(BP_FLIB_Quest_C_GetYottiAikotobaAllFlags, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_GetYottiAikotobaAllFlags::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetYottiAikotobaAllFlags, Flags_0) == 0x000008, "Member 'BP_FLIB_Quest_C_GetYottiAikotobaAllFlags::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetYottiAikotobaAllFlags, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_FLIB_Quest_C_GetYottiAikotobaAllFlags::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.IsYottiAikotobaAllClear
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_Quest_C_IsYottiAikotobaAllClear final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllClear;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TempRet;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Flags_0;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           CallFunc_GetYottiAikotobaAllFlags_Flags;           // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_IsYottiAikotobaAllClear");
static_assert(sizeof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear) == 0x000050, "Wrong size on BP_FLIB_Quest_C_IsYottiAikotobaAllClear");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, AllClear) == 0x000008, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::AllClear' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, TempRet) == 0x000009, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::TempRet' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, Flags_0) == 0x000010, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_GetYottiAikotobaAllFlags_Flags) == 0x000020, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_GetYottiAikotobaAllFlags_Flags' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_GetGameFlagBool_ReturnValue) == 0x00004C, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_IsYottiAikotobaAllClear, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_FLIB_Quest_C_IsYottiAikotobaAllClear::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.SetAikotobaYottiSchedule
// 0x0060 (0x0060 - 0x0000)
struct BP_FLIB_Quest_C_SetAikotobaYottiSchedule final
{
public:
	class AJackScheduledNPC*                      Yotti;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Goal;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_COMP_Yotti_Aikotoba_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSScenario_SScenario;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAikotobaYottiFirstTextID_TextID;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAikotobaYottiFirstTextID_LookAt;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidYottiAikotobaFlag_Valid;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_IsValidYottiAikotobaFlag_Flag;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLookAtTargetInfoDefaultForPlayer_Distance; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLookAtTargetInfoDefaultForPlayer_Angle; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_SetAikotobaYottiSchedule");
static_assert(sizeof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule) == 0x000060, "Wrong size on BP_FLIB_Quest_C_SetAikotobaYottiSchedule");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, Yotti) == 0x000000, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::Yotti' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, Goal) == 0x000008, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::Goal' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_IsSScenario_SScenario) == 0x000020, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_IsSScenario_SScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetAikotobaYottiFirstTextID_TextID) == 0x000028, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetAikotobaYottiFirstTextID_TextID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetAikotobaYottiFirstTextID_LookAt) == 0x000030, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetAikotobaYottiFirstTextID_LookAt' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_IsValidYottiAikotobaFlag_Valid) == 0x000031, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_IsValidYottiAikotobaFlag_Valid' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_IsValidYottiAikotobaFlag_Flag) == 0x000038, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_IsValidYottiAikotobaFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetLookAtTargetInfoDefaultForPlayer_Distance) == 0x000044, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetLookAtTargetInfoDefaultForPlayer_Distance' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetLookAtTargetInfoDefaultForPlayer_Angle) == 0x000048, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetLookAtTargetInfoDefaultForPlayer_Angle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000050, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_SetAikotobaYottiSchedule, CallFunc_IsValid_ReturnValue2) == 0x000058, "Member 'BP_FLIB_Quest_C_SetAikotobaYottiSchedule::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CallQuestBegin
// 0x0080 (0x0080 - 0x0000)
struct BP_FLIB_Quest_C_CallQuestBegin final
{
public:
	struct FJackLDT_QuestTable                    QuestId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_QuestTable                    TempQuestID;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor)
	TArray<class AActor*>                         TempActors;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_Quest_C>        K2Node_DynamicCast_AsBP_IF_Quest;                  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QuestBegin_Result;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CallQuestBegin) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CallQuestBegin");
static_assert(sizeof(BP_FLIB_Quest_C_CallQuestBegin) == 0x000080, "Wrong size on BP_FLIB_Quest_C_CallQuestBegin");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_CallQuestBegin::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CallQuestBegin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, TempQuestID) == 0x000018, "Member 'BP_FLIB_Quest_C_CallQuestBegin::TempQuestID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, TempActors) == 0x000028, "Member 'BP_FLIB_Quest_C_CallQuestBegin::TempActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000038, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_FLIB_Quest_C_CallQuestBegin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_FLIB_Quest_C_CallQuestBegin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, K2Node_DynamicCast_AsBP_IF_Quest) == 0x000060, "Member 'BP_FLIB_Quest_C_CallQuestBegin::K2Node_DynamicCast_AsBP_IF_Quest' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_FLIB_Quest_C_CallQuestBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CallQuestBegin, CallFunc_QuestBegin_Result) == 0x000078, "Member 'BP_FLIB_Quest_C_CallQuestBegin::CallFunc_QuestBegin_Result' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.ReturnFromYottiMuraProcess
// 0x0088 (0x0088 - 0x0000)
struct BP_FLIB_Quest_C_ReturnFromYottiMuraProcess final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartReturnEvent;                                  // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LoadScreenType                           LoadScreenType;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromYottiMura;                                     // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visited;                                           // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NowMapID;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempEvent;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue2;             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackSaveData*                          CallFunc_GetSaveData_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue3;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetActiveMapID_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable2;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Rura                          K2Node_MakeStruct_JackLDT_Rura;                    // 0x0068(0x0010)(NoDestructor)
	bool                                          CallFunc_OpenRura_NowOpen;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_OpenRura_SelectNameID;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_ReturnFromYottiMuraProcess");
static_assert(sizeof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess) == 0x000088, "Wrong size on BP_FLIB_Quest_C_ReturnFromYottiMuraProcess");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, Dead) == 0x000000, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::Dead' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, __WorldContext) == 0x000008, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, StartReturnEvent) == 0x000010, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::StartReturnEvent' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, LoadScreenType) == 0x000011, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::LoadScreenType' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, FromYottiMura) == 0x000012, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::FromYottiMura' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, Visited) == 0x000013, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::Visited' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, NowMapID) == 0x000018, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::NowMapID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, TempEvent) == 0x000020, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::TempEvent' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_GetGameFlagBool_ReturnValue) == 0x000021, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_GetGameFlagBool_ReturnValue2) == 0x000023, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_GetGameFlagBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_GetSaveData_ReturnValue) == 0x000028, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_GetSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_GetGameFlagBool_ReturnValue3) == 0x000030, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_GetGameFlagBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_GetActiveMapID_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_GetActiveMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, Temp_name_Variable) == 0x000040, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, Temp_name_Variable2) == 0x000050, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, Temp_bool_Variable) == 0x000058, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_Not_PreBool_ReturnValue2) == 0x000059, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00005A, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, K2Node_Select_Default) == 0x000060, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, K2Node_MakeStruct_JackLDT_Rura) == 0x000068, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::K2Node_MakeStruct_JackLDT_Rura' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_OpenRura_NowOpen) == 0x000078, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_OpenRura_NowOpen' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_ReturnFromYottiMuraProcess, CallFunc_OpenRura_SelectNameID) == 0x000080, "Member 'BP_FLIB_Quest_C_ReturnFromYottiMuraProcess::CallFunc_OpenRura_SelectNameID' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.GetKakosakuQuestClearAltarCount
// 0x01E0 (0x01E0 - 0x0000)
struct BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetCount;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           DQ10;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ9;                                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ8;                                               // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ7;                                               // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ6;                                               // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ5;                                               // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ4;                                               // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ3;                                               // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ2;                                               // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           DQ1;                                               // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array2;                           // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count2;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear2;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array3;                           // 0x00E8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count3;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear3;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array4;                           // 0x0108(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count4;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear4;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count5;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear5;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array5;                           // 0x0130(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count6;                // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear6;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array6;                           // 0x0150(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count7;                // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear7;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array7;                           // 0x0170(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count8;                // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear8;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array8;                           // 0x0190(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count9;                // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear9;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array9;                           // 0x01B0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array10;                          // 0x01C0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckQuestEndCount_Count10;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestEndCount_AllClear10;            // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount");
static_assert(sizeof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount) == 0x0001E0, "Wrong size on BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, Count) == 0x000008, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, RetCount) == 0x00000C, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::RetCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ10) == 0x000010, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ9) == 0x000020, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ8) == 0x000030, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ7) == 0x000040, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ6) == 0x000050, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ5) == 0x000060, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ4) == 0x000070, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ3) == 0x000080, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ2) == 0x000090, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, DQ1) == 0x0000A0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::DQ1' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array2) == 0x0000C0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count) == 0x0000D4, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear) == 0x0000D8, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue2) == 0x0000DC, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count2) == 0x0000E0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear2) == 0x0000E4, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array3) == 0x0000E8, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue3) == 0x0000F8, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count3) == 0x0000FC, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear3) == 0x000100, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array4) == 0x000108, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue4) == 0x000118, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count4) == 0x00011C, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear4) == 0x000120, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue5) == 0x000124, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count5) == 0x000128, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear5) == 0x00012C, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array5) == 0x000130, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue6) == 0x000140, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count6) == 0x000144, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear6) == 0x000148, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array6) == 0x000150, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue7) == 0x000160, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count7) == 0x000164, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear7) == 0x000168, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array7) == 0x000170, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue8) == 0x000180, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count8) == 0x000184, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear8) == 0x000188, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array8) == 0x000190, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue9) == 0x0001A0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count9) == 0x0001A4, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear9) == 0x0001A8, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array9) == 0x0001B0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, K2Node_MakeArray_Array10) == 0x0001C0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::K2Node_MakeArray_Array10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_Add_IntInt_ReturnValue10) == 0x0001D0, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_Count10) == 0x0001D4, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_Count10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount, CallFunc_CheckQuestEndCount_AllClear10) == 0x0001D8, "Member 'BP_FLIB_Quest_C_GetKakosakuQuestClearAltarCount::CallFunc_CheckQuestEndCount_AllClear10' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.KakosakuQuestAltarAchievement
// 0x0070 (0x0070 - 0x0000)
struct BP_FLIB_Quest_C_KakosakuQuestAltarAchievement final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement;             // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetKakosakuQuestClearAltarCount_Count;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement2;            // 0x0028(0x0010)(NoDestructor)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement3;            // 0x0038(0x0010)(NoDestructor)
	struct FJackLDT_Achievement                   K2Node_MakeStruct_JackLDT_Achievement4;            // 0x0048(0x0010)(NoDestructor)
	struct FJackLDT_GameFlagDataScenario          K2Node_MakeStruct_JackLDT_GameFlagDataScenario;    // 0x0058(0x0010)(NoDestructor)
	bool                                          CallFunc_GetScenarioFlag_Flag;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue3;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_KakosakuQuestAltarAchievement");
static_assert(sizeof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement) == 0x000070, "Wrong size on BP_FLIB_Quest_C_KakosakuQuestAltarAchievement");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, Count) == 0x000008, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, K2Node_MakeStruct_JackLDT_Achievement) == 0x000010, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::K2Node_MakeStruct_JackLDT_Achievement' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GetGameFlagBool_ReturnValue) == 0x000020, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GetKakosakuQuestClearAltarCount_Count) == 0x000024, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GetKakosakuQuestClearAltarCount_Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, K2Node_MakeStruct_JackLDT_Achievement2) == 0x000028, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::K2Node_MakeStruct_JackLDT_Achievement2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, K2Node_MakeStruct_JackLDT_Achievement3) == 0x000038, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::K2Node_MakeStruct_JackLDT_Achievement3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, K2Node_MakeStruct_JackLDT_Achievement4) == 0x000048, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::K2Node_MakeStruct_JackLDT_Achievement4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, K2Node_MakeStruct_JackLDT_GameFlagDataScenario) == 0x000058, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::K2Node_MakeStruct_JackLDT_GameFlagDataScenario' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GetScenarioFlag_Flag) == 0x000068, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GetScenarioFlag_Flag' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_BooleanOR_ReturnValue) == 0x00006A, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x00006B, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestAltarAchievement, CallFunc_GreaterEqual_IntInt_ReturnValue3) == 0x00006C, "Member 'BP_FLIB_Quest_C_KakosakuQuestAltarAchievement::CallFunc_GreaterEqual_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckQuestEndCount
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_Quest_C_CheckQuestEndCount final
{
public:
	TArray<class FName>                           Flags_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllClear;                                          // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempCount;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckQuestFlagCore_Ret;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckQuestEndCount) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckQuestEndCount");
static_assert(sizeof(BP_FLIB_Quest_C_CheckQuestEndCount) == 0x000050, "Wrong size on BP_FLIB_Quest_C_CheckQuestEndCount");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, Flags_0) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, Count) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::Count' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, AllClear) == 0x00001C, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::AllClear' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, TempCount) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::TempCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_CheckQuestFlagCore_Ret) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_CheckQuestFlagCore_Ret' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Array_Length_ReturnValue2) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_Add_IntInt_ReturnValue2) == 0x000044, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckQuestEndCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckQuestEndCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.GetAikotobaYottiFirstTextID
// 0x0098 (0x0098 - 0x0000)
struct BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID final
{
public:
	struct FJackLDT_QuestTable                    QuestId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextID;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAt;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempIndex;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Lookats;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           TextIDs;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class FName>                           Quests;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array2;                           // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<bool>                                  K2Node_MakeArray_Array3;                           // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID");
static_assert(sizeof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID) == 0x000098, "Wrong size on BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, QuestId) == 0x000000, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::QuestId' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, TextID) == 0x000018, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::TextID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, LookAt) == 0x000020, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::LookAt' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, TempIndex) == 0x000024, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::TempIndex' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, Lookats) == 0x000028, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::Lookats' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, TextIDs) == 0x000038, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::TextIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, Quests) == 0x000048, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::Quests' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, K2Node_MakeArray_Array2) == 0x000070, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, K2Node_MakeArray_Array3) == 0x000080, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID, CallFunc_Array_Find_ReturnValue) == 0x000090, "Member 'BP_FLIB_Quest_C_GetAikotobaYottiFirstTextID::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.KakosakuQuestListOpen
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_Quest_C_KakosakuQuestListOpen final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FJackLDT_GameFlagDataQuest>     Flags_0;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataQuest>     K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	struct FJackLDT_GameFlagDataQuest             CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_KakosakuQuestListOpen) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_KakosakuQuestListOpen");
static_assert(sizeof(BP_FLIB_Quest_C_KakosakuQuestListOpen) == 0x000050, "Wrong size on BP_FLIB_Quest_C_KakosakuQuestListOpen");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, Flags_0) == 0x000008, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestListOpen, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FLIB_Quest_C_KakosakuQuestListOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.KakosakuQuestCheckAndSetPublish
// 0x0090 (0x0090 - 0x0000)
struct BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllSet;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataQuest>     Flags_0;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackLDT_GameFlagDataQuest>     K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_GameFlagDataQuest             CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_GameFlagDataQuest             CallFunc_Array_Get_Item2;                          // 0x0070(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGameFlagInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish");
static_assert(sizeof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish) == 0x000090, "Wrong size on BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, __WorldContext) == 0x000000, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, AllSet) == 0x000008, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::AllSet' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Flags_0) == 0x000010, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Flags_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Temp_int_Array_Index_Variable2) == 0x000030, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, Temp_int_Loop_Counter_Variable2) == 0x00004C, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Add_IntInt_ReturnValue2) == 0x000068, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Array_Length_ReturnValue2) == 0x00006C, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Array_Get_Item2) == 0x000070, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Less_IntInt_ReturnValue2) == 0x000080, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_GetGameFlagInt_ReturnValue) == 0x000084, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_GetGameFlagInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_Conv_IntToByte_ReturnValue) == 0x000088, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_GetValidValue_ReturnValue) == 0x000089, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'BP_FLIB_Quest_C_KakosakuQuestCheckAndSetPublish::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_FLIB_Quest.BP_FLIB_Quest_C.CheckItem
// 0x0070 (0x0070 - 0x0000)
struct BP_FLIB_Quest_C_CheckItem final
{
public:
	TArray<class FName>                           ItemIds;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemID;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalItemID;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalResult;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_ItemTable                     K2Node_MakeStruct_JackLDT_ItemTable;               // 0x0050(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCount_ItemCount;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_Quest_C_CheckItem) == 0x000008, "Wrong alignment on BP_FLIB_Quest_C_CheckItem");
static_assert(sizeof(BP_FLIB_Quest_C_CheckItem) == 0x000070, "Wrong size on BP_FLIB_Quest_C_CheckItem");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, ItemIds) == 0x000000, "Member 'BP_FLIB_Quest_C_CheckItem::ItemIds' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, __WorldContext) == 0x000010, "Member 'BP_FLIB_Quest_C_CheckItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, Result) == 0x000018, "Member 'BP_FLIB_Quest_C_CheckItem::Result' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, ItemID) == 0x000020, "Member 'BP_FLIB_Quest_C_CheckItem::ItemID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, LocalItemID) == 0x000028, "Member 'BP_FLIB_Quest_C_CheckItem::LocalItemID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, LocalResult) == 0x000030, "Member 'BP_FLIB_Quest_C_CheckItem::LocalResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000031, "Member 'BP_FLIB_Quest_C_CheckItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_FLIB_Quest_C_CheckItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_FLIB_Quest_C_CheckItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, K2Node_MakeStruct_JackLDT_ItemTable) == 0x000050, "Member 'BP_FLIB_Quest_C_CheckItem::K2Node_MakeStruct_JackLDT_ItemTable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_GetItemCount_ItemCount) == 0x000064, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_GetItemCount_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_Quest_C_CheckItem, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_FLIB_Quest_C_CheckItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}


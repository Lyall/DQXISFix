#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugEventExec

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DebugEventExec.BP_DebugEventExec_C
// 0x00B8 (0x0450 - 0x0398)
class ABP_DebugEventExec_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          InBox;                                             // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UpButtonDispName;                                  // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   UpButtonEvent;                                     // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DownButtonDispName;                                // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   DownButtonEvent;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LeftButtonDispName;                                // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   LeftButtonEvent;                                   // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 RightButtonDispName;                               // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   RightButtonEvent;                                  // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LButtonDispName;                                   // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   LButtonEvent;                                      // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 RButtonDispName;                                   // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   RButtonEvent;                                      // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BoxVisibleEnable;                                  // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_DebugEventExec(int32 EntryPoint);
	void CustomEvent_1();
	void CustomEvent_1_Copy();
	void CustomEvent_1_Copy_1();
	void CustomEvent_1_Copy_2();
	void CustomEvent_1_Copy_3();
	void CustomEvent_1_Copy_4();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__Box_K2Node_ComponentBoundEvent_116_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_114_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DebugEventExec_C">();
	}
	static class ABP_DebugEventExec_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DebugEventExec_C>();
	}
};
static_assert(alignof(ABP_DebugEventExec_C) == 0x000008, "Wrong alignment on ABP_DebugEventExec_C");
static_assert(sizeof(ABP_DebugEventExec_C) == 0x000450, "Wrong size on ABP_DebugEventExec_C");
static_assert(offsetof(ABP_DebugEventExec_C, UberGraphFrame) == 0x000398, "Member 'ABP_DebugEventExec_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, Box) == 0x0003A0, "Member 'ABP_DebugEventExec_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, TextRender) == 0x0003A8, "Member 'ABP_DebugEventExec_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, InBox) == 0x0003B0, "Member 'ABP_DebugEventExec_C::InBox' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, UpButtonDispName) == 0x0003B8, "Member 'ABP_DebugEventExec_C::UpButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, UpButtonEvent) == 0x0003C8, "Member 'ABP_DebugEventExec_C::UpButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, DownButtonDispName) == 0x0003D0, "Member 'ABP_DebugEventExec_C::DownButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, DownButtonEvent) == 0x0003E0, "Member 'ABP_DebugEventExec_C::DownButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, LeftButtonDispName) == 0x0003E8, "Member 'ABP_DebugEventExec_C::LeftButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, LeftButtonEvent) == 0x0003F8, "Member 'ABP_DebugEventExec_C::LeftButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, RightButtonDispName) == 0x000400, "Member 'ABP_DebugEventExec_C::RightButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, RightButtonEvent) == 0x000410, "Member 'ABP_DebugEventExec_C::RightButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, LButtonDispName) == 0x000418, "Member 'ABP_DebugEventExec_C::LButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, LButtonEvent) == 0x000428, "Member 'ABP_DebugEventExec_C::LButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, RButtonDispName) == 0x000430, "Member 'ABP_DebugEventExec_C::RButtonDispName' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, RButtonEvent) == 0x000440, "Member 'ABP_DebugEventExec_C::RButtonEvent' has a wrong offset!");
static_assert(offsetof(ABP_DebugEventExec_C, BoxVisibleEnable) == 0x000448, "Member 'ABP_DebugEventExec_C::BoxVisibleEnable' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_CS_Skip_000_modern

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Hud_CS_Skip_000_modern.WBP_Hud_CS_Skip_000_modern_C
// 0x0068 (0x03D8 - 0x0370)
class UWBP_Hud_CS_Skip_000_modern_C final : public UJackUMGWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Push_Animation;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AutoFeedButtonPanel;                               // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AutoFeedCaptionPanel;                              // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           AutoFeedVisibleControlPanel;                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CSSkipCaptionPanel;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CSSkipVisibleControlPanel;                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSkipIndicator;                                   // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowCaption;                                     // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShowOnAutoFeed;                                  // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsAutoHidden;                                     // 0x03C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EJackUMGCutSceneSkipDialog                    CutSceneSkipDialog;                                // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HiddenCounter;                                     // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondsToHide;                                     // 0x03CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableBlockingByME;                               // 0x03D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	EJackKeys                                     SkipButton;                                        // 0x03D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackKeys                                     AutoFeedButton;                                    // 0x03D2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEnableSkipAnim;                                 // 0x03D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsAlwaysShow;                                     // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_Hud_CS_Skip_000_modern(int32 EntryPoint);
	void KeyEventDelegate(EJackKeys InKeyType, bool bIsPressed);
	void NotificationEvent(class FName InEventTag, class UJackUMGWidgetBase* InCallWidgetBase, class UObject* InObject);
	void WidgetBPActionDelegate(class FName EventTag);
	void PlaySkipAnimation();
	void StopSkipAnimation();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetShowMode(EJackUMGCutSceneSkipDialog NewParam);
	void UpdateAutoFeedCaption();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Hud_CS_Skip_000_modern_C">();
	}
	static class UWBP_Hud_CS_Skip_000_modern_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Hud_CS_Skip_000_modern_C>();
	}
};
static_assert(alignof(UWBP_Hud_CS_Skip_000_modern_C) == 0x000008, "Wrong alignment on UWBP_Hud_CS_Skip_000_modern_C");
static_assert(sizeof(UWBP_Hud_CS_Skip_000_modern_C) == 0x0003D8, "Wrong size on UWBP_Hud_CS_Skip_000_modern_C");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, UberGraphFrame) == 0x000370, "Member 'UWBP_Hud_CS_Skip_000_modern_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, Push_Animation) == 0x000378, "Member 'UWBP_Hud_CS_Skip_000_modern_C::Push_Animation' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, Loop) == 0x000380, "Member 'UWBP_Hud_CS_Skip_000_modern_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, In) == 0x000388, "Member 'UWBP_Hud_CS_Skip_000_modern_C::In' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, AutoFeedButtonPanel) == 0x000390, "Member 'UWBP_Hud_CS_Skip_000_modern_C::AutoFeedButtonPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, AutoFeedCaptionPanel) == 0x000398, "Member 'UWBP_Hud_CS_Skip_000_modern_C::AutoFeedCaptionPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, AutoFeedVisibleControlPanel) == 0x0003A0, "Member 'UWBP_Hud_CS_Skip_000_modern_C::AutoFeedVisibleControlPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, CSSkipCaptionPanel) == 0x0003A8, "Member 'UWBP_Hud_CS_Skip_000_modern_C::CSSkipCaptionPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, CSSkipVisibleControlPanel) == 0x0003B0, "Member 'UWBP_Hud_CS_Skip_000_modern_C::CSSkipVisibleControlPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, RootPanel) == 0x0003B8, "Member 'UWBP_Hud_CS_Skip_000_modern_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, IsSkipIndicator) == 0x0003C0, "Member 'UWBP_Hud_CS_Skip_000_modern_C::IsSkipIndicator' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, IsShowCaption) == 0x0003C1, "Member 'UWBP_Hud_CS_Skip_000_modern_C::IsShowCaption' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, IsShowOnAutoFeed) == 0x0003C2, "Member 'UWBP_Hud_CS_Skip_000_modern_C::IsShowOnAutoFeed' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, bIsAutoHidden) == 0x0003C3, "Member 'UWBP_Hud_CS_Skip_000_modern_C::bIsAutoHidden' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, CutSceneSkipDialog) == 0x0003C4, "Member 'UWBP_Hud_CS_Skip_000_modern_C::CutSceneSkipDialog' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, HiddenCounter) == 0x0003C8, "Member 'UWBP_Hud_CS_Skip_000_modern_C::HiddenCounter' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, SecondsToHide) == 0x0003CC, "Member 'UWBP_Hud_CS_Skip_000_modern_C::SecondsToHide' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, bEnableBlockingByME) == 0x0003D0, "Member 'UWBP_Hud_CS_Skip_000_modern_C::bEnableBlockingByME' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, SkipButton) == 0x0003D1, "Member 'UWBP_Hud_CS_Skip_000_modern_C::SkipButton' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, AutoFeedButton) == 0x0003D2, "Member 'UWBP_Hud_CS_Skip_000_modern_C::AutoFeedButton' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, bIsEnableSkipAnim) == 0x0003D3, "Member 'UWBP_Hud_CS_Skip_000_modern_C::bIsEnableSkipAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Hud_CS_Skip_000_modern_C, bIsAlwaysShow) == 0x0003D4, "Member 'UWBP_Hud_CS_Skip_000_modern_C::bIsAlwaysShow' has a wrong offset!");

}


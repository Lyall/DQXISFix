#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_COMP_BoneDynamicsStateBase

#include "Basic.hpp"

#include "STRUCT_SoftBoneChainSettings_structs.hpp"
#include "Engine_classes.hpp"
#include "STRUCT_MaxOrMinRot_structs.hpp"


namespace SDK
{

// DynamicClass BP_COMP_BoneDynamicsStateBase.BP_COMP_BoneDynamicsStateBase_C
// 0x0030 (0x0310 - 0x02E0)
class UBP_COMP_BoneDynamicsStateBase_C final : public USceneComponent
{
public:
	TArray<struct FSTRUCT_SoftBoneChainSettings>  SoftBoneChainSettings;                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSTRUCT_MaxOrMinRot>            MaxOrMinRot;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          Debug;                                             // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0304(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveTick(float bpp__DeltaSeconds__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_COMP_BoneDynamicsStateBase_C">();
	}
	static class UBP_COMP_BoneDynamicsStateBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_COMP_BoneDynamicsStateBase_C>();
	}
};
static_assert(alignof(UBP_COMP_BoneDynamicsStateBase_C) == 0x000008, "Wrong alignment on UBP_COMP_BoneDynamicsStateBase_C");
static_assert(sizeof(UBP_COMP_BoneDynamicsStateBase_C) == 0x000310, "Wrong size on UBP_COMP_BoneDynamicsStateBase_C");
static_assert(offsetof(UBP_COMP_BoneDynamicsStateBase_C, SoftBoneChainSettings) == 0x0002E0, "Member 'UBP_COMP_BoneDynamicsStateBase_C::SoftBoneChainSettings' has a wrong offset!");
static_assert(offsetof(UBP_COMP_BoneDynamicsStateBase_C, MaxOrMinRot) == 0x0002F0, "Member 'UBP_COMP_BoneDynamicsStateBase_C::MaxOrMinRot' has a wrong offset!");
static_assert(offsetof(UBP_COMP_BoneDynamicsStateBase_C, Debug) == 0x000300, "Member 'UBP_COMP_BoneDynamicsStateBase_C::Debug' has a wrong offset!");
static_assert(offsetof(UBP_COMP_BoneDynamicsStateBase_C, K2Node_Event_DeltaSeconds) == 0x000304, "Member 'UBP_COMP_BoneDynamicsStateBase_C::K2Node_Event_DeltaSeconds' has a wrong offset!");

}


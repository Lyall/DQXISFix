#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OSDKModule

#include "Basic.hpp"


namespace SDK
{

// Enum OSDKModule.EOSDKFutureFinishResult
// NumValues: 0x0004
enum class EOSDKFutureFinishResult : uint8
{
	Ready                                    = 2,
	Cancelled                                = 3,
	Failed                                   = 4,
	EOSDKFutureFinishResult_MAX              = 5,
};

// Enum OSDKModule.EOSDKFutureStatus
// NumValues: 0x0006
enum class EOSDKFutureStatus : uint8
{
	Invalid                                  = 0,
	Pending                                  = 1,
	Ready                                    = 2,
	Cancelled                                = 3,
	Failed                                   = 4,
	EOSDKFutureStatus_MAX                    = 5,
};

// Enum OSDKModule.EOSDKCommunity
// NumValues: 0x0012
enum class EOSDKCommunity : uint8
{
	Steam                                    = 0,
	Live                                     = 1,
	Psn                                      = 2,
	Membership                               = 3,
	Oculus                                   = 4,
	Facebook                                 = 5,
	Web                                      = 6,
	Feral                                    = 7,
	Os                                       = 8,
	Unittest                                 = 9,
	Gamecenter                               = 10,
	Google                                   = 11,
	Microsoft                                = 12,
	Corporate                                = 13,
	Amazon                                   = 14,
	Noauth                                   = 15,
	Unknown                                  = 16,
	EOSDKCommunity_MAX                       = 17,
};

// Enum OSDKModule.EOSHTTPClientLoggingFlags
// NumValues: 0x000D
enum class EOSHTTPClientLoggingFlags : uint8
{
	DISABLED                                 = 0,
	REQUEST                                  = 1,
	REQUEST_SOME_HEADERS                     = 2,
	REQUEST_ALL_HEADERS                      = 3,
	REQUEST_BODY                             = 4,
	REQUEST_ANY                              = 5,
	RESPONSE                                 = 6,
	RESPONSE_SOME_HEADERS                    = 7,
	RESPONSE_ALL_HEADERS                     = 8,
	RESPONSE_BODY                            = 9,
	RESPONSE_ANY                             = 10,
	DEFAULT                                  = 11,
	EOSHTTPClientLoggingFlags_MAX            = 12,
};

// ScriptStruct OSDKModule.OSDKAuthenticationInfo
// 0x0040 (0x0040 - 0x0000)
struct FOSDKAuthenticationInfo final
{
public:
	class FString                                 ProjectName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginUrl;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SignupURL;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TokenExpiration;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKAuthenticationInfo) == 0x000008, "Wrong alignment on FOSDKAuthenticationInfo");
static_assert(sizeof(FOSDKAuthenticationInfo) == 0x000040, "Wrong size on FOSDKAuthenticationInfo");
static_assert(offsetof(FOSDKAuthenticationInfo, ProjectName) == 0x000000, "Member 'FOSDKAuthenticationInfo::ProjectName' has a wrong offset!");
static_assert(offsetof(FOSDKAuthenticationInfo, LoginUrl) == 0x000010, "Member 'FOSDKAuthenticationInfo::LoginUrl' has a wrong offset!");
static_assert(offsetof(FOSDKAuthenticationInfo, SignupURL) == 0x000020, "Member 'FOSDKAuthenticationInfo::SignupURL' has a wrong offset!");
static_assert(offsetof(FOSDKAuthenticationInfo, TokenExpiration) == 0x000030, "Member 'FOSDKAuthenticationInfo::TokenExpiration' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKGameInfo
// 0x0040 (0x0040 - 0x0000)
struct FOSDKGameInfo final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BuildId;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OsdkVersion;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKGameInfo) == 0x000008, "Wrong alignment on FOSDKGameInfo");
static_assert(sizeof(FOSDKGameInfo) == 0x000040, "Wrong size on FOSDKGameInfo");
static_assert(offsetof(FOSDKGameInfo, Name) == 0x000000, "Member 'FOSDKGameInfo::Name' has a wrong offset!");
static_assert(offsetof(FOSDKGameInfo, Version) == 0x000010, "Member 'FOSDKGameInfo::Version' has a wrong offset!");
static_assert(offsetof(FOSDKGameInfo, BuildId) == 0x000020, "Member 'FOSDKGameInfo::BuildId' has a wrong offset!");
static_assert(offsetof(FOSDKGameInfo, OsdkVersion) == 0x000030, "Member 'FOSDKGameInfo::OsdkVersion' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKClientConfig
// 0x0050 (0x0050 - 0x0000)
struct FOSDKClientConfig final
{
public:
	class FString                                 ProjectName;                                       // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoginUrl;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SignupURL;                                         // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfigSandbox;                                     // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserSandbox;                                       // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKClientConfig) == 0x000008, "Wrong alignment on FOSDKClientConfig");
static_assert(sizeof(FOSDKClientConfig) == 0x000050, "Wrong size on FOSDKClientConfig");
static_assert(offsetof(FOSDKClientConfig, ProjectName) == 0x000000, "Member 'FOSDKClientConfig::ProjectName' has a wrong offset!");
static_assert(offsetof(FOSDKClientConfig, LoginUrl) == 0x000010, "Member 'FOSDKClientConfig::LoginUrl' has a wrong offset!");
static_assert(offsetof(FOSDKClientConfig, SignupURL) == 0x000020, "Member 'FOSDKClientConfig::SignupURL' has a wrong offset!");
static_assert(offsetof(FOSDKClientConfig, ConfigSandbox) == 0x000030, "Member 'FOSDKClientConfig::ConfigSandbox' has a wrong offset!");
static_assert(offsetof(FOSDKClientConfig, UserSandbox) == 0x000040, "Member 'FOSDKClientConfig::UserSandbox' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKNetworkInfo
// 0x0020 (0x0020 - 0x0000)
struct FOSDKNetworkInfo final
{
public:
	class FString                                 BaseURL;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PublicIP;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKNetworkInfo) == 0x000008, "Wrong alignment on FOSDKNetworkInfo");
static_assert(sizeof(FOSDKNetworkInfo) == 0x000020, "Wrong size on FOSDKNetworkInfo");
static_assert(offsetof(FOSDKNetworkInfo, BaseURL) == 0x000000, "Member 'FOSDKNetworkInfo::BaseURL' has a wrong offset!");
static_assert(offsetof(FOSDKNetworkInfo, PublicIP) == 0x000010, "Member 'FOSDKNetworkInfo::PublicIP' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKSandboxInfo
// 0x0020 (0x0020 - 0x0000)
struct FOSDKSandboxInfo final
{
public:
	class FString                                 User;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Config;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKSandboxInfo) == 0x000008, "Wrong alignment on FOSDKSandboxInfo");
static_assert(sizeof(FOSDKSandboxInfo) == 0x000020, "Wrong size on FOSDKSandboxInfo");
static_assert(offsetof(FOSDKSandboxInfo, User) == 0x000000, "Member 'FOSDKSandboxInfo::User' has a wrong offset!");
static_assert(offsetof(FOSDKSandboxInfo, Config) == 0x000010, "Member 'FOSDKSandboxInfo::Config' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKGeolocationInfo
// 0x0048 (0x0048 - 0x0000)
struct FOSDKGeolocationInfo final
{
public:
	class FString                                 Country;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 City;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Latitude;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Longitutde;                                        // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Timezone;                                          // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKGeolocationInfo) == 0x000008, "Wrong alignment on FOSDKGeolocationInfo");
static_assert(sizeof(FOSDKGeolocationInfo) == 0x000048, "Wrong size on FOSDKGeolocationInfo");
static_assert(offsetof(FOSDKGeolocationInfo, Country) == 0x000000, "Member 'FOSDKGeolocationInfo::Country' has a wrong offset!");
static_assert(offsetof(FOSDKGeolocationInfo, City) == 0x000010, "Member 'FOSDKGeolocationInfo::City' has a wrong offset!");
static_assert(offsetof(FOSDKGeolocationInfo, Region) == 0x000020, "Member 'FOSDKGeolocationInfo::Region' has a wrong offset!");
static_assert(offsetof(FOSDKGeolocationInfo, Latitude) == 0x000030, "Member 'FOSDKGeolocationInfo::Latitude' has a wrong offset!");
static_assert(offsetof(FOSDKGeolocationInfo, Longitutde) == 0x000034, "Member 'FOSDKGeolocationInfo::Longitutde' has a wrong offset!");
static_assert(offsetof(FOSDKGeolocationInfo, Timezone) == 0x000038, "Member 'FOSDKGeolocationInfo::Timezone' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKClientInfo
// 0x00C8 (0x00C8 - 0x0000)
struct FOSDKClientInfo final
{
public:
	struct FOSDKNetworkInfo                       Network;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FOSDKSandboxInfo                       Sandbox;                                           // 0x0020(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FOSDKGeolocationInfo                   Geolocation;                                       // 0x0040(0x0048)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FOSDKAuthenticationInfo                Authentication;                                    // 0x0088(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKClientInfo) == 0x000008, "Wrong alignment on FOSDKClientInfo");
static_assert(sizeof(FOSDKClientInfo) == 0x0000C8, "Wrong size on FOSDKClientInfo");
static_assert(offsetof(FOSDKClientInfo, Network) == 0x000000, "Member 'FOSDKClientInfo::Network' has a wrong offset!");
static_assert(offsetof(FOSDKClientInfo, Sandbox) == 0x000020, "Member 'FOSDKClientInfo::Sandbox' has a wrong offset!");
static_assert(offsetof(FOSDKClientInfo, Geolocation) == 0x000040, "Member 'FOSDKClientInfo::Geolocation' has a wrong offset!");
static_assert(offsetof(FOSDKClientInfo, Authentication) == 0x000088, "Member 'FOSDKClientInfo::Authentication' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKHTTPClient
// 0x0001 (0x0001 - 0x0000)
struct FOSDKHTTPClient final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOSDKHTTPClient) == 0x000001, "Wrong alignment on FOSDKHTTPClient");
static_assert(sizeof(FOSDKHTTPClient) == 0x000001, "Wrong size on FOSDKHTTPClient");

// ScriptStruct OSDKModule.OSDKProfileId
// 0x0028 (0x0028 - 0x0000)
struct FOSDKProfileId final
{
public:
	EOSDKCommunity                                Community;                                         // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserId;                                            // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0018(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKProfileId) == 0x000008, "Wrong alignment on FOSDKProfileId");
static_assert(sizeof(FOSDKProfileId) == 0x000028, "Wrong size on FOSDKProfileId");
static_assert(offsetof(FOSDKProfileId, Community) == 0x000000, "Member 'FOSDKProfileId::Community' has a wrong offset!");
static_assert(offsetof(FOSDKProfileId, UserId) == 0x000008, "Member 'FOSDKProfileId::UserId' has a wrong offset!");
static_assert(offsetof(FOSDKProfileId, Name) == 0x000018, "Member 'FOSDKProfileId::Name' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKServerInfo
// 0x0048 (0x0048 - 0x0000)
struct FOSDKServerInfo final
{
public:
	float                                         PingTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeDifference;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HostName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Environment;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerVersion;                                     // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 APIVersion;                                        // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKServerInfo) == 0x000008, "Wrong alignment on FOSDKServerInfo");
static_assert(sizeof(FOSDKServerInfo) == 0x000048, "Wrong size on FOSDKServerInfo");
static_assert(offsetof(FOSDKServerInfo, PingTime) == 0x000000, "Member 'FOSDKServerInfo::PingTime' has a wrong offset!");
static_assert(offsetof(FOSDKServerInfo, TimeDifference) == 0x000004, "Member 'FOSDKServerInfo::TimeDifference' has a wrong offset!");
static_assert(offsetof(FOSDKServerInfo, HostName) == 0x000008, "Member 'FOSDKServerInfo::HostName' has a wrong offset!");
static_assert(offsetof(FOSDKServerInfo, Environment) == 0x000018, "Member 'FOSDKServerInfo::Environment' has a wrong offset!");
static_assert(offsetof(FOSDKServerInfo, ServerVersion) == 0x000028, "Member 'FOSDKServerInfo::ServerVersion' has a wrong offset!");
static_assert(offsetof(FOSDKServerInfo, APIVersion) == 0x000038, "Member 'FOSDKServerInfo::APIVersion' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKUserId
// 0x0020 (0x0020 - 0x0000)
struct FOSDKUserId final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Provider;                                          // 0x0010(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKUserId) == 0x000008, "Wrong alignment on FOSDKUserId");
static_assert(sizeof(FOSDKUserId) == 0x000020, "Wrong size on FOSDKUserId");
static_assert(offsetof(FOSDKUserId, ID) == 0x000000, "Member 'FOSDKUserId::ID' has a wrong offset!");
static_assert(offsetof(FOSDKUserId, Provider) == 0x000010, "Member 'FOSDKUserId::Provider' has a wrong offset!");

// ScriptStruct OSDKModule.OSDKUserInfo
// 0x0050 (0x0050 - 0x0000)
struct FOSDKUserInfo final
{
public:
	struct FOSDKUserId                            UserId;                                            // 0x0000(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 Gamertag;                                          // 0x0020(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Language;                                          // 0x0030(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Country;                                           // 0x0040(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOSDKUserInfo) == 0x000008, "Wrong alignment on FOSDKUserInfo");
static_assert(sizeof(FOSDKUserInfo) == 0x000050, "Wrong size on FOSDKUserInfo");
static_assert(offsetof(FOSDKUserInfo, UserId) == 0x000000, "Member 'FOSDKUserInfo::UserId' has a wrong offset!");
static_assert(offsetof(FOSDKUserInfo, Gamertag) == 0x000020, "Member 'FOSDKUserInfo::Gamertag' has a wrong offset!");
static_assert(offsetof(FOSDKUserInfo, Language) == 0x000030, "Member 'FOSDKUserInfo::Language' has a wrong offset!");
static_assert(offsetof(FOSDKUserInfo, Country) == 0x000040, "Member 'FOSDKUserInfo::Country' has a wrong offset!");

}


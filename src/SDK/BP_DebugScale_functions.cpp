#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugScale

#include "Basic.hpp"

#include "BP_DebugScale_classes.hpp"
#include "BP_DebugScale_parameters.hpp"


namespace SDK
{

// Function BP_DebugScale.BP_DebugScale_C.ExecuteUbergraph_BP_DebugScale
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugScale_C::ExecuteUbergraph_BP_DebugScale(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugScale_C", "ExecuteUbergraph_BP_DebugScale");

	Params::BP_DebugScale_C_ExecuteUbergraph_BP_DebugScale Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugScale.BP_DebugScale_C.SakaAngleCheck
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Mirror                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DebugScale_C::SakaAngleCheck(float Angle, float Offset, bool Mirror)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugScale_C", "SakaAngleCheck");

	Params::BP_DebugScale_C_SakaAngleCheck Parms{};

	Parms.Angle = Angle;
	Parms.Offset = Offset;
	Parms.Mirror = Mirror;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugScale.BP_DebugScale_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DebugScale_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugScale_C", "ReceiveTick");

	Params::BP_DebugScale_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DebugScale.BP_DebugScale_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DebugScale_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DebugScale_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}


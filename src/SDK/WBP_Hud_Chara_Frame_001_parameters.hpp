#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Hud_Chara_Frame_001

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Hud_Chara_Frame_001.WBP_Hud_Chara_Frame_001_C.ExecuteUbergraph_WBP_Hud_Chara_Frame_001
// 0x0004 (0x0004 - 0x0000)
struct WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001) == 0x000004, "Wrong alignment on WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001");
static_assert(sizeof(WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001) == 0x000004, "Wrong size on WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001, EntryPoint) == 0x000000, "Member 'WBP_Hud_Chara_Frame_001_C_ExecuteUbergraph_WBP_Hud_Chara_Frame_001::EntryPoint' has a wrong offset!");

// Function WBP_Hud_Chara_Frame_001.WBP_Hud_Chara_Frame_001_C.PlayAnimActiveEnd
// 0x0001 (0x0001 - 0x0000)
struct WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd final
{
public:
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd) == 0x000001, "Wrong alignment on WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd");
static_assert(sizeof(WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd) == 0x000001, "Wrong size on WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_Hud_Chara_Frame_001_C_PlayAnimActiveEnd::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_Hud_Chara_Frame_001.WBP_Hud_Chara_Frame_001_C.GetPlateOffset
// 0x0020 (0x0020 - 0x0000)
struct WBP_Hud_Chara_Frame_001_C_GetPlateOffset final
{
public:
	float                                         Pos2D;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset) == 0x000008, "Wrong alignment on WBP_Hud_Chara_Frame_001_C_GetPlateOffset");
static_assert(sizeof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset) == 0x000020, "Wrong size on WBP_Hud_Chara_Frame_001_C_GetPlateOffset");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset, Pos2D) == 0x000000, "Member 'WBP_Hud_Chara_Frame_001_C_GetPlateOffset::Pos2D' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WBP_Hud_Chara_Frame_001_C_GetPlateOffset::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset, CallFunc_GetPosition_ReturnValue) == 0x000010, "Member 'WBP_Hud_Chara_Frame_001_C_GetPlateOffset::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_Hud_Chara_Frame_001_C_GetPlateOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Hud_Chara_Frame_001_C_GetPlateOffset, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'WBP_Hud_Chara_Frame_001_C_GetPlateOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");

}


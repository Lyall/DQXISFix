#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleFieldGenerator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleFieldGenerator.BP_BattleFieldGenerator_C
// 0x0018 (0x0448 - 0x0430)
class ABP_BattleFieldGenerator_C final : public AJackBattleFieldGenerator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         PermitIndex;                                       // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BattleFieldGenerator(int32 EntryPoint);
	void OnBattleEnd_Event_0();
	void OnBattleStart_Event_0(int32 PermitIndex_0);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetBlockngVolumeEnable(bool Enable, int32 PermitIndex_0);
	void IsPermitVolumeValid(bool* Valid);
	void SetupVolumes();
	void DisableOverlapEvent(class AVolume* Volume);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleFieldGenerator_C">();
	}
	static class ABP_BattleFieldGenerator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BattleFieldGenerator_C>();
	}
};
static_assert(alignof(ABP_BattleFieldGenerator_C) == 0x000008, "Wrong alignment on ABP_BattleFieldGenerator_C");
static_assert(sizeof(ABP_BattleFieldGenerator_C) == 0x000448, "Wrong size on ABP_BattleFieldGenerator_C");
static_assert(offsetof(ABP_BattleFieldGenerator_C, UberGraphFrame) == 0x000430, "Member 'ABP_BattleFieldGenerator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BattleFieldGenerator_C, DefaultSceneRoot) == 0x000438, "Member 'ABP_BattleFieldGenerator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BattleFieldGenerator_C, PermitIndex) == 0x000440, "Member 'ABP_BattleFieldGenerator_C::PermitIndex' has a wrong offset!");

}


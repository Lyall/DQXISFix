#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TreasureBoxKiraMovebable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TreasureBoxKiraMovebable.BP_TreasureBoxKiraMovebable_C.CreateNowLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_TreasureBoxKiraMovebable_C_CreateNowLocation final
{
public:
	float                                         bpp__NowSec__pf;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                bpp__Location__pf;                                 // 0x0004(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TreasureBoxKiraMovebable_C_CreateNowLocation) == 0x000004, "Wrong alignment on BP_TreasureBoxKiraMovebable_C_CreateNowLocation");
static_assert(sizeof(BP_TreasureBoxKiraMovebable_C_CreateNowLocation) == 0x000010, "Wrong size on BP_TreasureBoxKiraMovebable_C_CreateNowLocation");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_CreateNowLocation, bpp__NowSec__pf) == 0x000000, "Member 'BP_TreasureBoxKiraMovebable_C_CreateNowLocation::bpp__NowSec__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_CreateNowLocation, bpp__Location__pf) == 0x000004, "Member 'BP_TreasureBoxKiraMovebable_C_CreateNowLocation::bpp__Location__pf' has a wrong offset!");

// Function BP_TreasureBoxKiraMovebable.BP_TreasureBoxKiraMovebable_C.GetZ
// 0x0008 (0x0008 - 0x0000)
struct BP_TreasureBoxKiraMovebable_C_GetZ final
{
public:
	float                                         bpp__InputPin__pf;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__Z__pf;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TreasureBoxKiraMovebable_C_GetZ) == 0x000004, "Wrong alignment on BP_TreasureBoxKiraMovebable_C_GetZ");
static_assert(sizeof(BP_TreasureBoxKiraMovebable_C_GetZ) == 0x000008, "Wrong size on BP_TreasureBoxKiraMovebable_C_GetZ");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_GetZ, bpp__InputPin__pf) == 0x000000, "Member 'BP_TreasureBoxKiraMovebable_C_GetZ::bpp__InputPin__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_GetZ, bpp__Z__pf) == 0x000004, "Member 'BP_TreasureBoxKiraMovebable_C_GetZ::bpp__Z__pf' has a wrong offset!");

// Function BP_TreasureBoxKiraMovebable.BP_TreasureBoxKiraMovebable_C.MakeRandomRotator
// 0x0024 (0x0024 - 0x0000)
struct BP_TreasureBoxKiraMovebable_C_MakeRandomRotator final
{
public:
	struct FRotator                               bpp__RotCenter__pf;                                // 0x0000(0x000C)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               bpp__RotHalfRange__pf;                             // 0x000C(0x000C)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               bpp__Rotator__pf;                                  // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TreasureBoxKiraMovebable_C_MakeRandomRotator) == 0x000004, "Wrong alignment on BP_TreasureBoxKiraMovebable_C_MakeRandomRotator");
static_assert(sizeof(BP_TreasureBoxKiraMovebable_C_MakeRandomRotator) == 0x000024, "Wrong size on BP_TreasureBoxKiraMovebable_C_MakeRandomRotator");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_MakeRandomRotator, bpp__RotCenter__pf) == 0x000000, "Member 'BP_TreasureBoxKiraMovebable_C_MakeRandomRotator::bpp__RotCenter__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_MakeRandomRotator, bpp__RotHalfRange__pf) == 0x00000C, "Member 'BP_TreasureBoxKiraMovebable_C_MakeRandomRotator::bpp__RotHalfRange__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_MakeRandomRotator, bpp__Rotator__pf) == 0x000018, "Member 'BP_TreasureBoxKiraMovebable_C_MakeRandomRotator::bpp__Rotator__pf' has a wrong offset!");

// Function BP_TreasureBoxKiraMovebable.BP_TreasureBoxKiraMovebable_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TreasureBoxKiraMovebable_C_ReceiveTick final
{
public:
	float                                         bpp__DeltaSeconds__pf;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_TreasureBoxKiraMovebable_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TreasureBoxKiraMovebable_C_ReceiveTick");
static_assert(sizeof(BP_TreasureBoxKiraMovebable_C_ReceiveTick) == 0x000004, "Wrong size on BP_TreasureBoxKiraMovebable_C_ReceiveTick");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_ReceiveTick, bpp__DeltaSeconds__pf) == 0x000000, "Member 'BP_TreasureBoxKiraMovebable_C_ReceiveTick::bpp__DeltaSeconds__pf' has a wrong offset!");

// Function BP_TreasureBoxKiraMovebable.BP_TreasureBoxKiraMovebable_C.SetMoveParam
// 0x0030 (0x0030 - 0x0000)
struct BP_TreasureBoxKiraMovebable_C_SetMoveParam final
{
public:
	TArray<float>                                 bpp__ParabolaParamZ__pf;                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                bpp__Start__pf;                                    // 0x0010(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                bpp__End__pf;                                      // 0x001C(0x000C)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bpp__DelaySec__pf;                                 // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_TreasureBoxKiraMovebable_C_SetMoveParam) == 0x000008, "Wrong alignment on BP_TreasureBoxKiraMovebable_C_SetMoveParam");
static_assert(sizeof(BP_TreasureBoxKiraMovebable_C_SetMoveParam) == 0x000030, "Wrong size on BP_TreasureBoxKiraMovebable_C_SetMoveParam");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_SetMoveParam, bpp__ParabolaParamZ__pf) == 0x000000, "Member 'BP_TreasureBoxKiraMovebable_C_SetMoveParam::bpp__ParabolaParamZ__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_SetMoveParam, bpp__Start__pf) == 0x000010, "Member 'BP_TreasureBoxKiraMovebable_C_SetMoveParam::bpp__Start__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_SetMoveParam, bpp__End__pf) == 0x00001C, "Member 'BP_TreasureBoxKiraMovebable_C_SetMoveParam::bpp__End__pf' has a wrong offset!");
static_assert(offsetof(BP_TreasureBoxKiraMovebable_C_SetMoveParam, bpp__DelaySec__pf) == 0x000028, "Member 'BP_TreasureBoxKiraMovebable_C_SetMoveParam::bpp__DelaySec__pf' has a wrong offset!");

}


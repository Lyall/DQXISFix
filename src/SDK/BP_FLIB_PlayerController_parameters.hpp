#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_PlayerController

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.UpdateGroundAffects
// 0x00F0 (0x00F0 - 0x0000)
struct BP_FLIB_PlayerController_C_UpdateGroundAffects final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackGroundAffectComponent*>     TmpJackGroundAffect;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AJackCharacter*>                 TmpJackCharacter;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         Index_0;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackCharacter*>                 CallFunc_GetGuestNPCCharacters_ReturnValue;        // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackGroundAffectComponent*>     CallFunc_GetComponentsByClass_ReturnValue;         // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGroundAffectComponent*             CallFunc_Array_Get_Item2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackGroundAffectComponent*>     CallFunc_GetComponentsByClass_ReturnValue2;        // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGroundAffectComponent*             CallFunc_Array_Get_Item3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x00DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_UpdateGroundAffects) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_UpdateGroundAffects");
static_assert(sizeof(BP_FLIB_PlayerController_C_UpdateGroundAffects) == 0x0000F0, "Wrong size on BP_FLIB_PlayerController_C_UpdateGroundAffects");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, PlayerController) == 0x000000, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, TmpJackGroundAffect) == 0x000010, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::TmpJackGroundAffect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, TmpJackCharacter) == 0x000020, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::TmpJackCharacter' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Index_0) == 0x000030, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_GetGuestNPCCharacters_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_GetGuestNPCCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x000059, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Loop_Counter_Variable2) == 0x000074, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Add_IntInt_ReturnValue2) == 0x000078, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Loop_Counter_Variable3) == 0x000080, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Add_IntInt_ReturnValue3) == 0x000088, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Array_Index_Variable2) == 0x00008C, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Get_Item2) == 0x000098, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_GetComponentsByClass_ReturnValue2) == 0x0000A0, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_GetComponentsByClass_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Length_ReturnValue2) == 0x0000BC, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Less_IntInt_ReturnValue2) == 0x0000C0, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, Temp_int_Array_Index_Variable3) == 0x0000C4, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Length_ReturnValue3) == 0x0000C8, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Array_Get_Item3) == 0x0000D0, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Less_IntInt_ReturnValue3) == 0x0000D8, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x0000DC, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Add_IntInt_ReturnValue4) == 0x0000E8, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_UpdateGroundAffects, CallFunc_Add_IntInt_ReturnValue5) == 0x0000EC, "Member 'BP_FLIB_PlayerController_C_UpdateGroundAffects::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetFootLocationMaterialParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParameterValue;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x001C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter) == 0x000030, "Wrong size on BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter, Index_0) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter, ParameterValue) == 0x000004, "Member 'BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter, __WorldContext) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00001C, "Member 'BP_FLIB_PlayerController_C_SetFootLocationMaterialParameter::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetPartyOddEffect
// 0x0080 (0x0080 - 0x0000)
struct BP_FLIB_PlayerController_C_SetPartyOddEffect final
{
public:
	struct FJackLDT_OddEffect                     InOddEffect;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackFriendGameCharacter*>       TmpJackFriendGameCharacter;                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UJackGameCharacter*>             TempChaArray;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UJackGamePlayer*                        CallFunc_GetJackGamePlayer_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJackFriendGameCharacter*>       CallFunc_GetPartyMembers_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackFriendGameCharacter*               CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CallFunc_GetCharacterType_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetPartyOddEffect) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetPartyOddEffect");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetPartyOddEffect) == 0x000080, "Wrong size on BP_FLIB_PlayerController_C_SetPartyOddEffect");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, InOddEffect) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::InOddEffect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, __WorldContext) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, TmpJackFriendGameCharacter) == 0x000018, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::TmpJackFriendGameCharacter' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, TempChaArray) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::TempChaArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_GetJackGamePlayer_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_GetJackGamePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_GetPartyMembers_ReturnValue) == 0x000048, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_GetPartyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_GetCharacterType_ReturnValue) == 0x000068, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_GetCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_GetGameCharacter_ReturnValue) == 0x000070, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetPartyOddEffect, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BP_FLIB_PlayerController_C_SetPartyOddEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetCharaOddEffectCore
// 0x0050 (0x0050 - 0x0000)
struct BP_FLIB_PlayerController_C_SetCharaOddEffectCore final
{
public:
	TArray<class UJackGameCharacter*>             CharaArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FJackLDT_OddEffect                     InOddEffect;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackOddEffectManager*                  CallFunc_GetOddEffectManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetCharaOddEffectCore");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore) == 0x000050, "Wrong size on BP_FLIB_PlayerController_C_SetCharaOddEffectCore");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CharaArray) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CharaArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, InOddEffect) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::InOddEffect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, __WorldContext) == 0x000020, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_GetOddEffectManager_ReturnValue) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_GetOddEffectManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffectCore, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffectCore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetCharaOddEffect
// 0x0060 (0x0060 - 0x0000)
struct BP_FLIB_PlayerController_C_SetCharaOddEffect final
{
public:
	TArray<EJackCharacter>                        CharaIDArray;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FJackLDT_OddEffect                     InOddEffect;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackGameCharacter*>             TempChaArray;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CallFunc_Array_Get_Item;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetCharaOddEffect) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetCharaOddEffect");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetCharaOddEffect) == 0x000060, "Wrong size on BP_FLIB_PlayerController_C_SetCharaOddEffect");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CharaIDArray) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CharaIDArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, InOddEffect) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::InOddEffect' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, __WorldContext) == 0x000020, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, TempChaArray) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::TempChaArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_GetGameCharacter_ReturnValue) == 0x000048, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetCharaOddEffect, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_SetCharaOddEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.IsDeadCharacter
// 0x0028 (0x0028 - 0x0000)
struct BP_FLIB_PlayerController_C_IsDeadCharacter final
{
public:
	EJackCharacter                                CharaID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHP_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_IsDeadCharacter) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_IsDeadCharacter");
static_assert(sizeof(BP_FLIB_PlayerController_C_IsDeadCharacter) == 0x000028, "Wrong size on BP_FLIB_PlayerController_C_IsDeadCharacter");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, CharaID) == 0x000000, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::CharaID' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, Dead) == 0x000010, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::Dead' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, CallFunc_GetGameCharacter_ReturnValue) == 0x000018, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, CallFunc_GetHP_ReturnValue) == 0x000020, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::CallFunc_GetHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_IsDeadCharacter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_FLIB_PlayerController_C_IsDeadCharacter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.GetPlayerLevel
// 0x0020 (0x0020 - 0x0000)
struct BP_FLIB_PlayerController_C_GetPlayerLevel final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewParam;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackGameCharacter*                     CallFunc_GetGameCharacter_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_GetPlayerLevel) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_GetPlayerLevel");
static_assert(sizeof(BP_FLIB_PlayerController_C_GetPlayerLevel) == 0x000020, "Wrong size on BP_FLIB_PlayerController_C_GetPlayerLevel");
static_assert(offsetof(BP_FLIB_PlayerController_C_GetPlayerLevel, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_GetPlayerLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_GetPlayerLevel, NewParam) == 0x000008, "Member 'BP_FLIB_PlayerController_C_GetPlayerLevel::NewParam' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_GetPlayerLevel, CallFunc_GetGameCharacter_ReturnValue) == 0x000010, "Member 'BP_FLIB_PlayerController_C_GetPlayerLevel::CallFunc_GetGameCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_GetPlayerLevel, CallFunc_GetLevel_ReturnValue) == 0x000018, "Member 'BP_FLIB_PlayerController_C_GetPlayerLevel::CallFunc_GetLevel_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.CalcPlayerGroundLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_FLIB_PlayerController_C_CalcPlayerGroundLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SweepDistance;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0018(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempLocation;                                      // 0x0024(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGroundLocation_ReturnValue;            // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_CalcPlayerGroundLocation");
static_assert(sizeof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation) == 0x000068, "Wrong size on BP_FLIB_PlayerController_C_CalcPlayerGroundLocation");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, InLocation) == 0x000000, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::InLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, SweepDistance) == 0x00000C, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::SweepDistance' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, __WorldContext) == 0x000010, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, OutLocation) == 0x000018, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, TempLocation) == 0x000024, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::TempLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000030, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_GetGroundLocation_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_GetGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000044, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcPlayerGroundLocation, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_CalcPlayerGroundLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.VehicleForceUnmount
// 0x0038 (0x0038 - 0x0000)
struct BP_FLIB_PlayerController_C_VehicleForceUnmount final
{
public:
	bool                                          Destroy;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           RetVehicle;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           TempVehicle;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           K2Node_DynamicCast_AsJack_Vehicle;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_VehicleForceUnmount) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_VehicleForceUnmount");
static_assert(sizeof(BP_FLIB_PlayerController_C_VehicleForceUnmount) == 0x000038, "Wrong size on BP_FLIB_PlayerController_C_VehicleForceUnmount");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, Destroy) == 0x000000, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::Destroy' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, RetVehicle) == 0x000010, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::RetVehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, TempVehicle) == 0x000018, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::TempVehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, K2Node_DynamicCast_AsJack_Vehicle) == 0x000028, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::K2Node_DynamicCast_AsJack_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_VehicleForceUnmount, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FLIB_PlayerController_C_VehicleForceUnmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.CalcNpcGroundLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_FLIB_PlayerController_C_CalcNpcGroundLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackScheduledNPC*                      NPC;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0020(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempLocation;                                      // 0x002C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGroundLocation_ReturnValue;            // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_CalcNpcGroundLocation");
static_assert(sizeof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation) == 0x000068, "Wrong size on BP_FLIB_PlayerController_C_CalcNpcGroundLocation");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, InLocation) == 0x000000, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::InLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, NPC) == 0x000010, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::NPC' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, __WorldContext) == 0x000018, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, OutLocation) == 0x000020, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, TempLocation) == 0x00002C, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::TempLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_GetGroundLocation_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_GetGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000050, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CalcNpcGroundLocation, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_CalcNpcGroundLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.PlayerNijiiroNoEdaEffect
// 0x0058 (0x0058 - 0x0000)
struct BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TempActor;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_Gimmick_C>      K2Node_DynamicCast_AsBP_IF_Gimmick;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect");
static_assert(sizeof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect) == 0x000058, "Wrong size on BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, TempActor) == 0x000008, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::TempActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, K2Node_DynamicCast_AsBP_IF_Gimmick) == 0x000040, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::K2Node_DynamicCast_AsBP_IF_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_FLIB_PlayerController_C_PlayerNijiiroNoEdaEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.StopPlayerNijiiroNoEdaEffect
// 0x0058 (0x0058 - 0x0000)
struct BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TempActor;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_Gimmick_C>      K2Node_DynamicCast_AsBP_IF_Gimmick;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect");
static_assert(sizeof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect) == 0x000058, "Wrong size on BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, TempActor) == 0x000008, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::TempActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, K2Node_DynamicCast_AsBP_IF_Gimmick) == 0x000040, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::K2Node_DynamicCast_AsBP_IF_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_FLIB_PlayerController_C_StopPlayerNijiiroNoEdaEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.RidableVehicleAllDestroy
// 0x0048 (0x0048 - 0x0000)
struct BP_FLIB_PlayerController_C_RidableVehicleAllDestroy final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackVehicle*>                   TempVehicle;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AJackVehicle*>                   CallFunc_GetRidableVehicleArray_OutVehicleArray;   // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_RidableVehicleAllDestroy");
static_assert(sizeof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy) == 0x000048, "Wrong size on BP_FLIB_PlayerController_C_RidableVehicleAllDestroy");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, TempVehicle) == 0x000008, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::TempVehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, CallFunc_GetRidableVehicleArray_OutVehicleArray) == 0x000018, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::CallFunc_GetRidableVehicleArray_OutVehicleArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_RidableVehicleAllDestroy, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_FLIB_PlayerController_C_RidableVehicleAllDestroy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SpawnFlueEmitterAnyWhereVer
// 0x0098 (0x0098 - 0x0000)
struct BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0034(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0068(0x000C)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll2;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch2;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw2;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer");
static_assert(sizeof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer) == 0x000098, "Wrong size on BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_GetSocketLocation_ReturnValue) == 0x00001C, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_GetSocketLocation_ReturnValue2) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_FindLookAtRotation_ReturnValue) == 0x000034, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_GetSocketRotation_ReturnValue) == 0x000068, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Roll2) == 0x000074, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Roll2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Pitch2) == 0x000078, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Pitch2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_BreakRotator_Yaw2) == 0x00007C, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_BreakRotator_Yaw2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000090, "Member 'BP_FLIB_PlayerController_C_SpawnFlueEmitterAnyWhereVer::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.NearVehicleSetLocation
// 0x0250 (0x0250 - 0x0000)
struct BP_FLIB_PlayerController_C_NearVehicleSetLocation final
{
public:
	class AActor*                                 SetLocationActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackVehicle*>                   TempVehicle;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         TempLength;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempPlayerLocation;                                // 0x002C(0x000C)(Edit, BlueprintVisible, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           TempVehicleActor;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           NowVehicle;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AJackVehicle*>                   CallFunc_GetRidableVehicleArray_OutVehicleArray;   // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackVehicle*                           K2Node_DynamicCast_AsJack_Vehicle;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AJackVehicle*>                   CallFunc_GetRidableVehicleArray_OutVehicleArray2;  // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGroundLocation_ReturnValue;            // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackVehicle*                           CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0190(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           CallFunc_Array_Get_Item2;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0228(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0238(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_NearVehicleSetLocation) == 0x000010, "Wrong alignment on BP_FLIB_PlayerController_C_NearVehicleSetLocation");
static_assert(sizeof(BP_FLIB_PlayerController_C_NearVehicleSetLocation) == 0x000250, "Wrong size on BP_FLIB_PlayerController_C_NearVehicleSetLocation");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, SetLocationActor) == 0x000000, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::SetLocationActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, Range) == 0x000008, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::Range' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, __WorldContext) == 0x000010, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, TempVehicle) == 0x000018, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::TempVehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, TempLength) == 0x000028, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::TempLength' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, TempPlayerLocation) == 0x00002C, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::TempPlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, TempVehicleActor) == 0x000038, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::TempVehicleActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, NowVehicle) == 0x000040, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::NowVehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetRidableVehicleArray_OutVehicleArray) == 0x000050, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetRidableVehicleArray_OutVehicleArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000068, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetJackPlayerCharacter_ReturnValue2) == 0x000070, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetJackPlayerCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, K2Node_DynamicCast_AsJack_Vehicle) == 0x000088, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::K2Node_DynamicCast_AsJack_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetRidableVehicleArray_OutVehicleArray2) == 0x000098, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetRidableVehicleArray_OutVehicleArray2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetGroundLocation_ReturnValue) == 0x000104, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetGroundLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, Temp_int_Array_Index_Variable) == 0x000110, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakVector_X) == 0x000114, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakVector_Y) == 0x000118, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_BreakVector_Z) == 0x00011C, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, Temp_int_Loop_Counter_Variable2) == 0x000120, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Add_IntInt_ReturnValue2) == 0x000130, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Array_Length_ReturnValue2) == 0x00013C, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Less_IntInt_ReturnValue2) == 0x000140, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000144, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_MakeVector_ReturnValue) == 0x00014C, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_IsValid_ReturnValue2) == 0x000158, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000190, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000218, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, Temp_int_Array_Index_Variable2) == 0x00021C, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Array_Get_Item2) == 0x000220, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000228, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_IsValid_ReturnValue3) == 0x000234, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000238, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_VSize_ReturnValue) == 0x000244, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000248, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000249, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_IsValid_ReturnValue4) == 0x00024A, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_NearVehicleSetLocation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00024B, "Member 'BP_FLIB_PlayerController_C_NearVehicleSetLocation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.ChoiceRidableVehicle
// 0x0060 (0x0060 - 0x0000)
struct BP_FLIB_PlayerController_C_ChoiceRidableVehicle final
{
public:
	EJackVehicleModelId                           VehicleModel;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RetActor;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempActor;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackVehicle*>                   JackVehicles;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AJackVehicle*>                   CallFunc_GetRidableVehicleArray_OutVehicleArray;   // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackVehicle*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_ChoiceRidableVehicle");
static_assert(sizeof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle) == 0x000060, "Wrong size on BP_FLIB_PlayerController_C_ChoiceRidableVehicle");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, VehicleModel) == 0x000000, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::VehicleModel' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, RetActor) == 0x000010, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::RetActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, TempActor) == 0x000018, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::TempActor' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, JackVehicles) == 0x000020, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::JackVehicles' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_GetRidableVehicleArray_OutVehicleArray) == 0x000030, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_GetRidableVehicleArray_OutVehicleArray' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005C, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChoiceRidableVehicle, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'BP_FLIB_PlayerController_C_ChoiceRidableVehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.ChangeControlledCharacter
// 0x0220 (0x0220 - 0x0000)
struct BP_FLIB_PlayerController_C_ChangeControlledCharacter final
{
public:
	EJackCharacter                                InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackFriendGameCharacter*>       TempMembers;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FName                                   Temp_name_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackGamePlayer*                        CallFunc_GetJackGamePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJackFriendGameCharacter*>       CallFunc_GetPartyMembers_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   Temp_name_Variable2;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable3;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable5;                               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable6;                               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable7;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable8;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable9;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable10;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable11;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable12;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable13;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable14;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable15;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable16;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable17;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable18;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable19;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable20;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable21;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable22;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable23;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable24;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable25;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable26;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable27;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable28;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable29;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable30;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable31;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable32;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable33;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable34;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable35;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable36;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable37;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable38;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable39;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable40;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable41;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable42;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable43;                              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable44;                              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable45;                              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable46;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable47;                              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable48;                              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable49;                              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable50;                              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable51;                              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable52;                              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackFriendGameCharacter*               CallFunc_Array_Get_Item;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CallFunc_GetCharacterType_ReturnValue;             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable53;                              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                Temp_byte_Variable;                                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackLDT_FriendCharacterPreset         K2Node_MakeStruct_JackLDT_FriendCharacterPreset;   // 0x0210(0x0010)(NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_ChangeControlledCharacter) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_ChangeControlledCharacter");
static_assert(sizeof(BP_FLIB_PlayerController_C_ChangeControlledCharacter) == 0x000220, "Wrong size on BP_FLIB_PlayerController_C_ChangeControlledCharacter");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, InType) == 0x000000, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::InType' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, TempMembers) == 0x000010, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::TempMembers' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable) == 0x000020, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_GetJackGamePlayer_ReturnValue) == 0x000028, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_GetJackGamePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_GetPartyMembers_ReturnValue) == 0x000030, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_GetPartyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable2) == 0x000040, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable3) == 0x000048, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable4) == 0x000050, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable5) == 0x000058, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable6) == 0x000060, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable6' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable7) == 0x000068, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable7' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable8) == 0x000070, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable8' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable9) == 0x000078, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable9' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable10) == 0x000080, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable10' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable11) == 0x000088, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable11' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable12) == 0x000090, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable12' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable13) == 0x000098, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable13' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable14) == 0x0000A0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable14' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable15) == 0x0000A8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable15' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable16) == 0x0000B0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable16' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable17) == 0x0000B8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable17' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable18) == 0x0000C0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable18' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable19) == 0x0000C8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable19' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable20) == 0x0000D0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable20' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable21) == 0x0000D8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable21' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable22) == 0x0000E0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable22' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable23) == 0x0000E8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable23' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable24) == 0x0000F0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable24' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable25) == 0x0000F8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable25' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable26) == 0x000100, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable26' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable27) == 0x000108, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable27' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable28) == 0x000110, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable28' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable29) == 0x000118, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable29' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable30) == 0x000120, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable30' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable31) == 0x000128, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable31' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable32) == 0x000130, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable32' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable33) == 0x000138, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable33' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable34) == 0x000140, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable34' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable35) == 0x000148, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable35' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable36) == 0x000150, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable36' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable37) == 0x000158, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable37' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable38) == 0x000160, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable38' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable39) == 0x000168, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable39' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable40) == 0x000170, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable40' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable41) == 0x000178, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable41' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable42) == 0x000180, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable42' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable43) == 0x000188, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable43' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable44) == 0x000190, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable44' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable45) == 0x000198, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable45' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable46) == 0x0001A0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable46' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable47) == 0x0001A8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable47' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable48) == 0x0001B0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable48' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable49) == 0x0001B8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable49' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable50) == 0x0001C0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable50' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable51) == 0x0001C8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable51' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable52) == 0x0001D0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable52' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_int_Array_Index_Variable) == 0x0001DC, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_int_Loop_Counter_Variable) == 0x0001E0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_GetCharacterType_ReturnValue) == 0x0001F0, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_GetCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0001F1, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_name_Variable53) == 0x0001F8, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_name_Variable53' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, Temp_byte_Variable) == 0x000200, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, K2Node_Select_Default) == 0x000208, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ChangeControlledCharacter, K2Node_MakeStruct_JackLDT_FriendCharacterPreset) == 0x000210, "Member 'BP_FLIB_PlayerController_C_ChangeControlledCharacter::K2Node_MakeStruct_JackLDT_FriendCharacterPreset' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.CopyCameraParam
// 0x00F0 (0x00F0 - 0x0000)
struct BP_FLIB_PlayerController_C_CopyCameraParam final
{
public:
	class ACameraActor*                           InCamera;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x0010(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerCameraFov_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_CopyCameraParam) == 0x000010, "Wrong alignment on BP_FLIB_PlayerController_C_CopyCameraParam");
static_assert(sizeof(BP_FLIB_PlayerController_C_CopyCameraParam) == 0x0000F0, "Wrong size on BP_FLIB_PlayerController_C_CopyCameraParam");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, InCamera) == 0x000000, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::InCamera' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, __WorldContext) == 0x000008, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x000010, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x00001C, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_GetPlayerCameraFov_ReturnValue) == 0x000028, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_GetPlayerCameraFov_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000060, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_CopyCameraParam, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000E8, "Member 'BP_FLIB_PlayerController_C_CopyCameraParam::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetLookAtPlayerToCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter final
{
public:
	class AJackCharacter*                         Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtEnable;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         CallFunc_GetJackPlayerCharacter_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter) == 0x000030, "Wrong size on BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, Character) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, LookAtEnable) == 0x000008, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::LookAtEnable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, __WorldContext) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, CallFunc_GetJackPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::CallFunc_GetJackPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SetLookAtPlayerToCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.SetNoRelocationCharacters
// 0x0048 (0x0048 - 0x0000)
struct BP_FLIB_PlayerController_C_SetNoRelocationCharacters final
{
public:
	TArray<EJackCharacter>                        InIDs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          Enable;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackPhotoModeManager*                  CallFunc_GetPhotoModeManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCharacter                                CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_SetNoRelocationCharacters");
static_assert(sizeof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters) == 0x000048, "Wrong size on BP_FLIB_PlayerController_C_SetNoRelocationCharacters");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, InIDs) == 0x000000, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::InIDs' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, Enable) == 0x000010, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::Enable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, __WorldContext) == 0x000018, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_GetJackGameMode_ReturnValue) == 0x000020, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_GetPhotoModeManager_ReturnValue) == 0x000030, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_GetPhotoModeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_SetNoRelocationCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_FLIB_PlayerController_C_SetNoRelocationCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FLIB_PlayerController.BP_FLIB_PlayerController_C.ResetNoRelocationCharacters
// 0x0018 (0x0018 - 0x0000)
struct BP_FLIB_PlayerController_C_ResetNoRelocationCharacters final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackGameMode*                          CallFunc_GetJackGameMode_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJackPhotoModeManager*                  CallFunc_GetPhotoModeManager_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FLIB_PlayerController_C_ResetNoRelocationCharacters) == 0x000008, "Wrong alignment on BP_FLIB_PlayerController_C_ResetNoRelocationCharacters");
static_assert(sizeof(BP_FLIB_PlayerController_C_ResetNoRelocationCharacters) == 0x000018, "Wrong size on BP_FLIB_PlayerController_C_ResetNoRelocationCharacters");
static_assert(offsetof(BP_FLIB_PlayerController_C_ResetNoRelocationCharacters, __WorldContext) == 0x000000, "Member 'BP_FLIB_PlayerController_C_ResetNoRelocationCharacters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ResetNoRelocationCharacters, CallFunc_GetJackGameMode_ReturnValue) == 0x000008, "Member 'BP_FLIB_PlayerController_C_ResetNoRelocationCharacters::CallFunc_GetJackGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FLIB_PlayerController_C_ResetNoRelocationCharacters, CallFunc_GetPhotoModeManager_ReturnValue) == 0x000010, "Member 'BP_FLIB_PlayerController_C_ResetNoRelocationCharacters::CallFunc_GetPhotoModeManager_ReturnValue' has a wrong offset!");

}


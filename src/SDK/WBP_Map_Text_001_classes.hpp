#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Map_Text_001

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JackGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Map_Text_001.WBP_Map_Text_001_C
// 0x0028 (0x0450 - 0x0428)
class UWBP_Map_Text_001_C final : public UJackUMGMapTextImageItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0428(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 ImagePanel;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             ImageTexture;                                      // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImageAngle;                                        // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             TranceparentIcon;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Map_Text_001(int32 EntryPoint);
	void UpdateItemSize(const struct FVector2D& Size);
	void Construct();
	void SetRotateMaterialTexture(class UTexture2D* Texture);
	void SetRotateMaterialAngle(float Angle);

	class UTexture2D* GetImageTexture() const;
	float GetAngle() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Map_Text_001_C">();
	}
	static class UWBP_Map_Text_001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Map_Text_001_C>();
	}
};
static_assert(alignof(UWBP_Map_Text_001_C) == 0x000008, "Wrong alignment on UWBP_Map_Text_001_C");
static_assert(sizeof(UWBP_Map_Text_001_C) == 0x000450, "Wrong size on UWBP_Map_Text_001_C");
static_assert(offsetof(UWBP_Map_Text_001_C, UberGraphFrame) == 0x000428, "Member 'UWBP_Map_Text_001_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Map_Text_001_C, ImagePanel) == 0x000430, "Member 'UWBP_Map_Text_001_C::ImagePanel' has a wrong offset!");
static_assert(offsetof(UWBP_Map_Text_001_C, ImageTexture) == 0x000438, "Member 'UWBP_Map_Text_001_C::ImageTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Map_Text_001_C, ImageAngle) == 0x000440, "Member 'UWBP_Map_Text_001_C::ImageAngle' has a wrong offset!");
static_assert(offsetof(UWBP_Map_Text_001_C, TranceparentIcon) == 0x000448, "Member 'UWBP_Map_Text_001_C::TranceparentIcon' has a wrong offset!");

}


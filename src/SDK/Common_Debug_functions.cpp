#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Common_Debug

#include "Basic.hpp"

#include "Common_Debug_classes.hpp"
#include "Common_Debug_parameters.hpp"


namespace SDK
{

// Function Common_Debug.Common_Debug_C.ExecuteUbergraph_Common_Debug
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::ExecuteUbergraph_Common_Debug(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ExecuteUbergraph_Common_Debug");

	Params::Common_Debug_C_ExecuteUbergraph_Common_Debug Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CustomEvent_2
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CustomEvent_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CustomEvent_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CustomEvent_3
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CustomEvent_3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CustomEvent_3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DisplayStates
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DisplayStates(const class FString& String, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DisplayStates");

	Params::Common_Debug_C_DisplayStates Parms{};

	Parms.String = std::move(String);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.PlayMe
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::PlayMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "PlayMe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.HiddenMapStartIcon
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::HiddenMapStartIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "HiddenMapStartIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.KesinArrow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::KesinArrow(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "KesinArrow");

	Params::Common_Debug_C_KesinArrow Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.AddDebugMenuDeployChange
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::AddDebugMenuDeployChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "AddDebugMenuDeployChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapJumpBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::MapJumpBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.TextRenderVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::TextRenderVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "TextRenderVisible");

	Params::Common_Debug_C_TextRenderVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetDebugWeather
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackWorldWeather                       SetWeather                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetDebugWeather(EJackWorldWeather SetWeather)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetDebugWeather");

	Params::Common_Debug_C_SetDebugWeather Parms{};

	Parms.SetWeather = SetWeather;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACommon_Debug_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ReceiveTick");

	Params::Common_Debug_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetForcePLJump
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetForcePLJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetForcePLJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.Skip2ndSetTimeProc
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::Skip2ndSetTimeProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "Skip2ndSetTimeProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetMurabitoCoordinate
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetMurabitoCoordinate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetMurabitoCoordinate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugStabilizePose
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugStabilizePose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugStabilizePose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugMapJumpMenuFromPL_DebugStart
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugMapJumpMenuFromPL_DebugStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugMapJumpMenuFromPL_DebugStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugUso
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugUso()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugUso");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugSetControlledPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EJackCharacter                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           NoMapJump                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugSetControlledPlayer(EJackCharacter InType, const class FString& NoMapJump)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugSetControlledPlayer");

	Params::Common_Debug_C_DebugSetControlledPlayer Parms{};

	Parms.InType = InType;
	Parms.NoMapJump = std::move(NoMapJump);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetPafuPafuRandom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Random                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetPafuPafuRandom(const class FString& Random)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetPafuPafuRandom");

	Params::Common_Debug_C_SetPafuPafuRandom Parms{};

	Parms.Random = std::move(Random);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.S020AllMissionClear
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::S020AllMissionClear(const class FString& Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "S020AllMissionClear");

	Params::Common_Debug_C_S020AllMissionClear Parms{};

	Parms.Flag = std::move(Flag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugActorClassList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Value1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Value2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugActorClassList(const class FString& Value1, const class FString& Value2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugActorClassList");

	Params::Common_Debug_C_DebugActorClassList Parms{};

	Parms.Value1 = std::move(Value1);
	Parms.Value2 = std::move(Value2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugActorDestroyClass
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugActorDestroyClass(class UClass* ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugActorDestroyClass");

	Params::Common_Debug_C_DebugActorDestroyClass Parms{};

	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugPrintActorDisplayName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugPrintActorDisplayName(class UClass* ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugPrintActorDisplayName");

	Params::Common_Debug_C_DebugPrintActorDisplayName Parms{};

	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugActorDestroy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DisplayName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugActorDestroy(const class FString& DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugActorDestroy");

	Params::Common_Debug_C_DebugActorDestroy Parms{};

	Parms.DisplayName = std::move(DisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.ClearTimePauseMax
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ClearTimePauseMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ClearTimePauseMax");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugGetAchievement
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugGetAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugGetAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.ForceReturnTitle
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ForceReturnTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ForceReturnTitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetStreamingCheckStatus
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetStreamingCheckStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetStreamingCheckStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CheckVisibleOff
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CheckVisibleOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CheckVisibleOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CheckStreamingOff
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CheckStreamingOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CheckStreamingOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DispClearedName
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DispClearedName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DispClearedName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetClearedName
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetClearedName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetClearedName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugDebugOff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CommonDebugOff                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::DebugDebugOff(bool CommonDebugOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugDebugOff");

	Params::Common_Debug_C_DebugDebugOff Parms{};

	Parms.CommonDebugOff = CommonDebugOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DispSkyBaseInfo
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DispSkyBaseInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DispSkyBaseInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugSibari
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugSibari()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugSibari");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugWeatherCompEnable
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugWeatherCompEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugWeatherCompEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugAllDoorClose
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugAllDoorClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugAllDoorClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StartCutsceneBeforeLoad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::StartCutsceneBeforeLoad(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StartCutsceneBeforeLoad");

	Params::Common_Debug_C_StartCutsceneBeforeLoad Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetAutoCameraCollision
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetAutoCameraCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetAutoCameraCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.ForceAutoSave
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ForceAutoSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ForceAutoSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.RenkeiTestSettings
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::RenkeiTestSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "RenkeiTestSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.RunProcessFriendJoinC010
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::RunProcessFriendJoinC010()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "RunProcessFriendJoinC010");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.RunProcessBackingToThePast
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::RunProcessBackingToThePast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "RunProcessBackingToThePast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetEnvQuality
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LOD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetEnvQuality(int32 LOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetEnvQuality");

	Params::Common_Debug_C_SetEnvQuality Parms{};

	Parms.LOD = LOD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.ResetPlayerCoordinateEvent
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ResetPlayerCoordinateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ResetPlayerCoordinateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugPlayerCoordinateEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CostumeID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugPlayerCoordinateEvent(int32 CostumeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugPlayerCoordinateEvent");

	Params::Common_Debug_C_DebugPlayerCoordinateEvent Parms{};

	Parms.CostumeID = CostumeID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.HoukaiToClearSky
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::HoukaiToClearSky()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "HoukaiToClearSky");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugFadeReset
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugFadeReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugFadeReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StreamingEditFullLoad
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::StreamingEditFullLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StreamingEditFullLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.NpcJump
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             UNID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::NpcJump(class FName UNID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "NpcJump");

	Params::Common_Debug_C_NpcJump Parms{};

	Parms.UNID = UNID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugSenaShortHair
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugSenaShortHair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugSenaShortHair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.TalkEscape
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::TalkEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "TalkEscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StreamingEdit
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::StreamingEdit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StreamingEdit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CsFriendCheck
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Scenario                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CsFriendCheck(const class FString& Scenario)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CsFriendCheck");

	Params::Common_Debug_C_CsFriendCheck Parms{};

	Parms.Scenario = std::move(Scenario);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.OnFinishLoadAsync_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackSaveLoadResult                     SaveLoadResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::OnFinishLoadAsync_Event_0(int32 SlotIndex, EJackSaveLoadResult SaveLoadResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "OnFinishLoadAsync_Event_0");

	Params::Common_Debug_C_OnFinishLoadAsync_Event_0 Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.SaveLoadResult = SaveLoadResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.ReturnToAutoSave
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ReturnToAutoSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ReturnToAutoSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StaticMeshCollisionAutoCheck
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::StaticMeshCollisionAutoCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StaticMeshCollisionAutoCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.LightBuildLevelAutoCheck
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::LightBuildLevelAutoCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "LightBuildLevelAutoCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.BatchCsStart
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::BatchCsStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "BatchCsStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.BatchCsStartURL
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TextURL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::BatchCsStartURL(const class FString& TextURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "BatchCsStartURL");

	Params::Common_Debug_C_BatchCsStartURL Parms{};

	Parms.TextURL = std::move(TextURL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.BatchCsPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::BatchCsPlay(const class FString& CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "BatchCsPlay");

	Params::Common_Debug_C_BatchCsPlay Parms{};

	Parms.CSID = std::move(CSID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.BatchCsFirst
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::BatchCsFirst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "BatchCsFirst");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.BatchCsEndLoop
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::BatchCsEndLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "BatchCsEndLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugRescureJump
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugRescureJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugRescureJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugCSPlay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CutsceneLevelName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugCSPlay(class FName CutsceneLevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSPlay");

	Params::Common_Debug_C_DebugCSPlay Parms{};

	Parms.CutsceneLevelName = CutsceneLevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugMapJumpNear
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugMapJumpNear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugMapJumpNear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugRescue
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugRescue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugRescue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugFullReload
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapStartTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugFullReload(class FName MapStartTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugFullReload");

	Params::Common_Debug_C_DebugFullReload Parms{};

	Parms.MapStartTag = MapStartTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugFullLoad
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapStartTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugFullLoad(class FName MapStartTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugFullLoad");

	Params::Common_Debug_C_DebugFullLoad Parms{};

	Parms.MapStartTag = MapStartTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugScenarioSettingForPerformanceTest
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugScenarioSettingForPerformanceTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugScenarioSettingForPerformanceTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugMapJump
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MapStartTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugMapJump(class FName MapStartTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugMapJump");

	Params::Common_Debug_C_DebugMapJump Parms{};

	Parms.MapStartTag = MapStartTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugSetRestartPoint
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RestartPointID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugSetRestartPoint(class FName RestartPointID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugSetRestartPoint");

	Params::Common_Debug_C_DebugSetRestartPoint Parms{};

	Parms.RestartPointID = RestartPointID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.AddDebugMenuCutViewer
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::AddDebugMenuCutViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "AddDebugMenuCutViewer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugCSViewer
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugCSViewer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSViewer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugMapJumpMenu
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugMapJumpMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugMapJumpMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugCSMenu_Old
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugCSMenu_Old()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSMenu_Old");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugCSMenu
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugCSMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugDestoryMonsterPop
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugDestoryMonsterPop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugDestoryMonsterPop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.AddDebugArrow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::AddDebugArrow(class UClass* ActorClass, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "AddDebugArrow");

	Params::Common_Debug_C_AddDebugArrow Parms{};

	Parms.ActorClass = ActorClass;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugDispItemBox
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugDispItemBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugDispItemBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugTimeSkip
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugTimeSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugTimeSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugTimeSkipSuper
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::DebugTimeSkipSuper(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugTimeSkipSuper");

	Params::Common_Debug_C_DebugTimeSkipSuper Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugAddTime
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugAddTime(int32 Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugAddTime");

	Params::Common_Debug_C_DebugAddTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugCSSkip
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugCSSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugMapJumpEnable
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugMapJumpEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugMapJumpEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugCSHiddenOff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugCSHiddenOff(const class FString& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSHiddenOff");

	Params::Common_Debug_C_DebugCSHiddenOff Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugCSHiddenOn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugCSHiddenOn(const class FString& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSHiddenOn");

	Params::Common_Debug_C_DebugCSHiddenOn Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugPartyHiddenControl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Hidden                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::DebugPartyHiddenControl(const class FString& Param, bool Hidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugPartyHiddenControl");

	Params::Common_Debug_C_DebugPartyHiddenControl Parms{};

	Parms.Param = std::move(Param);
	Parms.Hidden = Hidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugCSCoordinate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugCSCoordinate(const class FString& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSCoordinate");

	Params::Common_Debug_C_DebugCSCoordinate Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugCSWeapon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugCSWeapon(const class FString& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugCSWeapon");

	Params::Common_Debug_C_DebugCSWeapon Parms{};

	Parms.Param = std::move(Param);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugEncount
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugEncount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugEncount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DebugUnvisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugUnvisible(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugUnvisible");

	Params::Common_Debug_C_DebugUnvisible Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugVisible(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugVisible");

	Params::Common_Debug_C_DebugVisible Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugNpcAllSetCoordinate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Coordinate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugNpcAllSetCoordinate(class FName Coordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugNpcAllSetCoordinate");

	Params::Common_Debug_C_DebugNpcAllSetCoordinate Parms{};

	Parms.Coordinate = Coordinate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugNpcAllRespawnByClasss
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugNpcAllRespawnByClasss(class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugNpcAllRespawnByClasss");

	Params::Common_Debug_C_DebugNpcAllRespawnByClasss Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugUnload
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugUnload(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugUnload");

	Params::Common_Debug_C_DebugUnload Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugLoad
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::DebugLoad(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugLoad");

	Params::Common_Debug_C_DebugLoad Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetMapJumpIgnorePL_DebugStart
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetMapJumpIgnorePL_DebugStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetMapJumpIgnorePL_DebugStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StopMapJumpPerformanceTest
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::StopMapJumpPerformanceTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StopMapJumpPerformanceTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetMapJumpLogWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapJumpLogWait                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetMapJumpLogWait(int32 MapJumpLogWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetMapJumpLogWait");

	Params::Common_Debug_C_SetMapJumpLogWait Parms{};

	Parms.MapJumpLogWait = MapJumpLogWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTestRenzokuNCC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MapStartName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::MapJumpPerformanceTestRenzokuNCC(const class FString& MapStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTestRenzokuNCC");

	Params::Common_Debug_C_MapJumpPerformanceTestRenzokuNCC Parms{};

	Parms.MapStartName = std::move(MapStartName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTestRenzoku
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MapStartName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::MapJumpPerformanceTestRenzoku(const class FString& MapStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTestRenzoku");

	Params::Common_Debug_C_MapJumpPerformanceTestRenzoku Parms{};

	Parms.MapStartName = std::move(MapStartName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.DebugAutoPlayBattle
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DebugAutoPlayBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DebugAutoPlayBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapChangeFinishDelegate_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurrentMapStart                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CurrentMapID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PrevMapID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::MapChangeFinishDelegate_Event(class FName CurrentMapStart, class FName CurrentMapID, class FName PrevMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapChangeFinishDelegate_Event");

	Params::Common_Debug_C_MapChangeFinishDelegate_Event Parms{};

	Parms.CurrentMapStart = CurrentMapStart;
	Parms.CurrentMapID = CurrentMapID;
	Parms.PrevMapID = PrevMapID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetMapJumpSS
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetMapJumpSS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetMapJumpSS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTestInitialize
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::MapJumpPerformanceTestInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTestInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTestScenario
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MapStartName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::MapJumpPerformanceTestScenario(const class FString& MapStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTestScenario");

	Params::Common_Debug_C_MapJumpPerformanceTestScenario Parms{};

	Parms.MapStartName = std::move(MapStartName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetScenarioProgress
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetScenarioProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetScenarioProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetPreloadWait
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WaitTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetPreloadWait(int32 WaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetPreloadWait");

	Params::Common_Debug_C_SetPreloadWait Parms{};

	Parms.WaitTime = WaitTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTestCore
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::MapJumpPerformanceTestCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTestCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapJumpPerformanceTest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MapStartName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::MapJumpPerformanceTest(const class FString& MapStartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpPerformanceTest");

	Params::Common_Debug_C_MapJumpPerformanceTest Parms{};

	Parms.MapStartName = std::move(MapStartName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CutsceneTextureTestOmoideSection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Section                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CutsceneTextureTestOmoideSection(const class FString& Section)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutsceneTextureTestOmoideSection");

	Params::Common_Debug_C_CutsceneTextureTestOmoideSection Parms{};

	Parms.Section = std::move(Section);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetCutscenePerformanceDispPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DispPosition                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetCutscenePerformanceDispPosition(const class FString& DispPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetCutscenePerformanceDispPosition");

	Params::Common_Debug_C_SetCutscenePerformanceDispPosition Parms{};

	Parms.DispPosition = std::move(DispPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CutscenePerformanceTestSection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Section                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CutscenePerformanceTestSection(const class FString& Section)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutscenePerformanceTestSection");

	Params::Common_Debug_C_CutscenePerformanceTestSection Parms{};

	Parms.Section = std::move(Section);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetCutscenePerformanceLoopCSID
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetCutscenePerformanceLoopCSID(const class FString& CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetCutscenePerformanceLoopCSID");

	Params::Common_Debug_C_SetCutscenePerformanceLoopCSID Parms{};

	Parms.CSID = std::move(CSID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CutsceneTextureTestOmoide
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CutSceneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CutsceneTextureTestOmoide(const class FString& CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutsceneTextureTestOmoide");

	Params::Common_Debug_C_CutsceneTextureTestOmoide Parms{};

	Parms.CutSceneID = std::move(CutSceneID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CutscenePerformanceTestOmoide
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CutSceneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CutscenePerformanceTestOmoide(const class FString& CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutscenePerformanceTestOmoide");

	Params::Common_Debug_C_CutscenePerformanceTestOmoide Parms{};

	Parms.CutSceneID = std::move(CutSceneID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.CutscenePerformanceTest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::CutscenePerformanceTest(const class FString& Start, const class FString& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutscenePerformanceTest");

	Params::Common_Debug_C_CutscenePerformanceTest Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.SetForceSkipTimeForCSPerformanceTest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ForceSkipTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::SetForceSkipTimeForCSPerformanceTest(int32 ForceSkipTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetForceSkipTimeForCSPerformanceTest");

	Params::Common_Debug_C_SetForceSkipTimeForCSPerformanceTest Parms{};

	Parms.ForceSkipTime = ForceSkipTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.ForceOmoideClose
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::ForceOmoideClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "ForceOmoideClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.CutscenePerformanceTestCore
// (BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::CutscenePerformanceTestCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "CutscenePerformanceTestCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.MapJumpEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::MapJumpEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MapJumpEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.StartCutSceneCharacterSettingAfter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::StartCutSceneCharacterSettingAfter(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StartCutSceneCharacterSettingAfter");

	Params::Common_Debug_C_StartCutSceneCharacterSettingAfter Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.EndCutSceneFadInBefore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::EndCutSceneFadInBefore(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "EndCutSceneFadInBefore");

	Params::Common_Debug_C_EndCutSceneFadInBefore Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.StartCutSceneFadeOutAfter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::StartCutSceneFadeOutAfter(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StartCutSceneFadeOutAfter");

	Params::Common_Debug_C_StartCutSceneFadeOutAfter Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.EndCutSceneBeforeUnload
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::EndCutSceneBeforeUnload(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "EndCutSceneBeforeUnload");

	Params::Common_Debug_C_EndCutSceneBeforeUnload Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.EndCutScene
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::EndCutScene(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "EndCutScene");

	Params::Common_Debug_C_EndCutScene Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.StartCutScene
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::StartCutScene(class FName CSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "StartCutScene");

	Params::Common_Debug_C_StartCutScene Parms{};

	Parms.CSID = CSID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_NumPadSix_K2Node_InputKeyEvent_59
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_59(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_NumPadSix_K2Node_InputKeyEvent_59");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_59 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Six_K2Node_InputKeyEvent_60
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_60(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Six_K2Node_InputKeyEvent_60");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_60 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_PageUp_K2Node_InputKeyEvent_61
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_PageUp_K2Node_InputKeyEvent_61(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_PageUp_K2Node_InputKeyEvent_61");

	Params::Common_Debug_C_InpActEvt_Ctrl_PageUp_K2Node_InputKeyEvent_61 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Multiply_K2Node_InputKeyEvent_62
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Multiply_K2Node_InputKeyEvent_62(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Multiply_K2Node_InputKeyEvent_62");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Multiply_K2Node_InputKeyEvent_62 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt+Shift_NumPadNine_K2Node_InputKeyEvent_63
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAltPlusShift_NumPadNine_K2Node_InputKeyEvent_63(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt+Shift_NumPadNine_K2Node_InputKeyEvent_63");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAltPlusShift_NumPadNine_K2Node_InputKeyEvent_63 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt+Shift_Nine_K2Node_InputKeyEvent_64
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAltPlusShift_Nine_K2Node_InputKeyEvent_64(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt+Shift_Nine_K2Node_InputKeyEvent_64");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAltPlusShift_Nine_K2Node_InputKeyEvent_64 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Decimal_K2Node_InputKeyEvent_65
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Decimal_K2Node_InputKeyEvent_65(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Decimal_K2Node_InputKeyEvent_65");

	Params::Common_Debug_C_InpActEvt_Ctrl_Decimal_K2Node_InputKeyEvent_65 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadTwo_K2Node_InputKeyEvent_66
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadTwo_K2Node_InputKeyEvent_66(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadTwo_K2Node_InputKeyEvent_66");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadTwo_K2Node_InputKeyEvent_66 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Two_K2Node_InputKeyEvent_67
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Two_K2Node_InputKeyEvent_67(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Two_K2Node_InputKeyEvent_67");

	Params::Common_Debug_C_InpActEvt_Ctrl_Two_K2Node_InputKeyEvent_67 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadNine_K2Node_InputKeyEvent_68
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadNine_K2Node_InputKeyEvent_68(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadNine_K2Node_InputKeyEvent_68");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadNine_K2Node_InputKeyEvent_68 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Nine_K2Node_InputKeyEvent_69
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Nine_K2Node_InputKeyEvent_69(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Nine_K2Node_InputKeyEvent_69");

	Params::Common_Debug_C_InpActEvt_Ctrl_Nine_K2Node_InputKeyEvent_69 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_NumPadZero_K2Node_InputKeyEvent_70
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_NumPadZero_K2Node_InputKeyEvent_70(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_NumPadZero_K2Node_InputKeyEvent_70");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_NumPadZero_K2Node_InputKeyEvent_70 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_Zero_K2Node_InputKeyEvent_71
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_Zero_K2Node_InputKeyEvent_71(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_Zero_K2Node_InputKeyEvent_71");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_Zero_K2Node_InputKeyEvent_71 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_NumPadNine_K2Node_InputKeyEvent_72
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_NumPadNine_K2Node_InputKeyEvent_72(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_NumPadNine_K2Node_InputKeyEvent_72");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_NumPadNine_K2Node_InputKeyEvent_72 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_NumPadEight_K2Node_InputKeyEvent_73
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_NumPadEight_K2Node_InputKeyEvent_73(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_NumPadEight_K2Node_InputKeyEvent_73");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_NumPadEight_K2Node_InputKeyEvent_73 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_Nine_K2Node_InputKeyEvent_74
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_Nine_K2Node_InputKeyEvent_74(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_Nine_K2Node_InputKeyEvent_74");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_Nine_K2Node_InputKeyEvent_74 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_Eight_K2Node_InputKeyEvent_75
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_Eight_K2Node_InputKeyEvent_75(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_Eight_K2Node_InputKeyEvent_75");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_Eight_K2Node_InputKeyEvent_75 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Multiply_K2Node_InputKeyEvent_76
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Multiply_K2Node_InputKeyEvent_76(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Multiply_K2Node_InputKeyEvent_76");

	Params::Common_Debug_C_InpActEvt_Ctrl_Multiply_K2Node_InputKeyEvent_76 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_NumPadSix_K2Node_InputKeyEvent_77
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_77(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_NumPadSix_K2Node_InputKeyEvent_77");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_NumPadSix_K2Node_InputKeyEvent_77 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Six_K2Node_InputKeyEvent_78
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_78(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Six_K2Node_InputKeyEvent_78");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Six_K2Node_InputKeyEvent_78 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_NumPadTwo_K2Node_InputKeyEvent_79
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_NumPadTwo_K2Node_InputKeyEvent_79(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_NumPadTwo_K2Node_InputKeyEvent_79");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_NumPadTwo_K2Node_InputKeyEvent_79 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Two_K2Node_InputKeyEvent_80
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Two_K2Node_InputKeyEvent_80(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Two_K2Node_InputKeyEvent_80");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Two_K2Node_InputKeyEvent_80 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Slash_K2Node_InputKeyEvent_81
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Slash_K2Node_InputKeyEvent_81(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Slash_K2Node_InputKeyEvent_81");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Slash_K2Node_InputKeyEvent_81 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Divide_K2Node_InputKeyEvent_82
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Divide_K2Node_InputKeyEvent_82(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Divide_K2Node_InputKeyEvent_82");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Divide_K2Node_InputKeyEvent_82 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_NumPadOne_K2Node_InputKeyEvent_83
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_NumPadOne_K2Node_InputKeyEvent_83(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_NumPadOne_K2Node_InputKeyEvent_83");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_NumPadOne_K2Node_InputKeyEvent_83 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_One_K2Node_InputKeyEvent_84
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_One_K2Node_InputKeyEvent_84(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_One_K2Node_InputKeyEvent_84");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_One_K2Node_InputKeyEvent_84 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_Seven_K2Node_InputKeyEvent_85
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_Seven_K2Node_InputKeyEvent_85(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_Seven_K2Node_InputKeyEvent_85");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_Seven_K2Node_InputKeyEvent_85 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Alt_NumPadSeven_K2Node_InputKeyEvent_86
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusAlt_NumPadSeven_K2Node_InputKeyEvent_86(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Alt_NumPadSeven_K2Node_InputKeyEvent_86");

	Params::Common_Debug_C_InpActEvt_CtrlPlusAlt_NumPadSeven_K2Node_InputKeyEvent_86 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Eight_K2Node_InputKeyEvent_87
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Eight_K2Node_InputKeyEvent_87(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Eight_K2Node_InputKeyEvent_87");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Eight_K2Node_InputKeyEvent_87 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Seven_K2Node_InputKeyEvent_88
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Seven_K2Node_InputKeyEvent_88(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Seven_K2Node_InputKeyEvent_88");

	Params::Common_Debug_C_InpActEvt_Ctrl_Seven_K2Node_InputKeyEvent_88 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadSeven_K2Node_InputKeyEvent_89
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadSeven_K2Node_InputKeyEvent_89(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadSeven_K2Node_InputKeyEvent_89");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadSeven_K2Node_InputKeyEvent_89 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadOne_K2Node_InputKeyEvent_90
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadOne_K2Node_InputKeyEvent_90(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadOne_K2Node_InputKeyEvent_90");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadOne_K2Node_InputKeyEvent_90 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_One_K2Node_InputKeyEvent_91
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_One_K2Node_InputKeyEvent_91(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_One_K2Node_InputKeyEvent_91");

	Params::Common_Debug_C_InpActEvt_Ctrl_One_K2Node_InputKeyEvent_91 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadThree_K2Node_InputKeyEvent_92
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadThree_K2Node_InputKeyEvent_92(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadThree_K2Node_InputKeyEvent_92");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadThree_K2Node_InputKeyEvent_92 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Three_K2Node_InputKeyEvent_93
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Three_K2Node_InputKeyEvent_93(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Three_K2Node_InputKeyEvent_93");

	Params::Common_Debug_C_InpActEvt_Ctrl_Three_K2Node_InputKeyEvent_93 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Four_K2Node_InputKeyEvent_94
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Four_K2Node_InputKeyEvent_94(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Four_K2Node_InputKeyEvent_94");

	Params::Common_Debug_C_InpActEvt_Ctrl_Four_K2Node_InputKeyEvent_94 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadFour_K2Node_InputKeyEvent_95
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadFour_K2Node_InputKeyEvent_95(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadFour_K2Node_InputKeyEvent_95");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadFour_K2Node_InputKeyEvent_95 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Five_K2Node_InputKeyEvent_96
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Five_K2Node_InputKeyEvent_96(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Five_K2Node_InputKeyEvent_96");

	Params::Common_Debug_C_InpActEvt_Ctrl_Five_K2Node_InputKeyEvent_96 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadFive_K2Node_InputKeyEvent_97
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadFive_K2Node_InputKeyEvent_97(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadFive_K2Node_InputKeyEvent_97");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadFive_K2Node_InputKeyEvent_97 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadSix_K2Node_InputKeyEvent_98
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadSix_K2Node_InputKeyEvent_98(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadSix_K2Node_InputKeyEvent_98");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadSix_K2Node_InputKeyEvent_98 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Six_K2Node_InputKeyEvent_99
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Six_K2Node_InputKeyEvent_99(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Six_K2Node_InputKeyEvent_99");

	Params::Common_Debug_C_InpActEvt_Ctrl_Six_K2Node_InputKeyEvent_99 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Seven_K2Node_InputKeyEvent_100
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Seven_K2Node_InputKeyEvent_100(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Seven_K2Node_InputKeyEvent_100");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Seven_K2Node_InputKeyEvent_100 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_NumPadSeven_K2Node_InputKeyEvent_101
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_NumPadSeven_K2Node_InputKeyEvent_101(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_NumPadSeven_K2Node_InputKeyEvent_101");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_NumPadSeven_K2Node_InputKeyEvent_101 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadEight_K2Node_InputKeyEvent_102
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadEight_K2Node_InputKeyEvent_102(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadEight_K2Node_InputKeyEvent_102");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadEight_K2Node_InputKeyEvent_102 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Eight_K2Node_InputKeyEvent_103
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Eight_K2Node_InputKeyEvent_103(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Eight_K2Node_InputKeyEvent_103");

	Params::Common_Debug_C_InpActEvt_Ctrl_Eight_K2Node_InputKeyEvent_103 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Period_K2Node_InputKeyEvent_104
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Period_K2Node_InputKeyEvent_104(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Period_K2Node_InputKeyEvent_104");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Period_K2Node_InputKeyEvent_104 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl+Shift_Add_K2Node_InputKeyEvent_105
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_CtrlPlusShift_Add_K2Node_InputKeyEvent_105(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl+Shift_Add_K2Node_InputKeyEvent_105");

	Params::Common_Debug_C_InpActEvt_CtrlPlusShift_Add_K2Node_InputKeyEvent_105 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_106
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_106(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_106");

	Params::Common_Debug_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_106 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Zero_K2Node_InputKeyEvent_107
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Zero_K2Node_InputKeyEvent_107(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Zero_K2Node_InputKeyEvent_107");

	Params::Common_Debug_C_InpActEvt_Ctrl_Zero_K2Node_InputKeyEvent_107 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_H_K2Node_InputKeyEvent_108
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_H_K2Node_InputKeyEvent_108(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_H_K2Node_InputKeyEvent_108");

	Params::Common_Debug_C_InpActEvt_Ctrl_H_K2Node_InputKeyEvent_108 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Slash_K2Node_InputKeyEvent_109
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Slash_K2Node_InputKeyEvent_109(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Slash_K2Node_InputKeyEvent_109");

	Params::Common_Debug_C_InpActEvt_Ctrl_Slash_K2Node_InputKeyEvent_109 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Divide_K2Node_InputKeyEvent_110
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Divide_K2Node_InputKeyEvent_110(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Divide_K2Node_InputKeyEvent_110");

	Params::Common_Debug_C_InpActEvt_Ctrl_Divide_K2Node_InputKeyEvent_110 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Period_K2Node_InputKeyEvent_111
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Period_K2Node_InputKeyEvent_111(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Period_K2Node_InputKeyEvent_111");

	Params::Common_Debug_C_InpActEvt_Ctrl_Period_K2Node_InputKeyEvent_111 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_112
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_112(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_112");

	Params::Common_Debug_C_InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_112 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_113
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_113(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_113");

	Params::Common_Debug_C_InpActEvt_Ctrl_Comma_K2Node_InputKeyEvent_113 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Add_K2Node_InputKeyEvent_114
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Add_K2Node_InputKeyEvent_114(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Add_K2Node_InputKeyEvent_114");

	Params::Common_Debug_C_InpActEvt_Ctrl_Add_K2Node_InputKeyEvent_114 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_115
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_115(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_115");

	Params::Common_Debug_C_InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_115 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_116
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_116(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_116");

	Params::Common_Debug_C_InpActEvt_Ctrl_Subtract_K2Node_InputKeyEvent_116 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.InpActEvt_Ctrl_B_K2Node_InputKeyEvent_117
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACommon_Debug_C::InpActEvt_Ctrl_B_K2Node_InputKeyEvent_117(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "InpActEvt_Ctrl_B_K2Node_InputKeyEvent_117");

	Params::Common_Debug_C_InpActEvt_Ctrl_B_K2Node_InputKeyEvent_117 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.MakeStreamingData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InData                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FName>                     NewParam                                               (Parm, OutParm, ZeroConstructor)

void ACommon_Debug_C::MakeStreamingData(const class FString& InData, TArray<class FName>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "MakeStreamingData");

	Params::Common_Debug_C_MakeStreamingData Parms{};

	Parms.InData = std::move(InData);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function Common_Debug.Common_Debug_C.PartyID to CharacterEnum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EJackCharacter                          Character                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CharacterInt                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACommon_Debug_C::PartyID_to_CharacterEnum(const class FString& ID, EJackCharacter* Character, int32* CharacterInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "PartyID to CharacterEnum");

	Params::Common_Debug_C_PartyID_to_CharacterEnum Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;

	if (CharacterInt != nullptr)
		*CharacterInt = Parms.CharacterInt;
}


// Function Common_Debug.Common_Debug_C.GetCanEquipTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             WeaponID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<bool>                            CanEquip                                               (Parm, OutParm, ZeroConstructor)

void ACommon_Debug_C::GetCanEquipTable(class FName WeaponID, TArray<bool>* CanEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "GetCanEquipTable");

	Params::Common_Debug_C_GetCanEquipTable Parms{};

	Parms.WeaponID = WeaponID;

	UObject::ProcessEvent(Func, &Parms);

	if (CanEquip != nullptr)
		*CanEquip = std::move(Parms.CanEquip);
}


// Function Common_Debug.Common_Debug_C.GetNearMapStart
// (Public, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::GetNearMapStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "GetNearMapStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SearchNextMapstartByCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MapIDCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NextMapStart                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           BeforeMapStart                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::SearchNextMapstartByCategory(const class FString& MapIDCategory, class FString* NextMapStart, class FString* BeforeMapStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SearchNextMapstartByCategory");

	Params::Common_Debug_C_SearchNextMapstartByCategory Parms{};

	Parms.MapIDCategory = std::move(MapIDCategory);

	UObject::ProcessEvent(Func, &Parms);

	if (NextMapStart != nullptr)
		*NextMapStart = std::move(Parms.NextMapStart);

	if (BeforeMapStart != nullptr)
		*BeforeMapStart = std::move(Parms.BeforeMapStart);
}


// Function Common_Debug.Common_Debug_C.GetUniueMapStartByStreamingStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   UniqueMapStart                                         (Parm, OutParm, ZeroConstructor)

void ACommon_Debug_C::GetUniueMapStartByStreamingStatus(TArray<class FString>* UniqueMapStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "GetUniueMapStartByStreamingStatus");

	Params::Common_Debug_C_GetUniueMapStartByStreamingStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueMapStart != nullptr)
		*UniqueMapStart = std::move(Parms.UniqueMapStart);
}


// Function Common_Debug.Common_Debug_C.SearchNextMapStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SearchMapStart                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NextMapStart                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::SearchNextMapStart(const class FString& SearchMapStart, class FString* NextMapStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SearchNextMapStart");

	Params::Common_Debug_C_SearchNextMapStart Parms{};

	Parms.SearchMapStart = std::move(SearchMapStart);

	UObject::ProcessEvent(Func, &Parms);

	if (NextMapStart != nullptr)
		*NextMapStart = std::move(Parms.NextMapStart);
}


// Function Common_Debug.Common_Debug_C.SetAllCsFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetAllCsFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetAllCsFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetAllGuideFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::SetAllGuideFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetAllGuideFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.DispNpcName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACommon_Debug_C::DispNpcName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "DispNpcName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Common_Debug.Common_Debug_C.SetDebugTimeZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pattern                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACommon_Debug_C::SetDebugTimeZone(bool Pattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "SetDebugTimeZone");

	Params::Common_Debug_C_SetDebugTimeZone Parms{};

	Parms.Pattern = Pattern;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Common_Debug.Common_Debug_C.GetPrevCSID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           CSID                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PrevCSID                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ACommon_Debug_C::GetPrevCSID(const class FString& CSID, class FString* PrevCSID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Common_Debug_C", "GetPrevCSID");

	Params::Common_Debug_C_GetPrevCSID Parms{};

	Parms.CSID = std::move(CSID);

	UObject::ProcessEvent(Func, &Parms);

	if (PrevCSID != nullptr)
		*PrevCSID = std::move(Parms.PrevCSID);
}

}


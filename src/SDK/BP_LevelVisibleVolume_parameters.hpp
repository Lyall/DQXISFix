#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelVisibleVolume

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.ExecuteUbergraph_BP_LevelVisibleVolume
// 0x0230 (0x0230 - 0x0000)
struct BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue2;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue3;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors2;  // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue2;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue4;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelVisibleDummy_C*                K2Node_DynamicCast_AsBP_Level_Visible_Dummy;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue2;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue2;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllLevelLoaded_isLoaded;                // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_IsAllLevelLoaded_RequestLevel;            // 0x0158(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue3;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllLevelLoaded_isLoaded2;               // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_IsAllLevelLoaded_RequestLevel2;           // 0x0170(0x0010)(ZeroConstructor, ReferenceParm)
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue5;  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMapJumping_Result;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapJumpSequence_Result;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelVisibleDummy_C*                K2Node_DynamicCast_AsBP_Level_Visible_Dummy2;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue6;  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue7;  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue3;     // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIgnoreCS_Result;                     // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIgnoreCS_Result2;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BF[0x1];                                      // 0x01BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue8;  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue2;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue4;     // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue3;          // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue4;          // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue9;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue5;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue2;             // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue3;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCameraManager*               CallFunc_GetJackPlayerCameraManager_ReturnValue10; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue6;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckVisible_Visible;                     // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume");
static_assert(sizeof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume) == 0x000230, "Wrong size on BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, EntryPoint) == 0x000000, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue2) == 0x000010, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue3) == 0x000018, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetOverlappingActors_OverlappingActors2) == 0x000030, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetOverlappingActors_OverlappingActors2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Array_Length_ReturnValue2) == 0x000044, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_LessEqual_IntInt_ReturnValue2) == 0x000049, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_LessEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue4) == 0x000050, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue) == 0x000058, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, Temp_bool_IsClosed_Variable) == 0x00005B, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000060, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherActor2) == 0x000068, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherComp2) == 0x000070, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000078, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x00007C, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000080, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000108, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000110, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000118, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000120, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_DynamicCast_AsBP_Level_Visible_Dummy) == 0x000128, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_DynamicCast_AsBP_Level_Visible_Dummy' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetBattleManager_ReturnValue) == 0x000138, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsInBattle_ReturnValue) == 0x000140, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsInBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetBattleManager_ReturnValue2) == 0x000148, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetBattleManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsInBattle_ReturnValue2) == 0x000150, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsInBattle_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsAllLevelLoaded_isLoaded) == 0x000151, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsAllLevelLoaded_isLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsAllLevelLoaded_RequestLevel) == 0x000158, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsAllLevelLoaded_RequestLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Array_Length_ReturnValue3) == 0x000168, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_LessEqual_IntInt_ReturnValue3) == 0x00016C, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_LessEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsAllLevelLoaded_isLoaded2) == 0x00016D, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsAllLevelLoaded_isLoaded2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsAllLevelLoaded_RequestLevel2) == 0x000170, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsAllLevelLoaded_RequestLevel2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue5) == 0x000180, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsMapJumping_Result) == 0x000188, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsMapJumping_Result' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanOR_ReturnValue) == 0x000189, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsMapJumpSequence_Result) == 0x00018A, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsMapJumpSequence_Result' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00018B, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_DynamicCast_AsBP_Level_Visible_Dummy2) == 0x000190, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_DynamicCast_AsBP_Level_Visible_Dummy2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, K2Node_DynamicCast_bSuccess2) == 0x000198, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue6) == 0x0001A0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x0001A8, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue7) == 0x0001B0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Not_PreBool_ReturnValue2) == 0x0001B8, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue3) == 0x0001B9, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanAND_ReturnValue2) == 0x0001BA, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_CheckIgnoreCS_Result) == 0x0001BB, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_CheckIgnoreCS_Result' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_CheckIgnoreCS_Result2) == 0x0001BC, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_CheckIgnoreCS_Result2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanOR_ReturnValue2) == 0x0001BD, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanOR_ReturnValue3) == 0x0001BE, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue8) == 0x0001C0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue2) == 0x0001C8, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_EqualEqual_ObjectObject_ReturnValue4) == 0x0001C9, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_EqualEqual_ObjectObject_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue3) == 0x0001CA, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue4) == 0x0001CB, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue9) == 0x0001D0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue5) == 0x0001D8, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanOR_ReturnValue4) == 0x0001D9, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetGameFlagBool_ReturnValue) == 0x0001DA, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetGameFlagBool_ReturnValue2) == 0x0001DB, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetGameFlagBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetGameFlagBool_ReturnValue3) == 0x0001DC, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetGameFlagBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_BooleanOR_ReturnValue5) == 0x0001DD, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetJackPlayerCameraManager_ReturnValue10) == 0x0001E0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetJackPlayerCameraManager_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_IsOverlappingActor_ReturnValue6) == 0x0001E8, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_IsOverlappingActor_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_CheckVisible_Visible) == 0x0001E9, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_CheckVisible_Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_MakeLiteralString_ReturnValue) == 0x0001F0, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_GetDisplayName_ReturnValue) == 0x000200, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Concat_StrStr_ReturnValue) == 0x000210, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume, CallFunc_Concat_StrStr_ReturnValue2) == 0x000220, "Member 'BP_LevelVisibleVolume_C_ExecuteUbergraph_BP_LevelVisibleVolume::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushOuter_K2Node_ComponentBoundEvent_233_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_LevelVisibleVolume_C_BndEvt__BrushComponent_K2Node_ComponentBoundEvent_225_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_LevelVisibleVolume_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_LevelVisibleVolume_C_UserConstructionScript");
static_assert(sizeof(BP_LevelVisibleVolume_C_UserConstructionScript) == 0x000018, "Wrong size on BP_LevelVisibleVolume_C_UserConstructionScript");
static_assert(offsetof(BP_LevelVisibleVolume_C_UserConstructionScript, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'BP_LevelVisibleVolume_C_UserConstructionScript::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.SetForceVisible
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelVisibleVolume_C_SetForceVisible final
{
public:
	bool                                          Visible_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_SetForceVisible) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_SetForceVisible");
static_assert(sizeof(BP_LevelVisibleVolume_C_SetForceVisible) == 0x000030, "Wrong size on BP_LevelVisibleVolume_C_SetForceVisible");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, Visible_0) == 0x000000, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::Visible_0' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000020, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_SetForceVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelVisibleVolume_C_SetForceVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.ResetForceVisble
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelVisibleVolume_C_ResetForceVisble final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_ResetForceVisble) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_ResetForceVisble");
static_assert(sizeof(BP_LevelVisibleVolume_C_ResetForceVisble) == 0x000030, "Wrong size on BP_LevelVisibleVolume_C_ResetForceVisble");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_GetStreamingLevel_ReturnValue) == 0x000020, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_ResetForceVisble, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_LevelVisibleVolume_C_ResetForceVisble::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.IsAllLevelVisible
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelVisibleVolume_C_IsAllLevelVisible final
{
public:
	bool                                          Visble;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visblecheck;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStreamingStatePending_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelLoaded_ReturnValue;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_IsAllLevelVisible) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_IsAllLevelVisible");
static_assert(sizeof(BP_LevelVisibleVolume_C_IsAllLevelVisible) == 0x000038, "Wrong size on BP_LevelVisibleVolume_C_IsAllLevelVisible");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, Visble) == 0x000000, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::Visble' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, Visblecheck) == 0x000001, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::Visblecheck' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000028, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_IsStreamingStatePending_ReturnValue) == 0x000030, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_IsStreamingStatePending_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_IsLevelVisible_ReturnValue) == 0x000031, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_IsLevelLoaded_ReturnValue) == 0x000033, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_IsLevelLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_BooleanAND_ReturnValue2) == 0x000036, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelVisible, CallFunc_BooleanAND_ReturnValue3) == 0x000037, "Member 'BP_LevelVisibleVolume_C_IsAllLevelVisible::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.LevelVisible
// 0x0003 (0x0003 - 0x0000)
struct BP_LevelVisibleVolume_C_LevelVisible final
{
public:
	bool                                          Visible_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLevelVisible_RetVisible;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_LevelVisible) == 0x000001, "Wrong alignment on BP_LevelVisibleVolume_C_LevelVisible");
static_assert(sizeof(BP_LevelVisibleVolume_C_LevelVisible) == 0x000003, "Wrong size on BP_LevelVisibleVolume_C_LevelVisible");
static_assert(offsetof(BP_LevelVisibleVolume_C_LevelVisible, Visible_0) == 0x000000, "Member 'BP_LevelVisibleVolume_C_LevelVisible::Visible_0' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_LevelVisible, CallFunc_GetGameFlagBool_ReturnValue) == 0x000001, "Member 'BP_LevelVisibleVolume_C_LevelVisible::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_LevelVisible, CallFunc_SetLevelVisible_RetVisible) == 0x000002, "Member 'BP_LevelVisibleVolume_C_LevelVisible::CallFunc_SetLevelVisible_RetVisible' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.IsAllLevelLoaded
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelVisibleVolume_C_IsAllLevelLoaded final
{
public:
	bool                                          LoadRequest;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           RequestLevel;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class FName>                           LevelLoadRequest;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	bool                                          bLoaded;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabledLevelDebugDisplay_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelLoading_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelLoaded_ReturnValue;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_IsAllLevelLoaded) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_IsAllLevelLoaded");
static_assert(sizeof(BP_LevelVisibleVolume_C_IsAllLevelLoaded) == 0x000078, "Wrong size on BP_LevelVisibleVolume_C_IsAllLevelLoaded");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, LoadRequest) == 0x000000, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::LoadRequest' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, IsLoaded) == 0x000001, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, RequestLevel) == 0x000008, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::RequestLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, LevelLoadRequest) == 0x000018, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::LevelLoadRequest' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, bLoaded) == 0x000028, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::bLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_IsEnabledLevelDebugDisplay_ReturnValue) == 0x000038, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_IsEnabledLevelDebugDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_GetGameFlagBool_ReturnValue) == 0x000039, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Not_PreBool_ReturnValue2) == 0x00003A, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_IsLevelLoading_ReturnValue) == 0x000060, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_IsLevelLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_GetStreamingLevel_ReturnValue) == 0x000068, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_NotEqual_NameName_ReturnValue) == 0x000070, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_IsLevelLoaded_ReturnValue) == 0x000071, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_IsLevelLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_BooleanOR_ReturnValue2) == 0x000072, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_BooleanOR_ReturnValue3) == 0x000073, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_BooleanOR_ReturnValue4) == 0x000074, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_IsAllLevelLoaded, CallFunc_IsValid_ReturnValue) == 0x000076, "Member 'BP_LevelVisibleVolume_C_IsAllLevelLoaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.Ban
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelVisibleVolume_C_Ban final
{
public:
	bool                                          CallFunc_CanPossessPlayerControl_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_Ban) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_Ban");
static_assert(sizeof(BP_LevelVisibleVolume_C_Ban) == 0x000010, "Wrong size on BP_LevelVisibleVolume_C_Ban");
static_assert(offsetof(BP_LevelVisibleVolume_C_Ban, CallFunc_CanPossessPlayerControl_ReturnValue) == 0x000000, "Member 'BP_LevelVisibleVolume_C_Ban::CallFunc_CanPossessPlayerControl_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_Ban, CallFunc_GetUMGManager_ReturnValue) == 0x000008, "Member 'BP_LevelVisibleVolume_C_Ban::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.Uninhibited
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelVisibleVolume_C_Uninhibited final
{
public:
	class UJackUMGManager*                        CallFunc_GetUMGManager_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_Uninhibited) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_Uninhibited");
static_assert(sizeof(BP_LevelVisibleVolume_C_Uninhibited) == 0x000008, "Wrong size on BP_LevelVisibleVolume_C_Uninhibited");
static_assert(offsetof(BP_LevelVisibleVolume_C_Uninhibited, CallFunc_GetUMGManager_ReturnValue) == 0x000000, "Member 'BP_LevelVisibleVolume_C_Uninhibited::CallFunc_GetUMGManager_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.CheckLoadState
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) BP_LevelVisibleVolume_C_CheckLoadState final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJackCSMapLevelStatus                         State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          End;                                               // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_CheckLoadState) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_CheckLoadState");
static_assert(sizeof(BP_LevelVisibleVolume_C_CheckLoadState) == 0x000018, "Wrong size on BP_LevelVisibleVolume_C_CheckLoadState");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, LevelName) == 0x000000, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, State) == 0x000008, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::State' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, End) == 0x000009, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::End' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000B, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckLoadState, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_LevelVisibleVolume_C_CheckLoadState::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.CheckCutSceneAndVisible
// 0x00B8 (0x00B8 - 0x0000)
struct BP_LevelVisibleVolume_C_CheckCutSceneAndVisible final
{
public:
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FJackDataTableCutSceneLevelLoadInfo    CallFunc_GetDataTableCSAddLevel_Out;               // 0x0020(0x0088)()
	bool                                          CallFunc_GetDataTableCSAddLevel_Success;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End;                       // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End2;                      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End3;                      // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End4;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End5;                      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End6;                      // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End7;                      // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLoadState_End8;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_CheckCutSceneAndVisible");
static_assert(sizeof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible) == 0x0000B8, "Wrong size on BP_LevelVisibleVolume_C_CheckCutSceneAndVisible");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_GetGameFlagBool_ReturnValue) == 0x000000, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_GetGameFlagString_ReturnValue) == 0x000008, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_GetDataTableCSAddLevel_Out) == 0x000020, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_GetDataTableCSAddLevel_Out' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_GetDataTableCSAddLevel_Success) == 0x0000A8, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_GetDataTableCSAddLevel_Success' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End) == 0x0000A9, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End2) == 0x0000AA, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End2' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End3) == 0x0000AB, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End3' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End4) == 0x0000AC, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End4' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End5) == 0x0000AD, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End5' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End6) == 0x0000AE, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End6' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End7) == 0x0000AF, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End7' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckCutSceneAndVisible, CallFunc_CheckLoadState_End8) == 0x0000B0, "Member 'BP_LevelVisibleVolume_C_CheckCutSceneAndVisible::CallFunc_CheckLoadState_End8' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.CheckIgnoreCS
// 0x0050 (0x0050 - 0x0000)
struct BP_LevelVisibleVolume_C_CheckIgnoreCS final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalResult;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FJackLDT_CutSceneInfo                  CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGameFlagBool_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameFlagString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_CheckIgnoreCS) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_CheckIgnoreCS");
static_assert(sizeof(BP_LevelVisibleVolume_C_CheckIgnoreCS) == 0x000050, "Wrong size on BP_LevelVisibleVolume_C_CheckIgnoreCS");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, Result) == 0x000000, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, LocalResult) == 0x000001, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::LocalResult' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_GetGameFlagBool_ReturnValue) == 0x00002D, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_GetGameFlagBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_GetGameFlagString_ReturnValue) == 0x000030, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_GetGameFlagString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckIgnoreCS, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'BP_LevelVisibleVolume_C_CheckIgnoreCS::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.BindBattle
// 0x0018 (0x0018 - 0x0000)
struct BP_LevelVisibleVolume_C_BindBattle final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AJackBattleManager*                     CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelVisibleVolume_C_BindBattle) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_BindBattle");
static_assert(sizeof(BP_LevelVisibleVolume_C_BindBattle) == 0x000018, "Wrong size on BP_LevelVisibleVolume_C_BindBattle");
static_assert(offsetof(BP_LevelVisibleVolume_C_BindBattle, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_LevelVisibleVolume_C_BindBattle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_BindBattle, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_LevelVisibleVolume_C_BindBattle::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");

// Function BP_LevelVisibleVolume.BP_LevelVisibleVolume_C.CheckVisible
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelVisibleVolume_C_CheckVisible final
{
public:
	bool                                          Visible_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalVisible;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelVisibleVolume_C_CheckVisible) == 0x000008, "Wrong alignment on BP_LevelVisibleVolume_C_CheckVisible");
static_assert(sizeof(BP_LevelVisibleVolume_C_CheckVisible) == 0x000038, "Wrong size on BP_LevelVisibleVolume_C_CheckVisible");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, Visible_0) == 0x000000, "Member 'BP_LevelVisibleVolume_C_CheckVisible::Visible_0' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, LocalVisible) == 0x000001, "Member 'BP_LevelVisibleVolume_C_CheckVisible::LocalVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelVisibleVolume_C_CheckVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LevelVisibleVolume_C_CheckVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000028, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_IsLevelVisible_ReturnValue) == 0x000030, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelVisibleVolume_C_CheckVisible, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_LevelVisibleVolume_C_CheckVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


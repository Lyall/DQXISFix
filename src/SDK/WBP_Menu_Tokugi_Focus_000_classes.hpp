#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_Tokugi_Focus_000

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "JackGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_Tokugi_Focus_000.WBP_Menu_Tokugi_Focus_000_C
// 0x0078 (0x0248 - 0x01D0)
class UWBP_Menu_Tokugi_Focus_000_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Loop;                                              // 0x01D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x01E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x01E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x01F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ball_0;                                            // 0x01F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ball_1;                                            // 0x0200(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Balls;                                             // 0x0208(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle;                                            // 0x0210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle_2;                                          // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           FocusRoot;                                         // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0234(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BgScroll;                                          // 0x023C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Menu_Tokugi_Focus_000(int32 EntryPoint);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void SetBackGroundScroll(const struct FVector2D& BgScroll_0);
	void SetDisplayScale(float DisplayScale);
	void SetDrawPos(const struct FVector2D& Position_0);
	void PlayOutAnim();
	void PlayInAnim();
	void UpdateDisplay();
	void Construct();
	void SendTokugiPanelMessage(class FName Message);
	void SetMenuMode();
	void PlayAnimData(const struct FJackUMGTokugiPanelAnimData& AnimData);
	void SetCharacterItemData(class UJackUMGItemData* ItemData);
	void SetPanelData(class UJackUMGTokugiPanelData* PanelData);
	void PlayAnimationNameArg(class FName Arg);
	void PlayAnimationIntArg(int32 Arg);
	void OnEndAnim(class UUserWidget* Sender);
	void SetEndAnimEventListener(TScriptInterface<class IBP_IF_TokugiPanel_Item_C> Listener);
	void PlayDefaultAnimation();
	void OnTokugiPanelWindowDestruct();
	void SetResetMode();
	void SetBattleResultMode(EJackCharacter CharacterType);
	void OnTokugiPanelWindowCancel();
	void SetCancelEventListener(TScriptInterface<class IBP_IF_TokugiPanel_Item_C> CancelEventListener);
	void SetDisplayData(const struct FVector2D& Position_0, float Scale_0, const struct FVector2D& BgScroll_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_Tokugi_Focus_000_C">();
	}
	static class UWBP_Menu_Tokugi_Focus_000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_Tokugi_Focus_000_C>();
	}
};
static_assert(alignof(UWBP_Menu_Tokugi_Focus_000_C) == 0x000008, "Wrong alignment on UWBP_Menu_Tokugi_Focus_000_C");
static_assert(sizeof(UWBP_Menu_Tokugi_Focus_000_C) == 0x000248, "Wrong size on UWBP_Menu_Tokugi_Focus_000_C");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, UberGraphFrame) == 0x0001D0, "Member 'UWBP_Menu_Tokugi_Focus_000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Loop) == 0x0001D8, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Loop' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, In) == 0x0001E0, "Member 'UWBP_Menu_Tokugi_Focus_000_C::In' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Default) == 0x0001E8, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Default' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Out) == 0x0001F0, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Out' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Ball_0) == 0x0001F8, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Ball_0' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Ball_1) == 0x000200, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Ball_1' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Balls) == 0x000208, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Balls' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Circle) == 0x000210, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Circle' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Circle_2) == 0x000218, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Circle_2' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, FocusRoot) == 0x000220, "Member 'UWBP_Menu_Tokugi_Focus_000_C::FocusRoot' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, RootPanel) == 0x000228, "Member 'UWBP_Menu_Tokugi_Focus_000_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Scale) == 0x000230, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Scale' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, Position) == 0x000234, "Member 'UWBP_Menu_Tokugi_Focus_000_C::Position' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_Tokugi_Focus_000_C, BgScroll) == 0x00023C, "Member 'UWBP_Menu_Tokugi_Focus_000_C::BgScroll' has a wrong offset!");

}


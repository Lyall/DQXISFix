#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DebugNPCHeight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_Schedule_Pattern_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DebugNPCHeight.BP_DebugNPCHeight_C
// 0x0050 (0x03E8 - 0x0398)
class ABP_DebugNPCHeight_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AJackNPC*>                       NPC;                                               // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         IngoreActors;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         TempNPCAttach;                                     // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          TempFixLocation;                                   // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DispMode;                                          // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayIllegalZ;                                   // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DisplayFixedLocation;                              // 0x03E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_DebugNPCHeight(int32 EntryPoint);
	void FixedLocationChange(bool BoolValue);
	void IllegalZChange(bool BoolValue);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void GetFixedLocation(class ABP_NPC_Base_C* NPC_0, bool* FixedLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DebugNPCHeight_C">();
	}
	static class ABP_DebugNPCHeight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DebugNPCHeight_C>();
	}
};
static_assert(alignof(ABP_DebugNPCHeight_C) == 0x000008, "Wrong alignment on ABP_DebugNPCHeight_C");
static_assert(sizeof(ABP_DebugNPCHeight_C) == 0x0003E8, "Wrong size on ABP_DebugNPCHeight_C");
static_assert(offsetof(ABP_DebugNPCHeight_C, UberGraphFrame) == 0x000398, "Member 'ABP_DebugNPCHeight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, DefaultSceneRoot) == 0x0003A0, "Member 'ABP_DebugNPCHeight_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, NPC) == 0x0003A8, "Member 'ABP_DebugNPCHeight_C::NPC' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, IngoreActors) == 0x0003B8, "Member 'ABP_DebugNPCHeight_C::IngoreActors' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, TempNPCAttach) == 0x0003C8, "Member 'ABP_DebugNPCHeight_C::TempNPCAttach' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, TempFixLocation) == 0x0003D8, "Member 'ABP_DebugNPCHeight_C::TempFixLocation' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, DispMode) == 0x0003DC, "Member 'ABP_DebugNPCHeight_C::DispMode' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, DisplayIllegalZ) == 0x0003E0, "Member 'ABP_DebugNPCHeight_C::DisplayIllegalZ' has a wrong offset!");
static_assert(offsetof(ABP_DebugNPCHeight_C, DisplayFixedLocation) == 0x0003E1, "Member 'ABP_DebugNPCHeight_C::DisplayFixedLocation' has a wrong offset!");

}


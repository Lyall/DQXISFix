#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IF_Snd_Control

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_IF_Snd_Control.BP_IF_Snd_Control_C.Snd - Allow Change BGM
// 0x0001 (0x0001 - 0x0000)
struct BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM final
{
public:
	bool                                          bpp__Enable__pf;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM) == 0x000001, "Wrong alignment on BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM");
static_assert(sizeof(BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM) == 0x000001, "Wrong size on BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM");
static_assert(offsetof(BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM, bpp__Enable__pf) == 0x000000, "Member 'BP_IF_Snd_Control_C_Snd_Minus_Allow_Change_BGM::bpp__Enable__pf' has a wrong offset!");

// Function BP_IF_Snd_Control.BP_IF_Snd_Control_C.Snd - Event Battle
// 0x0010 (0x0010 - 0x0000)
struct BP_IF_Snd_Control_C_Snd_Minus_Event_Battle final
{
public:
	class FName                                   bpp__EventBattleID__pf;                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bpp__IsEventBattle__pf;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BP_IF_Snd_Control_C_Snd_Minus_Event_Battle) == 0x000004, "Wrong alignment on BP_IF_Snd_Control_C_Snd_Minus_Event_Battle");
static_assert(sizeof(BP_IF_Snd_Control_C_Snd_Minus_Event_Battle) == 0x000010, "Wrong size on BP_IF_Snd_Control_C_Snd_Minus_Event_Battle");
static_assert(offsetof(BP_IF_Snd_Control_C_Snd_Minus_Event_Battle, bpp__EventBattleID__pf) == 0x000000, "Member 'BP_IF_Snd_Control_C_Snd_Minus_Event_Battle::bpp__EventBattleID__pf' has a wrong offset!");
static_assert(offsetof(BP_IF_Snd_Control_C_Snd_Minus_Event_Battle, bpp__IsEventBattle__pf) == 0x000008, "Member 'BP_IF_Snd_Control_C_Snd_Minus_Event_Battle::bpp__IsEventBattle__pf' has a wrong offset!");

// Function BP_IF_Snd_Control.BP_IF_Snd_Control_C.Snd - Prepare Vehicle V203
// 0x0008 (0x0008 - 0x0000)
struct BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203 final
{
public:
	class AJackVehicleV203*                       bpp__VehicleV203__pf;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203) == 0x000008, "Wrong alignment on BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203");
static_assert(sizeof(BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203) == 0x000008, "Wrong size on BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203");
static_assert(offsetof(BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203, bpp__VehicleV203__pf) == 0x000000, "Member 'BP_IF_Snd_Control_C_Snd_Minus_Prepare_Vehicle_V203::bpp__VehicleV203__pf' has a wrong offset!");

}


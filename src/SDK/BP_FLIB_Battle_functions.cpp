#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FLIB_Battle

#include "Basic.hpp"

#include "BP_FLIB_Battle_classes.hpp"
#include "BP_FLIB_Battle_parameters.hpp"


namespace SDK
{

// Function BP_FLIB_Battle.BP_FLIB_Battle_C.CheckToubatuMonsterArray
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     MonsterIDs                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class FName>                     ActionIDs                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class FName>                     RenkeiIDs                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Battle_C::CheckToubatuMonsterArray(TArray<class FName>& MonsterIDs, TArray<class FName>& ActionIDs, TArray<class FName>& RenkeiIDs, class UObject* __WorldContext, bool* Ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "CheckToubatuMonsterArray");

	Params::BP_FLIB_Battle_C_CheckToubatuMonsterArray Parms{};

	Parms.MonsterIDs = std::move(MonsterIDs);
	Parms.ActionIDs = std::move(ActionIDs);
	Parms.RenkeiIDs = std::move(RenkeiIDs);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MonsterIDs = std::move(Parms.MonsterIDs);
	ActionIDs = std::move(Parms.ActionIDs);
	RenkeiIDs = std::move(Parms.RenkeiIDs);

	if (Ret != nullptr)
		*Ret = Parms.Ret;
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattleMonsterTroopInfo
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MonterLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_EventBattle             EventBattleID                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    TroopTracking                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::SetEventBattleMonsterTroopInfo(class AActor* MonterLocation, const struct FJackLDT_EventBattle& EventBattleID, bool TroopTracking, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "SetEventBattleMonsterTroopInfo");

	Params::BP_FLIB_Battle_C_SetEventBattleMonsterTroopInfo Parms{};

	Parms.MonterLocation = MonterLocation;
	Parms.EventBattleID = std::move(EventBattleID);
	Parms.TroopTracking = TroopTracking;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattlePlayerInfo
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MonterLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FJackLDT_EventBattle             EventBattleID                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::SetEventBattlePlayerInfo(class AActor* MonterLocation, const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "SetEventBattlePlayerInfo");

	Params::BP_FLIB_Battle_C_SetEventBattlePlayerInfo Parms{};

	Parms.MonterLocation = MonterLocation;
	Parms.EventBattleID = std::move(EventBattleID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.SetEventBattleTroopLocation
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EJackMight                              MightType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::SetEventBattleTroopLocation(const struct FVector& Location, EJackMight MightType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "SetEventBattleTroopLocation");

	Params::BP_FLIB_Battle_C_SetEventBattleTroopLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.MightType = MightType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetEventBattleAppearDisplayName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_EventBattle             EventBattleID                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           AppearName                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::GetEventBattleAppearDisplayName(const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext, class FString* AppearName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "GetEventBattleAppearDisplayName");

	Params::BP_FLIB_Battle_C_GetEventBattleAppearDisplayName Parms{};

	Parms.EventBattleID = std::move(EventBattleID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AppearName != nullptr)
		*AppearName = std::move(Parms.AppearName);
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetEventBattleAppearDisplayNameId
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FJackLDT_EventBattle             EventBattleID                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AppearNameId                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::GetEventBattleAppearDisplayNameId(const struct FJackLDT_EventBattle& EventBattleID, class UObject* __WorldContext, class FName* AppearNameId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "GetEventBattleAppearDisplayNameId");

	Params::BP_FLIB_Battle_C_GetEventBattleAppearDisplayNameId Parms{};

	Parms.EventBattleID = std::move(EventBattleID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AppearNameId != nullptr)
		*AppearNameId = Parms.AppearNameId;
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.IsEventBattle
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EventBattle                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             EventBattleID                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::IsEventBattle(class UObject* __WorldContext, bool* EventBattle, class FName* EventBattleID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "IsEventBattle");

	Params::BP_FLIB_Battle_C_IsEventBattle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EventBattle != nullptr)
		*EventBattle = Parms.EventBattle;

	if (EventBattleID != nullptr)
		*EventBattleID = Parms.EventBattleID;
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.AddToubatuCount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FJackLDT_Monster                 MonsterID                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Counted                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_FLIB_Battle_C::AddToubatuCount(const struct FJackLDT_Monster& MonsterID, class UObject* __WorldContext, bool* Counted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "AddToubatuCount");

	Params::BP_FLIB_Battle_C_AddToubatuCount Parms{};

	Parms.MonsterID = std::move(MonsterID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Counted != nullptr)
		*Counted = Parms.Counted;
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetBattleFieldInfo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJackBattleFieldInfo*             BattleFieldInfo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::GetBattleFieldInfo(class UObject* __WorldContext, class UJackBattleFieldInfo** BattleFieldInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "GetBattleFieldInfo");

	Params::BP_FLIB_Battle_C_GetBattleFieldInfo Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BattleFieldInfo != nullptr)
		*BattleFieldInfo = Parms.BattleFieldInfo;
}


// Function BP_FLIB_Battle.BP_FLIB_Battle_C.GetLengthPlayerToBattleFieldCenter
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FLIB_Battle_C::GetLengthPlayerToBattleFieldCenter(class UObject* __WorldContext, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FLIB_Battle_C", "GetLengthPlayerToBattleFieldCenter");

	Params::BP_FLIB_Battle_C_GetLengthPlayerToBattleFieldCenter Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}

}


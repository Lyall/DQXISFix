#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TuboBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "JackGame_structs.hpp"
#include "ENUM_InteractRidingVehicleMessage_structs.hpp"
#include "STRUCT_ItemSet_structs.hpp"
#include "BP_ItemGettableObjectBase_classes.hpp"


namespace SDK
{

// DynamicClass BP_TuboBase.BP_TuboBase_C
// 0x0698 (0x0AB0 - 0x0418)
class ABP_TuboBase_C final : public ABP_ItemGettableObjectBase_C
{
public:
	class UStaticMeshComponent*                   TriggerCylinder;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleComponent*                 DestructibleMesh;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                    Billboard;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJackInteractiveActorComponent*         JackInteractiveActor;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterAnimMontageNameOnPickBreak;               // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CharacterOffsetLocation;                           // 0x0448(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackCharacter*                         JackCharacter;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Picked;                                            // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Item_Gotten;                                       // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Override_Mesh;                                     // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleMesh*                      OverrideDestructibleMesh;                          // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                           CharacterAnimationPickBreak;                       // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                              SoundItemGet;                                      // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructDamage;                                    // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructRadius;                                    // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructImpulseStrength;                           // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DestructFullDamage;                                // 0x0494(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundBreak;                                        // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                        EffectBreak;                                       // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EffectBreakSnapToGround;                           // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AccessEndEventName;                                // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TuboID;                                            // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DitherStartTime;                                   // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DitherDurationTime;                                // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDestroyed;                                        // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                VelocityOnDetached;                                // 0x04CC(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable;                              // 0x04D8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable;                                // 0x04E8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable;                              // 0x04F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable2;                             // 0x0500(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable3;                             // 0x0510(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable4;                             // 0x0520(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable2;                             // 0x0530(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable5;                             // 0x0538(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable3;                             // 0x0548(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable4;                             // 0x054D(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable5;                             // 0x0552(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_557[0x1];                                      // 0x0557(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable6;                             // 0x0558(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable6;                             // 0x0568(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable7;                             // 0x056D(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_572[0x6];                                      // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable7;                             // 0x0578(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable8;                             // 0x0588(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable9;                             // 0x0598(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable10;                            // 0x05A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable11;                            // 0x05B0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable12;                            // 0x05B5(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5BA[0x6];                                      // 0x05BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable8;                             // 0x05C0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable13;                            // 0x05D0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable14;                            // 0x05E0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable15;                            // 0x05E5(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5EA[0x6];                                      // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable16;                            // 0x05F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable17;                            // 0x0600(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0608(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x060C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0610(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0618(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(struct FVector& bpp__HitPoint__pf, struct FVector& bpp__HitDirection__pf)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0628(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0638(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0648(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable18;                            // 0x0658(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable19;                            // 0x0668(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_66D[0x3];                                      // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable20;                            // 0x0670(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable21;                            // 0x0680(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable22;                            // 0x0685(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68A[0x6];                                      // 0x068A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable23;                            // 0x0690(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable24;                            // 0x06A0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A5[0x3];                                      // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       K2Node_MakeArray_Array;                            // 0x06A8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable25;                            // 0x06B8(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6BD[0x3];                                      // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x06C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable2;                               // 0x06C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x06D0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x06D4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable3;                               // 0x06D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable26;                            // 0x06E0(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable4;                               // 0x06E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable9;                             // 0x06F0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable5;                               // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable6;                               // 0x0708(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_IsItemGotten_ItemGotten;                  // 0x0710(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item;                           // 0x0718(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item2;                          // 0x0728(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue; // 0x0738(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList; // 0x0748(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2; // 0x0758(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList2; // 0x0768(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3; // 0x0778(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList3; // 0x0788(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FSTRUCT_ItemSet                        CallFunc_Array_Get_Item3;                          // 0x0798(0x0010)(Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList4; // 0x07A8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4; // 0x07B8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList5; // 0x07C8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5; // 0x07D8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGoldGetMessageTag_ReturnValue;        // 0x07E8(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item4;                          // 0x07F8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue;        // 0x0800(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item5;                          // 0x0810(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue2;       // 0x0818(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	EJackItem_Bag                                 CallFunc_Array_Get_Item6;                          // 0x0828(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0830(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeItemGetMessageTag_ReturnValue3;       // 0x0840(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                          CallFunc_StoreItemSequence_Empty;                  // 0x0850(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetForsakeMessageID_FosakeMessageID;      // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable7;                               // 0x0860(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable10;                            // 0x0868(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0878(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     CallFunc_Array_Get_Item7;                          // 0x0888(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable8;                               // 0x0890(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable2;                               // 0x0898(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select2_Default;                            // 0x08A0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding; // 0x08B0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable9;                               // 0x08B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable10;                              // 0x08C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable11;                              // 0x08C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable12;                              // 0x08D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor3;            // 0x08D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Temp_name_Variable13;                              // 0x08E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AJackPlayerCharacter*                   K2Node_DynamicCast_AsJack_Player_Character;        // 0x08E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x08F0(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable14;                              // 0x08F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                K2Node_CustomEvent_HitPoint;                       // 0x0900(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                K2Node_CustomEvent_HitDirection;                   // 0x090C(0x000C)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENUM_InteractRidingVehicleMessage             Temp_byte_Variable;                                // 0x0918(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_919[0x7];                                      // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select3_Default;                            // 0x0920(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable27;                            // 0x0928(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable28;                            // 0x0938(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable29;                            // 0x093D(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable30;                            // 0x0942(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable31;                            // 0x0947(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       Temp_struct_Variable32;                            // 0x0950(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable33;                            // 0x0960(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_965[0x3];                                      // 0x0965(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCharacter*                   K2Node_DynamicCast_AsJack_Player_Character2;       // 0x0968(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0970(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AJackPlayerCharacter*                   K2Node_DynamicCast_AsJack_Player_Character3;       // 0x0978(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0980(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0988(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0990(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0998(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x09A0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x09A4(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A5[0x3];                                      // 0x09A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x09A8(0x0088)(Transient, DuplicateTransient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0A30(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0A38(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0A40(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0A48(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJackSerifuAutomationFlags             Temp_struct_Variable34;                            // 0x0A4C(0x0005)(Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable11;                            // 0x0A58(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Temp_string_Variable12;                            // 0x0A68(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Temp_bool_Variable3;                               // 0x0A78(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FJackMessageArgumentData>       CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6; // 0x0A80(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)
	class FString                                 K2Node_Select4_Default;                            // 0x0A90(0x0010)(ZeroConstructor, Transient, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           CallFunc_LearningRecipeBookFromItemId_OutLearningList6; // 0x0AA0(0x0010)(ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic)

public:
	void ComponentFractureSignature__DelegateSignature(const struct FVector& bpp__HitPoint__pf, const struct FVector& bpp__HitDirection__pf);
	void OnAttachObjectDelegate__DelegateSignature();
	void OnDetachObjectDelegate__DelegateSignature();
	void BndEvt__Cylinder_K2Node_ComponentBoundEvent_243_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf, bool bpp__bFromSweep__pf, const struct FHitResult& bpp__SweepResult__pf__const);
	void BndEvt__Cylinder_K2Node_ComponentBoundEvent_249_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* bpp__OverlappedComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, int32 bpp__OtherBodyIndex__pf);
	void BndEvt__JackInteractiveActor_K2Node_ComponentBoundEvent_131_ComponentInteractSignature__DelegateSignature(class AActor* bpp__OtherActor__pf);
	void CustomEvent_0();
	void ExecuteUbergraph_BP_TuboBase_0(int32 bpp__EntryPoint__pf);
	void ExecuteUbergraph_BP_TuboBase_5(int32 bpp__EntryPoint__pf);
	void GetCenterLocation(struct FVector* bpp__CenterLocation__pf);
	void OnAttachObject();
	void OnComponentFracture_Event_0(const struct FVector& bpp__HitPoint__pf__const, const struct FVector& bpp__HitDirection__pf__const);
	void OnDetachObject();
	class FString OnGenerateDebugInfoString();
	void PlayEffectBreak(const struct FVector& bpp__Location__pf);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BP_TuboBase_C">();
	}
	static class ABP_TuboBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TuboBase_C>();
	}
};
static_assert(alignof(ABP_TuboBase_C) == 0x000008, "Wrong alignment on ABP_TuboBase_C");
static_assert(sizeof(ABP_TuboBase_C) == 0x000AB0, "Wrong size on ABP_TuboBase_C");
static_assert(offsetof(ABP_TuboBase_C, TriggerCylinder) == 0x000418, "Member 'ABP_TuboBase_C::TriggerCylinder' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, StaticMesh) == 0x000420, "Member 'ABP_TuboBase_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DestructibleMesh) == 0x000428, "Member 'ABP_TuboBase_C::DestructibleMesh' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Billboard) == 0x000430, "Member 'ABP_TuboBase_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, JackInteractiveActor) == 0x000438, "Member 'ABP_TuboBase_C::JackInteractiveActor' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CharacterAnimMontageNameOnPickBreak) == 0x000440, "Member 'ABP_TuboBase_C::CharacterAnimMontageNameOnPickBreak' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CharacterOffsetLocation) == 0x000448, "Member 'ABP_TuboBase_C::CharacterOffsetLocation' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, JackCharacter) == 0x000458, "Member 'ABP_TuboBase_C::JackCharacter' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Picked) == 0x000460, "Member 'ABP_TuboBase_C::Picked' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Item_Gotten) == 0x000461, "Member 'ABP_TuboBase_C::Item_Gotten' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Override_Mesh) == 0x000468, "Member 'ABP_TuboBase_C::Override_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, OverrideDestructibleMesh) == 0x000470, "Member 'ABP_TuboBase_C::OverrideDestructibleMesh' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CharacterAnimationPickBreak) == 0x000478, "Member 'ABP_TuboBase_C::CharacterAnimationPickBreak' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, SoundItemGet) == 0x000480, "Member 'ABP_TuboBase_C::SoundItemGet' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DestructDamage) == 0x000488, "Member 'ABP_TuboBase_C::DestructDamage' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DestructRadius) == 0x00048C, "Member 'ABP_TuboBase_C::DestructRadius' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DestructImpulseStrength) == 0x000490, "Member 'ABP_TuboBase_C::DestructImpulseStrength' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DestructFullDamage) == 0x000494, "Member 'ABP_TuboBase_C::DestructFullDamage' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, SoundBreak) == 0x000498, "Member 'ABP_TuboBase_C::SoundBreak' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, EffectBreak) == 0x0004A0, "Member 'ABP_TuboBase_C::EffectBreak' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, EffectBreakSnapToGround) == 0x0004A8, "Member 'ABP_TuboBase_C::EffectBreakSnapToGround' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, AccessEndEventName) == 0x0004B0, "Member 'ABP_TuboBase_C::AccessEndEventName' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, TuboID) == 0x0004B8, "Member 'ABP_TuboBase_C::TuboID' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DitherStartTime) == 0x0004C0, "Member 'ABP_TuboBase_C::DitherStartTime' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, DitherDurationTime) == 0x0004C4, "Member 'ABP_TuboBase_C::DitherDurationTime' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, bDestroyed) == 0x0004C8, "Member 'ABP_TuboBase_C::bDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, VelocityOnDetached) == 0x0004CC, "Member 'ABP_TuboBase_C::VelocityOnDetached' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable) == 0x0004D8, "Member 'ABP_TuboBase_C::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_bool_Variable) == 0x0004E8, "Member 'ABP_TuboBase_C::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable) == 0x0004F0, "Member 'ABP_TuboBase_C::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable2) == 0x000500, "Member 'ABP_TuboBase_C::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable3) == 0x000510, "Member 'ABP_TuboBase_C::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable4) == 0x000520, "Member 'ABP_TuboBase_C::Temp_string_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable2) == 0x000530, "Member 'ABP_TuboBase_C::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable5) == 0x000538, "Member 'ABP_TuboBase_C::Temp_string_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable3) == 0x000548, "Member 'ABP_TuboBase_C::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable4) == 0x00054D, "Member 'ABP_TuboBase_C::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable5) == 0x000552, "Member 'ABP_TuboBase_C::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable6) == 0x000558, "Member 'ABP_TuboBase_C::Temp_string_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable6) == 0x000568, "Member 'ABP_TuboBase_C::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable7) == 0x00056D, "Member 'ABP_TuboBase_C::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable7) == 0x000578, "Member 'ABP_TuboBase_C::Temp_string_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable8) == 0x000588, "Member 'ABP_TuboBase_C::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable9) == 0x000598, "Member 'ABP_TuboBase_C::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable10) == 0x0005A0, "Member 'ABP_TuboBase_C::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable11) == 0x0005B0, "Member 'ABP_TuboBase_C::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable12) == 0x0005B5, "Member 'ABP_TuboBase_C::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable8) == 0x0005C0, "Member 'ABP_TuboBase_C::Temp_string_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable13) == 0x0005D0, "Member 'ABP_TuboBase_C::Temp_struct_Variable13' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable14) == 0x0005E0, "Member 'ABP_TuboBase_C::Temp_struct_Variable14' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable15) == 0x0005E5, "Member 'ABP_TuboBase_C::Temp_struct_Variable15' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable16) == 0x0005F0, "Member 'ABP_TuboBase_C::Temp_struct_Variable16' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable17) == 0x000600, "Member 'ABP_TuboBase_C::Temp_struct_Variable17' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_BreakRotator_Roll) == 0x000608, "Member 'ABP_TuboBase_C::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_BreakRotator_Pitch) == 0x00060C, "Member 'ABP_TuboBase_C::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_BreakRotator_Yaw) == 0x000610, "Member 'ABP_TuboBase_C::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CreateDelegate_OutputDelegate) == 0x000618, "Member 'ABP_TuboBase_C::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CreateDelegate_OutputDelegate2) == 0x000628, "Member 'ABP_TuboBase_C::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CreateDelegate_OutputDelegate3) == 0x000638, "Member 'ABP_TuboBase_C::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CreateDelegate_OutputDelegate4) == 0x000648, "Member 'ABP_TuboBase_C::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable18) == 0x000658, "Member 'ABP_TuboBase_C::Temp_struct_Variable18' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable19) == 0x000668, "Member 'ABP_TuboBase_C::Temp_struct_Variable19' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable20) == 0x000670, "Member 'ABP_TuboBase_C::Temp_struct_Variable20' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable21) == 0x000680, "Member 'ABP_TuboBase_C::Temp_struct_Variable21' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable22) == 0x000685, "Member 'ABP_TuboBase_C::Temp_struct_Variable22' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable23) == 0x000690, "Member 'ABP_TuboBase_C::Temp_struct_Variable23' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable24) == 0x0006A0, "Member 'ABP_TuboBase_C::Temp_struct_Variable24' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_MakeArray_Array) == 0x0006A8, "Member 'ABP_TuboBase_C::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable25) == 0x0006B8, "Member 'ABP_TuboBase_C::Temp_struct_Variable25' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable) == 0x0006C0, "Member 'ABP_TuboBase_C::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable2) == 0x0006C8, "Member 'ABP_TuboBase_C::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_int_Loop_Counter_Variable) == 0x0006D0, "Member 'ABP_TuboBase_C::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_int_Array_Index_Variable) == 0x0006D4, "Member 'ABP_TuboBase_C::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable3) == 0x0006D8, "Member 'ABP_TuboBase_C::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable26) == 0x0006E0, "Member 'ABP_TuboBase_C::Temp_struct_Variable26' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable4) == 0x0006E8, "Member 'ABP_TuboBase_C::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable9) == 0x0006F0, "Member 'ABP_TuboBase_C::Temp_string_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable5) == 0x000700, "Member 'ABP_TuboBase_C::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable6) == 0x000708, "Member 'ABP_TuboBase_C::Temp_name_Variable6' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_IsItemGotten_ItemGotten) == 0x000710, "Member 'ABP_TuboBase_C::CallFunc_IsItemGotten_ItemGotten' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item) == 0x000718, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item2) == 0x000728, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue) == 0x000738, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList) == 0x000748, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2) == 0x000758, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList2) == 0x000768, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3) == 0x000778, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList3) == 0x000788, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item3) == 0x000798, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList4) == 0x0007A8, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4) == 0x0007B8, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList5) == 0x0007C8, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5) == 0x0007D8, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGoldGetMessageTag_ReturnValue) == 0x0007E8, "Member 'ABP_TuboBase_C::CallFunc_MakeGoldGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item4) == 0x0007F8, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue) == 0x000800, "Member 'ABP_TuboBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item5) == 0x000810, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue2) == 0x000818, "Member 'ABP_TuboBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item6) == 0x000828, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_Select_Default) == 0x000830, "Member 'ABP_TuboBase_C::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeItemGetMessageTag_ReturnValue3) == 0x000840, "Member 'ABP_TuboBase_C::CallFunc_MakeItemGetMessageTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_StoreItemSequence_Empty) == 0x000850, "Member 'ABP_TuboBase_C::CallFunc_StoreItemSequence_Empty' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_GetForsakeMessageID_FosakeMessageID) == 0x000858, "Member 'ABP_TuboBase_C::CallFunc_GetForsakeMessageID_FosakeMessageID' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable7) == 0x000860, "Member 'ABP_TuboBase_C::Temp_name_Variable7' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable10) == 0x000868, "Member 'ABP_TuboBase_C::Temp_string_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_GetMaterials_ReturnValue) == 0x000878, "Member 'ABP_TuboBase_C::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Array_Get_Item7) == 0x000888, "Member 'ABP_TuboBase_C::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable8) == 0x000890, "Member 'ABP_TuboBase_C::Temp_name_Variable8' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_bool_Variable2) == 0x000898, "Member 'ABP_TuboBase_C::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_Select2_Default) == 0x0008A0, "Member 'ABP_TuboBase_C::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding) == 0x0008B0, "Member 'ABP_TuboBase_C::CallFunc_Is_Player_Riding_on_Vehicle_Player_Riding' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable9) == 0x0008B8, "Member 'ABP_TuboBase_C::Temp_name_Variable9' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable10) == 0x0008C0, "Member 'ABP_TuboBase_C::Temp_name_Variable10' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable11) == 0x0008C8, "Member 'ABP_TuboBase_C::Temp_name_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable12) == 0x0008D0, "Member 'ABP_TuboBase_C::Temp_name_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherActor3) == 0x0008D8, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherActor3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable13) == 0x0008E0, "Member 'ABP_TuboBase_C::Temp_name_Variable13' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_AsJack_Player_Character) == 0x0008E8, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_AsJack_Player_Character' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_bSuccess) == 0x0008F0, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_name_Variable14) == 0x0008F8, "Member 'ABP_TuboBase_C::Temp_name_Variable14' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CustomEvent_HitPoint) == 0x000900, "Member 'ABP_TuboBase_C::K2Node_CustomEvent_HitPoint' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_CustomEvent_HitDirection) == 0x00090C, "Member 'ABP_TuboBase_C::K2Node_CustomEvent_HitDirection' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_byte_Variable) == 0x000918, "Member 'ABP_TuboBase_C::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_Select3_Default) == 0x000920, "Member 'ABP_TuboBase_C::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable27) == 0x000928, "Member 'ABP_TuboBase_C::Temp_struct_Variable27' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable28) == 0x000938, "Member 'ABP_TuboBase_C::Temp_struct_Variable28' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable29) == 0x00093D, "Member 'ABP_TuboBase_C::Temp_struct_Variable29' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable30) == 0x000942, "Member 'ABP_TuboBase_C::Temp_struct_Variable30' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable31) == 0x000947, "Member 'ABP_TuboBase_C::Temp_struct_Variable31' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable32) == 0x000950, "Member 'ABP_TuboBase_C::Temp_struct_Variable32' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable33) == 0x000960, "Member 'ABP_TuboBase_C::Temp_struct_Variable33' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_AsJack_Player_Character2) == 0x000968, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_AsJack_Player_Character2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_bSuccess2) == 0x000970, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_AsJack_Player_Character3) == 0x000978, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_AsJack_Player_Character3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_DynamicCast_bSuccess3) == 0x000980, "Member 'ABP_TuboBase_C::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000988, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherActor2) == 0x000990, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherComp2) == 0x000998, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x0009A0, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_bFromSweep) == 0x0009A4, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_SweepResult) == 0x0009A8, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000A30, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherActor) == 0x000A38, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherComp) == 0x000A40, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000A48, "Member 'ABP_TuboBase_C::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_struct_Variable34) == 0x000A4C, "Member 'ABP_TuboBase_C::Temp_struct_Variable34' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable11) == 0x000A58, "Member 'ABP_TuboBase_C::Temp_string_Variable11' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_string_Variable12) == 0x000A68, "Member 'ABP_TuboBase_C::Temp_string_Variable12' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, Temp_bool_Variable3) == 0x000A78, "Member 'ABP_TuboBase_C::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6) == 0x000A80, "Member 'ABP_TuboBase_C::CallFunc_MakeGetAndReadRecipeBookMessageTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, K2Node_Select4_Default) == 0x000A90, "Member 'ABP_TuboBase_C::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(ABP_TuboBase_C, CallFunc_LearningRecipeBookFromItemId_OutLearningList6) == 0x000AA0, "Member 'ABP_TuboBase_C::CallFunc_LearningRecipeBookFromItemId_OutLearningList6' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TokugiPanelData_000

#include "Basic.hpp"

#include "JackGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.ExecuteUbergraph_BP_TokugiPanelData_000
// 0x02E0 (0x02E0 - 0x0000)
struct BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0002;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0003;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0004;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0005;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_000; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0006;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0007;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0008;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0009;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0002; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPanelDrawPos_PanelDrawPos;             // 0x00B4(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPanelDrawPos_PanelDrawPos2;            // 0x00BC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00010;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00011;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0003; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_CrackDirList2;                  // 0x00F8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FJackUMGTokugiPanelAnimData            K2Node_CustomEvent_AnimData;                       // 0x0108(0x0040)()
	TArray<int32>                                 CallFunc_GetCrackDirList_ReturnValue;              // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0004; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0005; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0006; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_CrackDirList;                   // 0x01A0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Scale;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item;      // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0007; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_BgScroll;                       // 0x01DC(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Panel_000_modern_C*    K2Node_CustomEvent_TokugiPanel;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0008; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0009; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           CallFunc_CreatePieceWidget_Return;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue5;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_00010; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_IF_TokugiPanel_Item_C> K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item2;     // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00012;  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBasePanel_ReturnValue;                  // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_273[0x1];                                      // 0x0273(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0274(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors2;                        // 0x0284(0x0010)(NoDestructor)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_Tokugi_Piece_Question_000_C*  CallFunc_CreateQuestionWidget_Return;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue2;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Menu_Tokugi_Piece_001_modern_C*    CallFunc_CreateBaseWidget_Return;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue2;            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue3;            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue3;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors3;                        // 0x02C8(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue6;         // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000");
static_assert(sizeof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000) == 0x0002E0, "Wrong size on BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, EntryPoint) == 0x000000, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000) == 0x000008, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0002) == 0x000018, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0002' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess2) == 0x000020, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0003) == 0x000028, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0003' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess3) == 0x000030, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0004) == 0x000038, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0004' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess4) == 0x000040, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0005) == 0x000048, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0005' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess5) == 0x000050, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_000) == 0x000058, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_000' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess6) == 0x000060, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0006) == 0x000068, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0006' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess7) == 0x000070, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0007) == 0x000078, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0007' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess8) == 0x000080, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0008) == 0x000088, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0008' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess9) == 0x000090, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0009) == 0x000098, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_0009' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess10) == 0x0000A0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0000A1, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0002) == 0x0000A8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0002' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess11) == 0x0000B0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_GetPanelDrawPos_PanelDrawPos) == 0x0000B4, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_GetPanelDrawPos_PanelDrawPos' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_GetPanelDrawPos_PanelDrawPos2) == 0x0000BC, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_GetPanelDrawPos_PanelDrawPos2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00010) == 0x0000C8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00010' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess12) == 0x0000D0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00011) == 0x0000D8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00011' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess13) == 0x0000E0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0003) == 0x0000E8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0003' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess14) == 0x0000F0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_CrackDirList2) == 0x0000F8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_CrackDirList2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_AnimData) == 0x000108, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_AnimData' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_GetCrackDirList_ReturnValue) == 0x000148, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_GetCrackDirList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_SwitchEnum_CmpSuccess) == 0x000158, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000159, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0004) == 0x000160, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0004' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess15) == 0x000168, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0005) == 0x000180, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0005' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess16) == 0x000188, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0006) == 0x000190, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0006' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess17) == 0x000198, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_CrackDirList) == 0x0001A0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_CrackDirList' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0001B0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_Scale) == 0x0001B4, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item) == 0x0001B8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess18) == 0x0001C8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0007) == 0x0001D0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0007' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess19) == 0x0001D8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue2) == 0x0001D9, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_BgScroll) == 0x0001DC, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_BgScroll' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_CustomEvent_TokugiPanel) == 0x0001E8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_CustomEvent_TokugiPanel' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue3) == 0x0001F0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0008) == 0x0001F8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0008' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess20) == 0x000200, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0009) == 0x000208, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_0009' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess21) == 0x000210, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_CreatePieceWidget_Return) == 0x000218, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_CreatePieceWidget_Return' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_AddChildToCanvas_ReturnValue) == 0x000220, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue5) == 0x000228, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000230, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_BooleanAND_ReturnValue) == 0x000238, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue4) == 0x000239, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_00010) == 0x000240, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_Question_00010' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess22) == 0x000248, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item2) == 0x000250, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsBP_IF_Tokugi_Panel_Item2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess23) == 0x000260, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue5) == 0x000261, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00012) == 0x000268, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_00012' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_DynamicCast_bSuccess24) == 0x000270, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsValid_ReturnValue6) == 0x000271, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_IsBasePanel_ReturnValue) == 0x000272, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_IsBasePanel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_MakeStruct_Anchors) == 0x000274, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_MakeStruct_Anchors2) == 0x000284, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_MakeStruct_Anchors2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_CreateQuestionWidget_Return) == 0x000298, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_CreateQuestionWidget_Return' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_AddChildToCanvas_ReturnValue2) == 0x0002A0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_AddChildToCanvas_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_CreateBaseWidget_Return) == 0x0002A8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_CreateBaseWidget_Return' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_SlotAsCanvasSlot_ReturnValue2) == 0x0002B0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_SlotAsCanvasSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_AddChildToCanvas_ReturnValue3) == 0x0002B8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_AddChildToCanvas_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_SlotAsCanvasSlot_ReturnValue3) == 0x0002C0, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_SlotAsCanvasSlot_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, K2Node_MakeStruct_Anchors3) == 0x0002C8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::K2Node_MakeStruct_Anchors3' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000, CallFunc_EqualEqual_ByteByte_ReturnValue6) == 0x0002D8, "Member 'BP_TokugiPanelData_000_C_ExecuteUbergraph_BP_TokugiPanelData_000::CallFunc_EqualEqual_ByteByte_ReturnValue6' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.CreateWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_TokugiPanelData_000_C_CreateWidget final
{
public:
	class UWBP_Menu_Tokugi_Panel_000_modern_C*    TokugiPanel_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TokugiPanelData_000_C_CreateWidget) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_CreateWidget");
static_assert(sizeof(BP_TokugiPanelData_000_C_CreateWidget) == 0x000008, "Wrong size on BP_TokugiPanelData_000_C_CreateWidget");
static_assert(offsetof(BP_TokugiPanelData_000_C_CreateWidget, TokugiPanel_0) == 0x000000, "Member 'BP_TokugiPanelData_000_C_CreateWidget::TokugiPanel_0' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.SetBackGroundScroll
// 0x0008 (0x0008 - 0x0000)
struct BP_TokugiPanelData_000_C_SetBackGroundScroll final
{
public:
	struct FVector2D                              BgScroll;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TokugiPanelData_000_C_SetBackGroundScroll) == 0x000004, "Wrong alignment on BP_TokugiPanelData_000_C_SetBackGroundScroll");
static_assert(sizeof(BP_TokugiPanelData_000_C_SetBackGroundScroll) == 0x000008, "Wrong size on BP_TokugiPanelData_000_C_SetBackGroundScroll");
static_assert(offsetof(BP_TokugiPanelData_000_C_SetBackGroundScroll, BgScroll) == 0x000000, "Member 'BP_TokugiPanelData_000_C_SetBackGroundScroll::BgScroll' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.SetDisplayScale
// 0x0004 (0x0004 - 0x0000)
struct BP_TokugiPanelData_000_C_SetDisplayScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TokugiPanelData_000_C_SetDisplayScale) == 0x000004, "Wrong alignment on BP_TokugiPanelData_000_C_SetDisplayScale");
static_assert(sizeof(BP_TokugiPanelData_000_C_SetDisplayScale) == 0x000004, "Wrong size on BP_TokugiPanelData_000_C_SetDisplayScale");
static_assert(offsetof(BP_TokugiPanelData_000_C_SetDisplayScale, Scale) == 0x000000, "Member 'BP_TokugiPanelData_000_C_SetDisplayScale::Scale' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.AnimOpen
// 0x0010 (0x0010 - 0x0000)
struct BP_TokugiPanelData_000_C_AnimOpen final
{
public:
	TArray<int32>                                 CrackDirList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_TokugiPanelData_000_C_AnimOpen) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_AnimOpen");
static_assert(sizeof(BP_TokugiPanelData_000_C_AnimOpen) == 0x000010, "Wrong size on BP_TokugiPanelData_000_C_AnimOpen");
static_assert(offsetof(BP_TokugiPanelData_000_C_AnimOpen, CrackDirList) == 0x000000, "Member 'BP_TokugiPanelData_000_C_AnimOpen::CrackDirList' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.PlayAnimData
// 0x0040 (0x0040 - 0x0000)
struct BP_TokugiPanelData_000_C_PlayAnimData final
{
public:
	struct FJackUMGTokugiPanelAnimData            AnimData_0;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_TokugiPanelData_000_C_PlayAnimData) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_PlayAnimData");
static_assert(sizeof(BP_TokugiPanelData_000_C_PlayAnimData) == 0x000040, "Wrong size on BP_TokugiPanelData_000_C_PlayAnimData");
static_assert(offsetof(BP_TokugiPanelData_000_C_PlayAnimData, AnimData_0) == 0x000000, "Member 'BP_TokugiPanelData_000_C_PlayAnimData::AnimData_0' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.AnimProvMasterFromClose
// 0x0010 (0x0010 - 0x0000)
struct BP_TokugiPanelData_000_C_AnimProvMasterFromClose final
{
public:
	TArray<int32>                                 CrackDirList;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_TokugiPanelData_000_C_AnimProvMasterFromClose) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_AnimProvMasterFromClose");
static_assert(sizeof(BP_TokugiPanelData_000_C_AnimProvMasterFromClose) == 0x000010, "Wrong size on BP_TokugiPanelData_000_C_AnimProvMasterFromClose");
static_assert(offsetof(BP_TokugiPanelData_000_C_AnimProvMasterFromClose, CrackDirList) == 0x000000, "Member 'BP_TokugiPanelData_000_C_AnimProvMasterFromClose::CrackDirList' has a wrong offset!");

// Function BP_TokugiPanelData_000.BP_TokugiPanelData_000_C.PlayResetPieceAnim
// 0x0010 (0x0010 - 0x0000)
struct BP_TokugiPanelData_000_C_PlayResetPieceAnim final
{
public:
	class UWBP_Menu_Tokugi_Piece_000_C*           K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TokugiPanelData_000_C_PlayResetPieceAnim) == 0x000008, "Wrong alignment on BP_TokugiPanelData_000_C_PlayResetPieceAnim");
static_assert(sizeof(BP_TokugiPanelData_000_C_PlayResetPieceAnim) == 0x000010, "Wrong size on BP_TokugiPanelData_000_C_PlayResetPieceAnim");
static_assert(offsetof(BP_TokugiPanelData_000_C_PlayResetPieceAnim, K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000) == 0x000000, "Member 'BP_TokugiPanelData_000_C_PlayResetPieceAnim::K2Node_DynamicCast_AsWBP_Menu_Tokugi_Piece_000' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_PlayResetPieceAnim, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_TokugiPanelData_000_C_PlayResetPieceAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TokugiPanelData_000_C_PlayResetPieceAnim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_TokugiPanelData_000_C_PlayResetPieceAnim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

